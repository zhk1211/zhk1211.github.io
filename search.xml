<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2020-2-15模拟赛题解</title>
    <url>/2020/02/23/2020-2-15%E6%A8%A1%E6%8B%9F%E8%B5%9B%E9%A2%98%E8%A7%A3/</url>
    <content><![CDATA[<p>这篇总的题解蒟蒻写了 $3h s$！作为回报，你们是不是应该去<a href="https://zhaohaikun.blog.luogu.org/" target="_blank" rel="noopener">$ZHK$ 的洛谷博客</a>里给 $ZHK$ 的所有题解点赞呢！</p>
<hr>
<a id="more"></a>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这场比赛我发挥欠佳，各种小失误不断，也需要我自己去反思吧，以后打模拟赛也要有选择性地去打，毕竟<strong>一天 $3$ 场比赛</strong>肯定会有影响。</p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="1-子数整数"><a href="#1-子数整数" class="headerlink" title="1. 子数整数"></a>1. 子数整数</h2><h3 id="错点"><a href="#错点" class="headerlink" title="错点"></a>错点</h3><p>考试的时候蒟蒻把 <code>No</code> 打成了 <code>NO</code>。</p>
<h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>这道题实际上就是个小模拟，您只要会 $for$ 循环就可以轻松过掉此题。</p>
<p>答案是直接统计一下就好了。</p>
<p>我们可以直接从 <code>10000</code> 到 <code>30000</code> 循环，算出 <code>s1</code> 、 <code>s2</code> 、 <code>s3</code>。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">10000</span>;i&lt;=<span class="number">30000</span>;i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> g=i%<span class="number">10</span>,s=i/<span class="number">10</span>%<span class="number">10</span>,b=i/<span class="number">100</span>%<span class="number">10</span>,q=i/<span class="number">1000</span>%<span class="number">10</span>,w=i/<span class="number">10000</span>%<span class="number">10</span>,s1=<span class="number">100</span>*w+<span class="number">10</span>*q+b,s2=<span class="number">100</span>*q+<span class="number">10</span>*b+s,s3=<span class="number">100</span>*b+s*<span class="number">10</span>+g;<span class="comment">//s1,s2,s3的计算</span></span><br><span class="line">    <span class="keyword">if</span>(s1%k==<span class="number">0</span>&amp;&amp;s2%k==<span class="number">0</span>&amp;&amp;s3%k==<span class="number">0</span>)writen(i),f=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="总代码"><a href="#总代码" class="headerlink" title="总代码"></a>总代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">writen</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    write(x);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> k,s1,s2,s3,g,s,b,q,w;</span><br><span class="line"><span class="keyword">bool</span> f;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    read(k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">10000</span>;i&lt;=<span class="number">30000</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> g=i%<span class="number">10</span>,s=i/<span class="number">10</span>%<span class="number">10</span>,b=i/<span class="number">100</span>%<span class="number">10</span>,q=i/<span class="number">1000</span>%<span class="number">10</span>,w=i/<span class="number">10000</span>%<span class="number">10</span>,s1=<span class="number">100</span>*w+<span class="number">10</span>*q+b,s2=<span class="number">100</span>*q+<span class="number">10</span>*b+s,s3=<span class="number">100</span>*b+s*<span class="number">10</span>+g;<span class="comment">//s1,s2,s3的计算</span></span><br><span class="line">        <span class="keyword">if</span>(s1%k==<span class="number">0</span>&amp;&amp;s2%k==<span class="number">0</span>&amp;&amp;s3%k==<span class="number">0</span>)writen(i),f=<span class="number">1</span>;</span><br><span class="line">    &#125;<span class="keyword">if</span>(f==<span class="number">0</span>)<span class="built_in">puts</span>(<span class="string">"No"</span>);<span class="comment">//考试时这里直接挂掉，打成了NO</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="2-安全逃离"><a href="#2-安全逃离" class="headerlink" title="2. 安全逃离"></a>2. 安全逃离</h2><h3 id="错点-1"><a href="#错点-1" class="headerlink" title="错点"></a>错点</h3><p>蒟蒻向老师报告题目有问题后没有认真看题，结果就死了。</p>
<h3 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h3><p>做到这道题的时候，我们考到数据范围很小，考虑高复杂度的做法。</p>
<p>我的做法是最暴力的做法，复杂度大概是 $O(cr^2 \times + rc^2 \times n)$，面对这么小的这么小的数据，这个做法显然能过。</p>
<p>我们先写一个 $check$ 函数，判断此时的矩阵是否安全。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=r;++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=c;j++)</span><br><span class="line">            <span class="keyword">if</span>(a[i][j])&#123;<span class="comment">//此点有牛</span></span><br><span class="line">                <span class="keyword">int</span> s=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">1</span>;l&lt;=i;l++)</span><br><span class="line">                    <span class="keyword">if</span>(a[l][j])&#123;</span><br><span class="line">                        s++;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> l=j;l&lt;=n;l++)</span><br><span class="line">                    <span class="keyword">if</span>(a[i][l])&#123;</span><br><span class="line">                        s++;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                <span class="keyword">if</span>(s==<span class="number">2</span>)<span class="keyword">return</span> <span class="literal">false</span>;<span class="comment">//如果有牛上面和右面都被堵死了，这个矩阵显然是不安全的</span></span><br><span class="line">            &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>当然还有更快速地写法啦</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">save</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> l=x[i]<span class="number">-1</span>;l&gt;=<span class="number">1</span>;l--)</span><br><span class="line">            <span class="keyword">if</span>(a[l][y[i]])&#123;</span><br><span class="line">                flag++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> l=y[i]+<span class="number">1</span>;l&lt;=n;l++)</span><br><span class="line">            <span class="keyword">if</span>(a[x[i]][l])&#123;</span><br><span class="line">                flag++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag==<span class="number">2</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>我们再写一个函数去枚举移掉哪头牛</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> f=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line">        a[x[i]][y[i]]--;</span><br><span class="line">        <span class="keyword">if</span>(save())&#123;<span class="comment">//如果安全</span></span><br><span class="line">            f=<span class="number">0</span>;</span><br><span class="line">            write(i);<span class="comment">//输出</span></span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        a[x[i]][y[i]]++;</span><br><span class="line">    &#125;<span class="keyword">if</span>(f)<span class="built_in">puts</span>(<span class="string">"-1"</span>);<span class="comment">//无解</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="总代码-1"><a href="#总代码-1" class="headerlink" title="总代码"></a>总代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">50</span>+<span class="number">10</span>,MAXK=<span class="number">100</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[MAXN][MAXN],n,m,k,x[MAXK],y[MAXK];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">save</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> l=x[i]<span class="number">-1</span>;l&gt;=<span class="number">1</span>;l--)</span><br><span class="line">            <span class="keyword">if</span>(a[l][y[i]])&#123;</span><br><span class="line">                flag++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> l=y[i]+<span class="number">1</span>;l&lt;=n;l++)</span><br><span class="line">            <span class="keyword">if</span>(a[x[i]][l])&#123;</span><br><span class="line">                flag++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag==<span class="number">2</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> f=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line">        a[x[i]][y[i]]--;<span class="comment">//移除</span></span><br><span class="line">        <span class="keyword">if</span>(save())&#123;</span><br><span class="line">            f=<span class="number">0</span>;</span><br><span class="line">            write(i);</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        a[x[i]][y[i]]++;<span class="comment">//注意回溯</span></span><br><span class="line">    &#125;<span class="keyword">if</span>(f)<span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    read(n);read(m);read(k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line">        read(x[i]);read(y[i]);</span><br><span class="line">        a[x[i]][y[i]]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(save())<span class="built_in">puts</span>(<span class="string">"0"</span>);</span><br><span class="line">    <span class="keyword">else</span> work();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="3-阶乘问题"><a href="#3-阶乘问题" class="headerlink" title="3. 阶乘问题"></a>3. 阶乘问题</h2><h3 id="错点-2"><a href="#错点-2" class="headerlink" title="错点"></a>错点</h3><p>蒟蒻竟然把 $/ 10$ 打成了 $\% 10$。</p>
<h3 id="分析-2"><a href="#分析-2" class="headerlink" title="分析"></a>分析</h3><p><del>做法显然</del></p>
<p>由于数字极大，我们应该先对 $1$~$n$ 的这些数字把末尾的 $0$ 全部删掉</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span>(x%<span class="number">10</span>==<span class="number">0</span>)x/=<span class="number">10</span>;</span><br></pre></td></tr></table></figure>
<p>再把乘好后的 $s$ 末尾的 $0$ 也都去掉。</p>
<p>关于为什么末尾会有 $0$，我来举个例子 $2 \times 5=10$ ，所以我们还要再筛一遍 $0$。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span>(s%<span class="number">10</span>==<span class="number">0</span>)s/=<span class="number">10</span>;</span><br></pre></td></tr></table></figure>
<h3 id="总代码-2"><a href="#总代码-2" class="headerlink" title="总代码"></a>总代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,s=<span class="number">1</span>;</span><br><span class="line">    read(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x=i;</span><br><span class="line">        <span class="keyword">while</span>(x%<span class="number">10</span>==<span class="number">0</span>)x/=<span class="number">10</span>;</span><br><span class="line">        s*=x;</span><br><span class="line">        <span class="keyword">while</span>(s%<span class="number">10</span>==<span class="number">0</span>)s/=<span class="number">10</span>;</span><br><span class="line">    &#125;write(s);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="4-拱猪计分"><a href="#4-拱猪计分" class="headerlink" title="4. 拱猪计分"></a>4. 拱猪计分</h2><h3 id="分析-3"><a href="#分析-3" class="headerlink" title="分析"></a>分析</h3><p>典型的大模拟。</p>
<p>明白了什么叫 $1h$ 读题，$0.2h$ 写代码</p>
<p>我们从读入开始</p>
<h4 id="读入"><a href="#读入" class="headerlink" title="读入"></a>读入</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;i++)&#123;</span><br><span class="line">    read(size[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=size[i];j++)&#123;</span><br><span class="line">        <span class="keyword">char</span> k;<span class="keyword">int</span> p;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;k&gt;&gt;p;</span><br><span class="line">        <span class="keyword">if</span>(k==<span class="string">'H'</span>)card[i][p]=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(k==<span class="string">'S'</span>)card[i][<span class="number">14</span>]=<span class="literal">true</span>;</span><br><span class="line">               <span class="keyword">else</span> <span class="keyword">if</span>(k==<span class="string">'D'</span>)card[i][<span class="number">15</span>]=<span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(k==<span class="string">'C'</span>)card[i][<span class="number">16</span>]=<span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>我们用 $card_{i,j}$ 记录第 $i$ 个人，有没第 $j$ 张得分牌。</p>
<h4 id="计分"><a href="#计分" class="headerlink" title="计分"></a>计分</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;i++)&#123;</span><br><span class="line">    <span class="keyword">bool</span> flag=<span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">13</span>;j++)</span><br><span class="line">        <span class="keyword">if</span>(card[i][j]==<span class="literal">false</span>)&#123;</span><br><span class="line">            flag=<span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">if</span>(flag)&#123;<span class="comment">//有没有红心牌</span></span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">200</span>;<span class="comment">//所有红心牌以+200分计算。</span></span><br><span class="line">        <span class="keyword">if</span>(card[i][<span class="number">14</span>]&amp;&amp;card[i][<span class="number">15</span>])ans=<span class="number">500</span>;<span class="comment">//若S12、D11皆在吃下所有红心牌之一家，则此玩家得+500分。 </span></span><br><span class="line">        <span class="keyword">else</span> ans=ans+card[i][<span class="number">14</span>]*fraction[<span class="number">14</span>]+card[i][<span class="number">15</span>]*fraction[<span class="number">15</span>];</span><br><span class="line">        <span class="keyword">if</span>(card[i][<span class="number">16</span>])ans*=<span class="number">2</span>;<span class="comment">//若除了C10还有其它计分牌，则将其它计分牌所得分数加倍计算。 </span></span><br><span class="line">        work(ans);<span class="comment">//输出</span></span><br><span class="line">        <span class="built_in">putchar</span>(<span class="number">32</span>);<span class="comment">//输出</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">bool</span> flg=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">15</span>;j++)</span><br><span class="line">            <span class="keyword">if</span>(card[i][j]==<span class="literal">true</span>)&#123;</span><br><span class="line">                flg=<span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">if</span>(flg)&#123;</span><br><span class="line">            <span class="keyword">if</span>(card[i][<span class="number">16</span>])work(<span class="number">50</span>);<span class="comment">//若持有C10的玩家只有该张牌而没有任何其它牌则得+50分</span></span><br><span class="line">            <span class="keyword">else</span> work(<span class="number">0</span>);<span class="comment">//若未持有这16张牌之任一张则以得零分计算。 </span></span><br><span class="line">            <span class="built_in">putchar</span>(<span class="number">32</span>);<span class="comment">//输出</span></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">15</span>;j++)</span><br><span class="line">                <span class="keyword">if</span>(card[i][j])ans+=fraction[j];</span><br><span class="line">            <span class="keyword">if</span>(card[i][<span class="number">16</span>])ans*=<span class="number">2</span>;</span><br><span class="line">            work(ans);<span class="comment">//输出</span></span><br><span class="line">            <span class="built_in">putchar</span>(<span class="number">32</span>);<span class="comment">//输出</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="built_in">puts</span>(<span class="string">""</span>);</span><br></pre></td></tr></table></figure>
<h3 id="总代码-3"><a href="#总代码-3" class="headerlink" title="总代码"></a>总代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">cout</span>&lt;&lt;x;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(x&gt;<span class="number">0</span>)<span class="built_in">cout</span>&lt;&lt;<span class="string">'+'</span>&lt;&lt;x;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> fraction[<span class="number">17</span>]=&#123;<span class="number">0</span>,<span class="number">-50</span>,<span class="number">-2</span>,<span class="number">-3</span>,<span class="number">-4</span>,<span class="number">-5</span>,<span class="number">-6</span>,<span class="number">-7</span>,<span class="number">-8</span>,<span class="number">-9</span>,<span class="number">-10</span>,<span class="number">-20</span>,<span class="number">-30</span>,<span class="number">-40</span>,<span class="number">-100</span>,+<span class="number">100</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> size[<span class="number">5</span>];</span><br><span class="line"><span class="keyword">bool</span> card[<span class="number">5</span>][<span class="number">17</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="built_in">memset</span>(card,<span class="literal">false</span>,<span class="keyword">sizeof</span>(card));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;i++)&#123;</span><br><span class="line">            read(size[i]);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=size[i];j++)&#123;</span><br><span class="line">                <span class="keyword">char</span> k;<span class="keyword">int</span> p;</span><br><span class="line">                <span class="built_in">cin</span>&gt;&gt;k&gt;&gt;p;</span><br><span class="line">                <span class="keyword">if</span>(k==<span class="string">'H'</span>)card[i][p]=<span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(k==<span class="string">'S'</span>)card[i][<span class="number">14</span>]=<span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(k==<span class="string">'D'</span>)card[i][<span class="number">15</span>]=<span class="literal">true</span>;</span><br><span class="line">                        <span class="keyword">else</span> <span class="keyword">if</span>(k==<span class="string">'C'</span>)card[i][<span class="number">16</span>]=<span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(size[<span class="number">1</span>]+size[<span class="number">2</span>]+size[<span class="number">3</span>]+size[<span class="number">4</span>]==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">bool</span> flag=<span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">13</span>;j++)</span><br><span class="line">                <span class="keyword">if</span>(card[i][j]==<span class="literal">false</span>)&#123;</span><br><span class="line">                    flag=<span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">                <span class="keyword">int</span> ans=<span class="number">200</span>;</span><br><span class="line">                <span class="keyword">if</span>(card[i][<span class="number">14</span>]&amp;&amp;card[i][<span class="number">15</span>])ans=<span class="number">500</span>;</span><br><span class="line">                <span class="keyword">else</span> ans=ans+card[i][<span class="number">14</span>]*fraction[<span class="number">14</span>]+card[i][<span class="number">15</span>]*fraction[<span class="number">15</span>];</span><br><span class="line">                <span class="keyword">if</span>(card[i][<span class="number">16</span>])ans*=<span class="number">2</span>;</span><br><span class="line">                work(ans);</span><br><span class="line">                <span class="built_in">putchar</span>(<span class="number">32</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">bool</span> flg=<span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">15</span>;j++)</span><br><span class="line">                    <span class="keyword">if</span>(card[i][j]==<span class="literal">true</span>)&#123;</span><br><span class="line">                        flg=<span class="literal">false</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                <span class="keyword">if</span>(flg)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(card[i][<span class="number">16</span>])work(<span class="number">50</span>);</span><br><span class="line">                    <span class="keyword">else</span> work(<span class="number">0</span>);</span><br><span class="line">                    <span class="built_in">putchar</span>(<span class="number">32</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">15</span>;j++)</span><br><span class="line">                        <span class="keyword">if</span>(card[i][j])ans+=fraction[j];</span><br><span class="line">                    <span class="keyword">if</span>(card[i][<span class="number">16</span>])ans*=<span class="number">2</span>;</span><br><span class="line">                    work(ans);</span><br><span class="line">                    <span class="built_in">putchar</span>(<span class="number">32</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="5-变色龙"><a href="#5-变色龙" class="headerlink" title="5. 变色龙"></a>5. 变色龙</h2><h3 id="错点-3"><a href="#错点-3" class="headerlink" title="错点"></a>错点</h3><p>$bfs$ 的 $priority$_$queue$ 优化写假了。</p>
<h3 id="分析-4"><a href="#分析-4" class="headerlink" title="分析"></a>分析</h3><p>最短路问题。</p>
<p>为什么能使用 $dij$ 跑最短路？明显会 $T$ 啊！</p>
<p>点数：$2000 \times 2000=400,0000$</p>
<p>边数：小学奥数之等差数列 </p>
<p>$\begin{matrix}\underbrace{0+4+\cdots+7996}\\2000项\end{matrix}=(7996+0)  \times 2000 \div 2=7996 \times 1000=799,6000$</p>
<p>我们知道 $dij$ 的复杂度是 $O(n \log m)$ </p>
<p>简单计算一下 </p>
<p>$\log m=\log 7996000 \approx 26$，$26 \times 4000000=1,0400,0000 &gt; 1,0000,0000‬$</p>
<p>所以显然是会 $T$ 掉的<del>（除非玄学卡常，比如：等式展开之类的）</del></p>
<p>而 $bfs$ 的期望复杂度是 $O(n+m)$ 的。</p>
<p>$bfs$ 大概就是这种写法</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">q.push((node)&#123;xx,yy,<span class="number">0</span>&#125;);</span><br><span class="line">    <span class="keyword">while</span>(q.size())&#123;</span><br><span class="line">    node f=q.top();</span><br><span class="line">    q.pop();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x=f.x+dx[i],y=f.y+dy[i];</span><br><span class="line">        <span class="keyword">if</span>(x&gt;=<span class="number">1</span>&amp;&amp;x&lt;=n&amp;&amp;y&gt;=<span class="number">1</span>&amp;&amp;y&lt;=m)&#123;</span><br><span class="line">            <span class="keyword">int</span> as=ans[f.x][f.y];</span><br><span class="line">            <span class="keyword">if</span>(a[x][y]!=a[f.x][f.y])as++;</span><br><span class="line">            <span class="keyword">if</span>(as&lt;ans[x][y])ans[x][y]=as,q.push((node)&#123;x,y&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="总代码-4"><a href="#总代码-4" class="headerlink" title="总代码"></a>总代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">2000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,xx,yy,a[MAXN][MAXN],ans[MAXN][MAXN];</span><br><span class="line"><span class="keyword">int</span> dx[<span class="number">4</span>]=&#123;<span class="number">-1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dy[<span class="number">4</span>]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">1</span>&#125;;</span><br><span class="line"><span class="built_in">queue</span>&lt;node&gt;q;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    read(n);read(m);read(xx);read(yy);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">            read(a[i][j]);</span><br><span class="line">    q.push((node)&#123;xx,yy,<span class="number">0</span>&#125;);</span><br><span class="line">    <span class="keyword">while</span>(q.size())&#123;</span><br><span class="line">        node f=q.top();</span><br><span class="line">        q.pop();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> x=f.x+dx[i],y=f.y+dy[i];</span><br><span class="line">            <span class="keyword">if</span>(x&gt;=<span class="number">1</span>&amp;&amp;x&lt;=n&amp;&amp;y&gt;=<span class="number">1</span>&amp;&amp;y&lt;=m)&#123;</span><br><span class="line">                <span class="keyword">int</span> as=ans[f.x][f.y];</span><br><span class="line">                <span class="keyword">if</span>(a[x][y]!=a[f.x][f.y])as++;</span><br><span class="line">                <span class="keyword">if</span>(as&lt;ans[x][y])ans[x][y]=as,q.push((node)&#123;x,y&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;ans[i][j]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="6-和谐分组"><a href="#6-和谐分组" class="headerlink" title="6. 和谐分组"></a>6. 和谐分组</h2><h3 id="讲解二分"><a href="#讲解二分" class="headerlink" title="讲解二分"></a>讲解二分</h3><p>终于是正常一点的题目了，并且是我最喜欢的算法（蒟蒻最喜欢的算法是并查集、二分、dp、LCA）</p>
<p>二分是确定一个答案然后对其分析，而答案常常有这样一种情况：</p>
<p><img src="https://i.loli.net/2020/02/23/1ogLUr7OITxSV8R.png" alt="左闭右开"></p>
<p>​                                 左闭右开</p>
<p><img src="https://i.loli.net/2020/02/23/y1FNhUaTKIAQBCo.png" alt="右闭左开"></p>
<p>​                                    右闭左开</p>
<p>题目通常会让我们找符合条件的最大值或最小值。</p>
<p>以这道题为例，就是去在可能的谐度度中找一个最小的。</p>
<p>比答案大的都可以，不答案小的都不可以。</p>
<p>这个我们叫右闭左开。</p>
<p>而比答案小的都可以，不答案大的都不可以。</p>
<p>这个我们叫左闭右开。</p>
<p>二分顾名思义，就是二分。</p>
<p>左闭右开：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> l=<span class="number">0</span>,r=INT_MAX/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">while</span>(l+<span class="number">1</span>&lt;r)&#123;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(check(mid))l=mid;<span class="comment">//这里不同</span></span><br><span class="line">    <span class="keyword">else</span> r=mid;<span class="comment">//这里不同</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>右闭左开：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> l=<span class="number">0</span>,r=INT_MAX/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">while</span>(l+<span class="number">1</span>&lt;r)&#123;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(check(mid))r=mid;<span class="comment">//这里不同</span></span><br><span class="line">    <span class="keyword">else</span> l=mid;<span class="comment">//这里不同</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="分析-5"><a href="#分析-5" class="headerlink" title="分析"></a>分析</h3><p>现在我们已经会了二分，我们可以愉快地做这道题了。</p>
<p>我们可以开始写 $check$ 函数：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="comment">//check函数顾名思义，就是用来反对我们的答案x是否可行</span></span><br><span class="line">    <span class="keyword">int</span> maxn=a[<span class="number">1</span>],minn=a[<span class="number">1</span>],s=<span class="number">1</span>;<span class="comment">//初始化</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        maxn=max(maxn,a[i]);<span class="comment">//最大</span></span><br><span class="line">        minn=min(minn,a[i]);<span class="comment">//最小</span></span><br><span class="line">        <span class="keyword">if</span>(maxn-minn&gt;x)&#123;</span><br><span class="line">            s++;<span class="comment">//新分一个组</span></span><br><span class="line">            maxn=a[i];<span class="comment">//初始化</span></span><br><span class="line">            minn=a[i];<span class="comment">//初始化</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s&lt;=k;<span class="comment">//如果组数小于等于k，就说明不可行</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="总代码-5"><a href="#总代码-5" class="headerlink" title="总代码"></a>总代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n,k,a[MAXN];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> maxn=a[<span class="number">1</span>],minn=a[<span class="number">1</span>],s=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        maxn=max(maxn,a[i]);</span><br><span class="line">        minn=min(minn,a[i]);</span><br><span class="line">        <span class="keyword">if</span>(maxn-minn&gt;x)&#123;</span><br><span class="line">            s++;</span><br><span class="line">            maxn=a[i];</span><br><span class="line">            minn=a[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s&lt;=k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    read(n);read(k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)read(a[i]);</span><br><span class="line">    <span class="keyword">int</span> l=<span class="number">0</span>,r=INT_MAX/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">while</span>(l+<span class="number">1</span>&lt;r)&#123;</span><br><span class="line">        <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(check(mid))r=mid;</span><br><span class="line">        <span class="keyword">else</span> l=mid;</span><br><span class="line">    &#125;write(r);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>模拟赛</category>
      </categories>
      <tags>
        <tag>二分</tag>
        <tag>模拟</tag>
        <tag>bfs</tag>
        <tag>dij</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 P1052 【过河】</title>
    <url>/2020/02/21/%E9%A2%98%E8%A7%A3%20P1052%20%E3%80%90%E8%BF%87%E6%B2%B3%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1052" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p1052" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<hr>
<a id="more"></a>
<p>显然是$dp$，是用$STL$当中的<a href="https://zhaohaikun.blog.luogu.org/solution-p1305" target="_blank" rel="noopener">$map$</a>可以做到<a href="https://www.luogu.org/record/27685820" target="_blank" rel="noopener">30分</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;//万能头文件</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> l,n,s,t;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="keyword">bool</span>&gt;m;<span class="comment">//记有没有石头</span></span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;dp;<span class="comment">//最少踩到石头的个数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;l&gt;&gt;s&gt;&gt;t&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;x;</span><br><span class="line">        m[x]=<span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=l+t<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        dp[i]=INT_MAX/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=s;j&lt;=t&amp;&amp;j&lt;=i;j++)dp[i]=min(dp[i],dp[i-j]);<span class="comment">//倒退</span></span><br><span class="line">        <span class="keyword">if</span>(m[i])dp[i]++;</span><br><span class="line">    &#125;<span class="keyword">int</span> s=dp[l];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=l+<span class="number">1</span>;i&lt;=l+t<span class="number">-1</span>;i++)s=min(s,dp[i]);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;s;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>之后，我们该想一想如何$AC$这道题</p>
<p>我们发现石头数量很少，而独木桥却很长</p>
<p><img src="https://i.loli.net/2019/11/23/MndaCKcbu7ZoUyi.png" alt="360截图18141224304435.png"></p>
<p>遇到这张图，我们可能还会选择暴力的方法</p>
<p><img src="https://i.loli.net/2019/11/23/6mNA9akXPqD7pQv.png" alt="360截图170405117195111.png"></p>
<p>但是遇到这张图，你还会用暴力吗？</p>
<p>空的地方就是随便走就行了，完全可以不用老老实实的去看，我们可以把路径压缩，更简单地说就是如果后面的一个石头与前面的一个石头距离太远，我们可以把后面一个石头推到前一个石头附近，至于这个量是多少呢，需要自己把握。</p>
<p>我自己还是觉得稍微保险一点，不要$TLE$就行了，所以我选择把这个数定在$1000$，当然听同学说，他定的比较小也过了，这并没有关系。</p>
<p>所以，我们可以看代码了</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> l,s,t,m,a[<span class="number">110</span>],dp[<span class="number">100010</span>],b[<span class="number">110</span>];</span><br><span class="line"><span class="keyword">bool</span> x[<span class="number">100010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;l;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;s&gt;&gt;t&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)<span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    sort(a+<span class="number">1</span>,a+<span class="number">1</span>+m);</span><br><span class="line">    <span class="keyword">if</span>(s==t)&#123;<span class="comment">//这个应该很简单，我上面没有说</span></span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">            <span class="keyword">if</span>(a[i]%s==<span class="number">0</span>)ans++;<span class="comment">//如果会经过它，答案+1</span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;ans;<span class="comment">//输出</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">        <span class="keyword">if</span>(a[i]-a[i<span class="number">-1</span>]&gt;<span class="number">1000</span>)b[i]=b[i<span class="number">-1</span>]+<span class="number">1000</span>;<span class="comment">//注意啦，如果原来的距离小于1000，你要保持不变</span></span><br><span class="line">        <span class="keyword">else</span> b[i]=a[i]-a[i<span class="number">-1</span>]+b[i<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)x[b[i]]=<span class="literal">true</span>;<span class="comment">//石头</span></span><br><span class="line">    l=b[m];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=l+t<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        dp[i]=INT_MAX/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=s;j&lt;=t&amp;&amp;j&lt;=i;j++)dp[i]=min(dp[i],dp[i-j]);<span class="comment">//转移状态</span></span><br><span class="line">        <span class="keyword">if</span>(x[i])dp[i]++;</span><br><span class="line">    &#125;<span class="keyword">int</span> ans=dp[l];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=l+t<span class="number">-1</span>;i++)ans=min(ans,dp[i]);<span class="comment">//打擂法求最小值</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans;<span class="comment">//输出</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>洛谷题库</category>
        <category>noip提高组</category>
      </categories>
      <tags>
        <tag>dp</tag>
        <tag>离散化</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 P4302 【[SCOI2003]字符串折叠】</title>
    <url>/2020/02/21/%E9%A2%98%E8%A7%A3%20P4302%20%E3%80%90%5BSCOI2003%5D%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8A%98%E5%8F%A0%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4302" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p4302" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<hr>
<a id="more"></a>
<h2 id="讲讲我的做法"><a href="#讲讲我的做法" class="headerlink" title="讲讲我的做法"></a>讲讲我的做法</h2><p>题目大意：对一个字符串进行折叠是它长度最小</p>
<p>看一眼数据范围：哇！字符串长度不超过<strong>100</strong>！这是一道省选题，不可能给你太宽裕的时限，所以，题目基本暗示你要用$n^{3}$多一些的算法复杂度。</p>
<p>这是一道最优化的题目，常见求最优化问题的算法比如贪心，模拟，枚举我都想不出什么好办法，唯独觉得像一道区间$dp$</p>
<h3 id="区间-dp-的分析"><a href="#区间-dp-的分析" class="headerlink" title="区间$dp$的分析"></a>区间$dp$的分析</h3><h4 id="解释状态"><a href="#解释状态" class="headerlink" title="解释状态"></a>解释状态</h4><p>我们用$f[i][j]$表示$i$到$j$这个区间内最小的长度</p>
<p>首先，我们可以把$i$~$j$这个区间的字符串拆成2部分处理</p>
<p>就有了这段代码：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">2</span>;l&lt;=n;l++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,j=i+l<span class="number">-1</span>;j&lt;=n;i++,j++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;j;k++)</span><br><span class="line">            f[i][j]=min(f[i][j],f[i][k]+f[k+<span class="number">1</span>][j]);</span><br></pre></td></tr></table></figure><br>当然我用了字符串，然后加空格，这样更加符合人脑思维</p>
<p>也有同学喜欢用字符数组，我也写了这样的一段代码<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">2</span>;l&lt;=n;l++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>,j=i+len<span class="number">-1</span>;j&lt;n;i++,j++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;j;k++)</span><br><span class="line">            f[i][j]=min(f[i][j],f[i][k]+f[k+<span class="number">1</span>][j]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h4 id="折叠"><a href="#折叠" class="headerlink" title="折叠"></a>折叠</h4><p>至于如何判断能否折叠，我呢用了一个函数——$check$，来检查一下是否可以折叠</p>
<p>字符串代码：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=r;i++)</span><br><span class="line">        <span class="keyword">if</span>(st[i]!=st[(i-l)%len+l])<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>字符数组代码<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">char</span> s[],<span class="keyword">int</span> n,<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=len;i&lt;n;i++)</span><br><span class="line">        <span class="keyword">if</span>(s[i]!=s[i%len])<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>判断好了是否可以折叠，我们就可以去写状态了，从$i$~$j$,判断区间折叠的循环节</p>
<p>字符串代码<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">2</span>;l&lt;=n;l++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,j=i+l<span class="number">-1</span>;j&lt;=n;i++,j++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;j;k++)</span><br><span class="line">            f[i][j]=min(f[i][j],f[i][k]+f[k+<span class="number">1</span>][j]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;j;k++)&#123;</span><br><span class="line">            <span class="keyword">int</span> len=k-i+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(l%len!=<span class="number">0</span>)<span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(check(i,j,len))f[i][j]=min(f[i][j],f[i][k]+<span class="number">2</span>+m[l/len]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>字符数组代码<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">2</span>;l&lt;=n;l++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,j=i+l<span class="number">-1</span>;j&lt;n;i++,j++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;j;k++)</span><br><span class="line">            f[i][j]=min(f[i][j],f[i][k]+f[k+<span class="number">1</span>][j]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;j;k++)&#123;</span><br><span class="line">            <span class="keyword">int</span> len=k-i+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(l%len!=<span class="number">0</span>)<span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(check(s+i,l,len))f[i][j]=min(f[i][j],f[i][k]+<span class="number">2</span>+m[l/len]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h4 id="边界条件以及初始化"><a href="#边界条件以及初始化" class="headerlink" title="边界条件以及初始化"></a>边界条件以及初始化</h4><p>刚刚的代码里出现里$m$，现在我就来解释一下$m$数组是干什么的</p>
<p><strong>$m[i]$的值表示的是i的位数</strong>，因为字符串的长度跟数字的位数有关</p>
<p>提到了$m$数组的左右自然由于提及如何用代码实现</p>
<p>我用的是最简单的方法，$for$循环扫，<strong>注意</strong>：<strong>100也要赋值，万一数据给你100个同样的字符</strong><br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">9</span>;i++)m[i]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">10</span>;i&lt;=<span class="number">99</span>;i++)m[i]=<span class="number">2</span>;</span><br><span class="line">m[<span class="number">100</span>]=<span class="number">3</span>;</span><br></pre></td></tr></table></figure></p>
<p>现在我们想一想初始化怎么做？</p>
<p>显然，$f[i][i]=1$，如何数组的初值要设为$INF$<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">memset</span>(f,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)f[i][i]=<span class="number">1</span>;</span><br></pre></td></tr></table></figure></p>
<h4 id="现在我们已经做完了所有的步骤，让我们看一看完整代码吧"><a href="#现在我们已经做完了所有的步骤，让我们看一看完整代码吧" class="headerlink" title="现在我们已经做完了所有的步骤，让我们看一看完整代码吧"></a>现在我们已经做完了所有的步骤，让我们看一看完整代码吧</h4><p>字符串代码<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">string</span> st;</span><br><span class="line"><span class="keyword">int</span> n,m[<span class="number">110</span>],f[<span class="number">110</span>][<span class="number">110</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=r;i++)</span><br><span class="line">        <span class="keyword">if</span>(st[i]!=st[(i-l)%len+l])<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;st;</span><br><span class="line">    n=st.size();</span><br><span class="line">    st=<span class="string">' '</span>+st;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">9</span>;i++)m[i]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">10</span>;i&lt;=<span class="number">99</span>;i++)m[i]=<span class="number">2</span>;</span><br><span class="line">    m[<span class="number">100</span>]=<span class="number">3</span>;</span><br><span class="line">    <span class="built_in">memset</span>(f,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)f[i][i]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">2</span>;l&lt;=n;l++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,j=i+l<span class="number">-1</span>;j&lt;=n;i++,j++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;j;k++)</span><br><span class="line">                f[i][j]=min(f[i][j],f[i][k]+f[k+<span class="number">1</span>][j]);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;j;k++)&#123;</span><br><span class="line">                <span class="keyword">int</span> len=k-i+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(l%len!=<span class="number">0</span>)<span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">if</span>(check(i,j,len))f[i][j]=min(f[i][j],f[i][k]+<span class="number">2</span>+m[l/len]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,f[<span class="number">1</span>][n]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>字符数组代码<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">110</span>];</span><br><span class="line"><span class="keyword">int</span> n,m[<span class="number">110</span>],f[<span class="number">110</span>][<span class="number">110</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">char</span> s[],<span class="keyword">int</span> n,<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=len;i&lt;n;i++)</span><br><span class="line">        <span class="keyword">if</span>(s[i]!=s[i%len])<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">    n=<span class="built_in">strlen</span>(s);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">9</span>;i++)m[i]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">10</span>;i&lt;=<span class="number">99</span>;i++)m[i]=<span class="number">2</span>;</span><br><span class="line">    m[<span class="number">100</span>]=<span class="number">3</span>;</span><br><span class="line">    <span class="built_in">memset</span>(f,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)f[i][i]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">2</span>;l&lt;=n;l++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,j=i+l<span class="number">-1</span>;j&lt;n;i++,j++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;j;k++)</span><br><span class="line">                f[i][j]=min(f[i][j],f[i][k]+f[k+<span class="number">1</span>][j]);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;j;k++)&#123;</span><br><span class="line">                <span class="keyword">int</span> len=k-i+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(l%len!=<span class="number">0</span>)<span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">if</span>(check(s+i,l,len))f[i][j]=min(f[i][j],f[i][k]+<span class="number">2</span>+m[l/len]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,f[<span class="number">0</span>][n<span class="number">-1</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度"></a>时间复杂度</h3><p>看上去我们连续套了4个循环，然而真的时间复杂度就达到了$n^{4}$吗？其实不是的</p>
<p>首先$n^{3}$是肯定要的，那么为什么时间复杂度没有达到$n^{4}$呢！</p>
<p>原因在于我们的continue剪枝，它能够给这个$n^{4}$的复杂度加上一个$log$</p>
<p>为什么？</p>
<p>我们要check的显然是$l$的因数，然而$l$的因数个数$\approx$ $\log{l}$</p>
<p>现实当中的复杂度还会更小，因为$check$的复杂度没有到$O(n)$，它不是从头开始，没有到头结束，并且一旦发现错误后会直接$return$</p>
<p>其实可以把里面的2个循环并成一个循环，但为了让大家看的更清楚，就不演示了</p>
]]></content>
      <categories>
        <category>洛谷题库</category>
      </categories>
      <tags>
        <tag>dp</tag>
        <tag>区间dp</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 P1748 【H数】</title>
    <url>/2020/02/21/%E9%A2%98%E8%A7%A3%20P1748%20%E3%80%90H%E6%95%B0%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1748" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p1748" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<hr>
<a id="more"></a>
<h1 id="我来讲讲-dp-的做法"><a href="#我来讲讲-dp-的做法" class="headerlink" title="我来讲讲 $dp$ 的做法"></a>我来讲讲 $dp$ 的做法</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>昨天 $PHY$ 大佬问我，这题怎么做？考虑到他没学过 $set$ 、 $priority_queue$ 和 $queue$ 。之后，我就想到了可以用 $dp$ 来解决这道题。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="设置状态"><a href="#设置状态" class="headerlink" title="设置状态"></a>设置状态</h3><p>很显然，我们可以用 $f[i]$ 表示第$i$个数是多少。</p>
<h3 id="转移"><a href="#转移" class="headerlink" title="转移"></a>转移</h3><p>第$i$个$H$数是多少，我们显然应该从前面的$i-1$个数去分别$\times2$、$\times3$、$\times5$、$\times7$中取比第$i-1$个$H$数大的最小数。</p>
<h3 id="边界条件"><a href="#边界条件" class="headerlink" title="边界条件"></a>边界条件</h3><p>$f_1=1$是很显然的</p>
<p>此外还要注意$f_0=0$</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>我们现在就可以开始写代码了</p>
<p><strong>注意开$long$ $long$</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> f[<span class="number">10010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(f,<span class="number">127</span>,<span class="keyword">sizeof</span>(f));<span class="comment">//为了找最小，我们最开始就得赋成最大</span></span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    read(n);</span><br><span class="line">    f[<span class="number">0</span>]=<span class="number">0</span>;<span class="comment">//初始化</span></span><br><span class="line">    f[<span class="number">1</span>]=<span class="number">1</span>;<span class="comment">//初始化</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i<span class="number">-1</span>;j&gt;=<span class="number">1</span>;j--)</span><br><span class="line">            <span class="keyword">if</span>(f[j]*<span class="number">2</span>&gt;f[i<span class="number">-1</span>])f[i]=min(f[i],f[j]*<span class="number">2</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(f[j]*<span class="number">3</span>&gt;f[i<span class="number">-1</span>])f[i]=min(f[i],f[j]*<span class="number">3</span>);</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(f[j]*<span class="number">5</span>&gt;f[i<span class="number">-1</span>])f[i]=min(f[i],f[j]*<span class="number">5</span>);</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(f[j]*<span class="number">7</span>&gt;f[i<span class="number">-1</span>])f[i]=min(f[i],f[j]*<span class="number">7</span>);</span><br><span class="line">                        <span class="keyword">else</span> <span class="keyword">break</span>;<span class="comment">//优化</span></span><br><span class="line">    write(f[n]);<span class="comment">//输出</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>这个代码还是很简短的，十分好写，希望大家以后学习也能好好想想一题多解</p>
<p>最后来求一下赞和评论！</p>
]]></content>
      <categories>
        <category>洛谷题库</category>
      </categories>
      <tags>
        <tag>dp</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 P2070 【刷墙】</title>
    <url>/2020/02/21/%E9%A2%98%E8%A7%A3%20P2070%20%E3%80%90%E5%88%B7%E5%A2%99%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2070" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p2070" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<hr>
<a id="more"></a>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><a href="http://www.zhaohaikun.cn/2020/02/10/ti-jie-p2070-shua-qiang/" target="_blank" rel="noopener">$ZHK$私人博客体验更佳</a></p>
<p>这道题目，$n&lt;=10^5$，显然在暗示我们使用$n \log n$的做法，我就是用了一个简单的贪心，通过了此题。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>在这道题中，我们发现，可以把 $Bessie$ 每次走的路看成是对序列的一段区间染色。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> x;<span class="keyword">char</span> y;</span><br><span class="line">    read(x);<span class="built_in">cin</span>&gt;&gt;y;</span><br><span class="line">    a[i].l=position;</span><br><span class="line">    <span class="keyword">if</span>(y==<span class="string">'L'</span>)position-=x;<span class="comment">//Bessie往左走</span></span><br><span class="line">    <span class="keyword">else</span> position+=x;<span class="comment">//Bessie往右走</span></span><br><span class="line">    a[i].r=position;</span><br><span class="line">    <span class="keyword">if</span>(a[i].l&gt;a[i].r)swap(a[i].l,a[i].r);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里的 $a$数组是一个结构体——$node$<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l,r;<span class="comment">//每次染色的左端点和右端点</span></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(<span class="keyword">const</span> node&amp;b)<span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> l&lt;b.l;<span class="comment">//按左端点从小到大排序</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;a[MAXN];</span><br></pre></td></tr></table></figure><br>之后，我们就要说真正的思路了，我们对于 $a$ 序列排序后，会有这样一个画面。</p>
<p><img src="https://i.loli.net/2020/02/10/yELKiHaF1QPTD3m.png" alt=""></p>
<p>我们定义两个变量——$lft$和$rgt$，记录可能区间的左端点和右端点。</p>
<p>这里面我们记录的是<strong>有可能和下面相交的区间</strong>，什么意思？比如那张图，我们标一下号</p>
<p><img src="https://i.loli.net/2020/02/10/ZBfRq9P2JwOVjIy.png" alt=""></p>
<p>当我么扫描第 $1$ 个区间时，我们发现，之后有可能被覆盖到的区间是 $lft=0,rgt=15$。</p>
<p>当我们继续扫描，到第 $2$ 个区间时，我们发现，之后可能被覆盖到的区间是 $lft=15,rgt=18$。</p>
<p>可能有人会问，$5$~$15$ 这段消失，我们还能理解，但是为什么 $0$~$5$ 这段也没了呢，因为第 $2$ 个区间的$l$都大约 $0$ 了，之后的区间肯定就更大于 $0$ 了，我们是按 $l$ 从小到大排序的啊。</p>
<p>所以，我可以放一下代码了：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">    <span class="keyword">if</span>(a[i].r&gt;lft)&#123;<span class="comment">//如果跟可能被覆盖到的区间有交</span></span><br><span class="line">        a[i].l=max(a[i].l,lft);<span class="comment">//这里是使得之后的代码可以少写一点，因为显然，a[i].l&lt;lft，a[i].l~lft这1段也没有用了</span></span><br><span class="line">        <span class="keyword">if</span>(a[i].r&gt;rgt)&#123;<span class="comment">//比之前的右端点大</span></span><br><span class="line">            ans+=rgt-a[i].l;<span class="comment">//从rgt到a[i].l</span></span><br><span class="line">            lft=rgt;<span class="comment">//之前的右端点显然就是左端点，显然，新的可能被覆盖到的区间就是之前的rgt~a[i].r</span></span><br><span class="line">            rgt=a[i].r;<span class="comment">//更新右端点</span></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;<span class="comment">//比之前的右端点小</span></span><br><span class="line">            ans+=a[i].r-a[i].l;<span class="comment">//从a[i].r到a[i].l</span></span><br><span class="line">            lft=a[i].r;<span class="comment">//更新左端点</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>我们先来看一下完整的代码：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;<span class="comment">//快读</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;<span class="comment">//快写</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l,r;<span class="comment">//每次染色的左端点和右端点</span></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(<span class="keyword">const</span> node&amp;b)<span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> l&lt;b.l;<span class="comment">//按左端点从小到大排序</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;a[MAXN];</span><br><span class="line"><span class="keyword">int</span> position,ans,lft,rgt,n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    read(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x;<span class="keyword">char</span> y;</span><br><span class="line">        read(x);<span class="built_in">cin</span>&gt;&gt;y;</span><br><span class="line">        a[i].l=position;</span><br><span class="line">        <span class="keyword">if</span>(y==<span class="string">'L'</span>)position-=x;<span class="comment">//Bessie往左走</span></span><br><span class="line">        <span class="keyword">else</span> position+=x;<span class="comment">//Bessie往右走</span></span><br><span class="line">        a[i].r=position;</span><br><span class="line">        <span class="keyword">if</span>(a[i].l&gt;a[i].r)swap(a[i].l,a[i].r);</span><br><span class="line">    &#125;sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>);<span class="comment">//排序</span></span><br><span class="line">    lft=a[<span class="number">1</span>].l;rgt=a[<span class="number">1</span>].r;<span class="comment">//给lft和rgt赋上初值</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">if</span>(a[i].r&gt;lft)&#123;<span class="comment">//如果跟可能被覆盖到的区间有交</span></span><br><span class="line">            a[i].l=max(a[i].l,lft);<span class="comment">//这里是使得之后的代码可以少写一点，因为显然，a[i].l&lt;lft，a[i].l~lft这1段也没有用了</span></span><br><span class="line">            <span class="keyword">if</span>(a[i].r&gt;rgt)&#123;<span class="comment">//比之前的右端点大</span></span><br><span class="line">                ans+=rgt-a[i].l;<span class="comment">//从rgt到a[i].l</span></span><br><span class="line">                lft=rgt;<span class="comment">//之前的右端点显然就是左端点，显然，新的可能被覆盖到的区间就是之前的rgt~a[i].r</span></span><br><span class="line">                rgt=a[i].r;<span class="comment">//更新右端点</span></span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;<span class="comment">//比之前的右端点小</span></span><br><span class="line">                ans+=a[i].r-a[i].l;<span class="comment">//从a[i].r到a[i].l</span></span><br><span class="line">                lft=a[i].r;<span class="comment">//更新左端点</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    write(ans);<span class="comment">//输出</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>补充一下正确性证明：</p>
<p>实际上作者想到这个方法的时候觉得显然是对的</p>
<p>其实主要就是为什么要 $lft=a[i].r$ 可能有人对此有点问题，我来解释一下</p>
<blockquote>
<p>$\therefore$ 我们是按从小到大对 $a$ 数组进行排序，也就是 $a[i+1].l \geq a[i].l$，而 $a[i].l&gt;lft$</p>
<p>$\because$ $a[i+1].l&gt;lft$。</p>
</blockquote>
]]></content>
      <categories>
        <category>洛谷题库</category>
      </categories>
      <tags>
        <tag>排序</tag>
        <tag>贪心</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 P5663 【加工零件【民间数据】】</title>
    <url>/2020/02/21/%E9%A2%98%E8%A7%A3-P5663-%E3%80%90%E5%8A%A0%E5%B7%A5%E9%9B%B6%E4%BB%B6%E3%80%90%E6%B0%91%E9%97%B4%E6%95%B0%E6%8D%AE%E3%80%91%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P5663" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p5663" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<hr>
<a id="more"></a>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>蒟蒻没有资格去参加 $CSPJ$，只能看着众多巨佬 $AK$。</p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><h3 id="确定做法"><a href="#确定做法" class="headerlink" title="确定做法"></a>确定做法</h3><p>首先，看到这道题，我直接想到的是递归，于是复杂度就上天了，考虑<strong>最短路</strong>。</p>
<h3 id="如何用最短路"><a href="#如何用最短路" class="headerlink" title="如何用最短路"></a>如何用最短路</h3><p>首先，看一张图</p>
<p><img src="https://i.loli.net/2019/11/23/CQ1F4lRjrX2qVpf.png" alt="360截图16251114373524.png"></p>
<p>我们该如何解决问题？</p>
<blockquote>
<p>问题:$3$做$5$阶段的零件$1$要不要做呢？</p>
</blockquote>
<p>其实，实质就是看$3$到$1$有没有长度为$5$的路径。</p>
<blockquote>
<p>问题:$3$做$7$阶段的零件$1$要不要做呢？</p>
</blockquote>
<p>其实，实质就是看$3$到$1$有没有长度为$7$的路径。</p>
<blockquote>
<p>问题:$3$做$6$阶段的零件$1$要不要做呢？</p>
</blockquote>
<p>其实，实质就是看$3$到$1$有没有长度为$6$的路径。</p>
<p>仔细思考这$3$个问题，我们会发现，<strong>如果$3$到$1$有长度为$5$的路径，那么$3$到$1$一定有长度为$7$的路径，但并不一定有长度为$6$的路径。</strong></p>
<p>所以，我们要对每个点求一遍奇数路径，和偶数路径。</p>
<h3 id="实现最短路"><a href="#实现最短路" class="headerlink" title="实现最短路"></a>实现最短路</h3><p>最短路的算法有很多，这道题最好用$dijkstra$，或$bfs$。</p>
<p>这道题的时限并不紧，并且$dijkstra$<strong>细节太多</strong>，我就来演示$bfs$实现的最短路</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfw</span><span class="params">()</span></span>&#123;<span class="comment">//我有一个好朋友叫bfw，所以我写bfs时，喜欢把函数名起为bfw</span></span><br><span class="line">    <span class="built_in">memset</span>(ji,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(ji));<span class="comment">//奇数最短路径</span></span><br><span class="line">    <span class="built_in">memset</span>(ou,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(ou));<span class="comment">//偶数最短路径</span></span><br><span class="line">    <span class="built_in">queue</span>&lt;pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt;q;</span><br><span class="line">    q.push(make_pair(<span class="number">1</span>,<span class="number">0</span>));</span><br><span class="line">    ou[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(q.size())&#123;</span><br><span class="line">        <span class="keyword">int</span> x=q.front().first,y=q.front().second;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v[x].size();i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(y%<span class="number">2</span>==<span class="number">1</span>)&#123;<span class="comment">//奇数+1=偶数</span></span><br><span class="line">                <span class="keyword">if</span>(y+<span class="number">1</span>&lt;ou[v[x][i]])&#123;</span><br><span class="line">                    ou[v[x][i]]=y+<span class="number">1</span>;<span class="comment">//更新答案</span></span><br><span class="line">                    q.push(make_pair(v[x][i],y+<span class="number">1</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;<span class="comment">//偶数+1=奇数</span></span><br><span class="line">                <span class="keyword">if</span>(y+<span class="number">1</span>&lt;ji[v[x][i]])&#123;</span><br><span class="line">                    ji[v[x][i]]=y+<span class="number">1</span>;<span class="comment">//更新答案</span></span><br><span class="line">                    q.push(make_pair(v[x][i],y+<span class="number">1</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        q.pop();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>$v$数组是一个动态数组，也就是$vector$，曹老师教我们<strong>多用$STL$写程序</strong></p>
<p>如果你写这样的$bfs$民间数据会$WA$ $1$个点 ，这个点是这样的</p>
<p><img src="https://i.loli.net/2019/11/23/JiCDb6jpuB9gzfZ.png" alt="360截图172905077510285.png"></p>
<p>$1$号点是一个孤点，没有偶数路径，所以，我们的$bfs$要这么写</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfw</span><span class="params">()</span></span>&#123;<span class="comment">//我有一个好朋友叫bfw，所以我写bfs时，喜欢把函数名起为bfw</span></span><br><span class="line">    <span class="built_in">memset</span>(ji,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(ji));<span class="comment">//奇数最短路径</span></span><br><span class="line">    <span class="built_in">memset</span>(ou,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(ou));<span class="comment">//偶数最短路径</span></span><br><span class="line">    <span class="built_in">queue</span>&lt;pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt;q;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v[<span class="number">1</span>].size();i++)&#123;</span><br><span class="line">        ji[v[<span class="number">1</span>][i]]=<span class="number">1</span>;</span><br><span class="line">        q.push(make_pair(v[<span class="number">1</span>][i],<span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(q.size())&#123;</span><br><span class="line">        <span class="keyword">int</span> x=q.front().first,y=q.front().second;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v[x].size();i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(y%<span class="number">2</span>==<span class="number">1</span>)&#123;<span class="comment">//奇数+1=偶数</span></span><br><span class="line">                <span class="keyword">if</span>(y+<span class="number">1</span>&lt;ou[v[x][i]])&#123;</span><br><span class="line">                    ou[v[x][i]]=y+<span class="number">1</span>;<span class="comment">//更新答案</span></span><br><span class="line">                    q.push(make_pair(v[x][i],y+<span class="number">1</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;<span class="comment">//偶数+1=奇数</span></span><br><span class="line">                <span class="keyword">if</span>(y+<span class="number">1</span>&lt;ji[v[x][i]])&#123;</span><br><span class="line">                    ji[v[x][i]]=y+<span class="number">1</span>;<span class="comment">//更新答案</span></span><br><span class="line">                    q.push(make_pair(v[x][i],y+<span class="number">1</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        q.pop();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="简要讲解主程序"><a href="#简要讲解主程序" class="headerlink" title="简要讲解主程序"></a>简要讲解主程序</h3><p>有了这些主程序应该是很简单的了</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m,q;</span><br><span class="line">    read(n);read(m);read(q);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        read(x);read(y);<span class="comment">//无向边</span></span><br><span class="line">        v[x].push_back(y);<span class="comment">//连边</span></span><br><span class="line">        v[y].push_back(x);<span class="comment">//连边</span></span><br><span class="line">    &#125;</span><br><span class="line">    bfw();<span class="comment">//跑最短路</span></span><br><span class="line">    <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        read(x);read(y);</span><br><span class="line">        <span class="keyword">if</span>(y%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(ou[x]&gt;y)<span class="built_in">puts</span>(<span class="string">"No"</span>);<span class="comment">//如果大于就不可能了</span></span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(ji[x]&gt;y)<span class="built_in">puts</span>(<span class="string">"No"</span>);<span class="comment">//如果大于就不可能了</span></span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>先来看一看这题完整的代码了<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;v[<span class="number">100010</span>];</span><br><span class="line"><span class="keyword">int</span> ji[<span class="number">100010</span>],ou[<span class="number">100010</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfw</span><span class="params">()</span></span>&#123;<span class="comment">//我有一个好朋友叫bfw，所以我写bfs时，喜欢把函数名起为bfw</span></span><br><span class="line">    <span class="built_in">memset</span>(ji,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(ji));<span class="comment">//奇数最短路径</span></span><br><span class="line">    <span class="built_in">memset</span>(ou,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(ou));<span class="comment">//偶数最短路径</span></span><br><span class="line">    <span class="built_in">queue</span>&lt;pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt;q;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v[<span class="number">1</span>].size();i++)&#123;</span><br><span class="line">        ji[v[<span class="number">1</span>][i]]=<span class="number">1</span>;</span><br><span class="line">        q.push(make_pair(v[<span class="number">1</span>][i],<span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(q.size())&#123;</span><br><span class="line">        <span class="keyword">int</span> x=q.front().first,y=q.front().second;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v[x].size();i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(y%<span class="number">2</span>==<span class="number">1</span>)&#123;<span class="comment">//奇数+1=偶数</span></span><br><span class="line">                <span class="keyword">if</span>(y+<span class="number">1</span>&lt;ou[v[x][i]])&#123;</span><br><span class="line">                    ou[v[x][i]]=y+<span class="number">1</span>;<span class="comment">//更新答案</span></span><br><span class="line">                    q.push(make_pair(v[x][i],y+<span class="number">1</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;<span class="comment">//偶数+1=奇数</span></span><br><span class="line">                <span class="keyword">if</span>(y+<span class="number">1</span>&lt;ji[v[x][i]])&#123;</span><br><span class="line">                    ji[v[x][i]]=y+<span class="number">1</span>;<span class="comment">//更新答案</span></span><br><span class="line">                    q.push(make_pair(v[x][i],y+<span class="number">1</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        q.pop();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m,q;</span><br><span class="line">    read(n);read(m);read(q);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        read(x);read(y);<span class="comment">//无向边</span></span><br><span class="line">        v[x].push_back(y);<span class="comment">//连边</span></span><br><span class="line">        v[y].push_back(x);<span class="comment">//连边</span></span><br><span class="line">    &#125;</span><br><span class="line">    bfw();<span class="comment">//跑最短路</span></span><br><span class="line">    <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        read(x);read(y);</span><br><span class="line">        <span class="keyword">if</span>(y%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(ou[x]&gt;y)<span class="built_in">puts</span>(<span class="string">"No"</span>);<span class="comment">//如果大于就不可能了</span></span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(ji[x]&gt;y)<span class="built_in">puts</span>(<span class="string">"No"</span>);<span class="comment">//如果大于就不可能了</span></span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>这道题还是比较有<strong>思维含量</strong>的，民间数据也出的很好，让我们思考全面。</p>
<p>最后，还是希望大家不懂就在评论区问，觉得好就点赞！</p>
]]></content>
      <categories>
        <category>洛谷题库</category>
        <category>noip普及组</category>
      </categories>
      <tags>
        <tag>bfs</tag>
        <tag>搜索</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 CF1304E 【1-Trees and Queries】</title>
    <url>/2020/02/21/%E9%A2%98%E8%A7%A3-CF1304E-%E3%80%901-Trees-and-Queries%E3%80%91-1/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/CF1304E" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-cf1304e" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<hr>
<a id="more"></a>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这场比赛，在最后 $5$ 分钟，我想到了这道题的 $Idea$，但是，没有打完，比赛就结束了。</p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="题目意思"><a href="#题目意思" class="headerlink" title="题目意思"></a>题目意思</h2><p>这道题目的意思就是说，一棵树上每次给 $x$ 和 $y$ 节点连 $1$ 条边，问 $a$ 到 $b$ 之间有没有长度为 $k$ 的边。</p>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>一开始，我看到这道题就往基环树这里去想，可实际上，这道题的方法却是和<a href="https://www.luogu.com.cn/problem/P5663" target="_blank" rel="noopener">加工零件</a>这道题是有异曲同工之处，作者那道题里面也写了篇<a href="https://zhaohaikun.blog.luogu.org/solution-p5663" target="_blank" rel="noopener">题解</a>，不会的同学可以去看一看。</p>
<p>这道题难处理的地方就是加 $1$ 条边这个地方很难处理，但是我们可以想一想，实际上可能的路径一共就<strong>3条</strong>。</p>
<ol>
<li><p>$a \implies b$ 这是最原始的路径。</p>
</li>
<li><p>$a \implies x \implies y \implies b$ 这是借助 $x,y$ 的路径</p>
</li>
<li><p>$a \implies y \implies x \implies b$ 这是借助 $y,x$ 的路径。</p>
</li>
</ol>
<p>也就是<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;=y&amp;&amp;x%<span class="number">2</span>==y%<span class="number">2</span>)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(T--)&#123;</span><br><span class="line">    <span class="keyword">int</span> x,y,a,b,k;</span><br><span class="line">    read(x);read(y);read(a);read(b);read(k);</span><br><span class="line">    <span class="keyword">int</span> ab=dist(a,b),ax=dist(a,x),yb=dist(b,y),ay=dist(a,y),bx=dist(b,x);</span><br><span class="line">    <span class="keyword">if</span>(check(ab,k)||check(ax+yb+<span class="number">1</span>,k)||check(ay+bx+<span class="number">1</span>,k))<span class="built_in">puts</span>(<span class="string">"YES"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"NO"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>​    </p>
<p>​    </p>
<h3 id="处理往回走"><a href="#处理往回走" class="headerlink" title="处理往回走"></a>处理往回走</h3><p>可能有读者会问，走到 $1$ 个点，再走回来，这个怎么办呢？我们发现走到 $1$ 个点再回来，这样 $1$ 次路径长度是 $2$。所以我们这 $3$ 条路径当中，只要有 $1$ 条路径满足一下 $2$ 个条件，就说明存在这样一条长度为 $k$ 的路径。</p>
<ol>
<li><p><strong>路径长度 $\leq k$ 这一个很显然。</strong>长度 $&gt; k$，显然就是不合法的。</p>
</li>
<li><p><strong>路径长度和 $k$ 奇偶性相同。</strong>这就是基于往回走的做法，奇偶性相同，就代表两个数的差是偶数，所以就是可以组成长度为 $k$ 路径。</p>
</li>
</ol>
<h3 id="预处理-2-点之间的距离"><a href="#预处理-2-点之间的距离" class="headerlink" title="预处理 $2$ 点之间的距离"></a>预处理 $2$ 点之间的距离</h3><p>我们刚才说了，两个点之间的距离显然是要求出来的，我们需要预处理 $LCA$，不会的同学可以左转<a href="https://www.luogu.com.cn/problemnew/solution/P3379" target="_blank" rel="noopener">题解区</a>，我用的是最朴素的倍增 $LCA$。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> f)</span></span>&#123;</span><br><span class="line">    dep[x]=dep[f]+<span class="number">1</span>;</span><br><span class="line">    fa[x][<span class="number">0</span>]=f;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;(<span class="number">1</span>&lt;&lt;i)&lt;=dep[x];i++)</span><br><span class="line">        fa[x][i]=fa[fa[x][i<span class="number">-1</span>]][i<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];i;i=nxt[i])</span><br><span class="line">        <span class="keyword">if</span>(t[i]!=f)dfs(t[i],x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lca</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(dep[x]&lt;dep[y])swap(x,y);</span><br><span class="line">    <span class="keyword">while</span>(dep[x]&gt;dep[y])x=fa[x][lg[dep[x]-dep[y]]<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">if</span>(x==y)<span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=lg[dep[x]]<span class="number">-1</span>;k&gt;=<span class="number">0</span>;k--)</span><br><span class="line">        <span class="keyword">if</span>(fa[x][k]!=fa[y][k])x=fa[x][k],y=fa[y][k];</span><br><span class="line">    <span class="keyword">return</span> fa[x][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dist</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;<span class="comment">//x号节点和y号节点的距离</span></span><br><span class="line">    <span class="keyword">int</span> z=lca(x,y);</span><br><span class="line">    <span class="keyword">return</span> dep[x]+dep[y]-dep[z]*<span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;<span class="comment">//快读</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;<span class="comment">//快写</span></span><br><span class="line"><span class="keyword">int</span> dep[<span class="number">500010</span>],fa[<span class="number">500010</span>][<span class="number">22</span>],lg[<span class="number">500010</span>],head[<span class="number">500010</span>],nxt[<span class="number">500010</span>],t[<span class="number">500010</span>],tot;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    t[++tot]=y;</span><br><span class="line">    nxt[tot]=head[x];</span><br><span class="line">    head[x]=tot;</span><br><span class="line">&#125;<span class="comment">//连边</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> f)</span></span>&#123;</span><br><span class="line">    dep[x]=dep[f]+<span class="number">1</span>;</span><br><span class="line">    fa[x][<span class="number">0</span>]=f;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;(<span class="number">1</span>&lt;&lt;i)&lt;=dep[x];i++)</span><br><span class="line">        fa[x][i]=fa[fa[x][i<span class="number">-1</span>]][i<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];i;i=nxt[i])</span><br><span class="line">        <span class="keyword">if</span>(t[i]!=f)dfs(t[i],x);</span><br><span class="line">&#125;<span class="comment">//预处理father</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lca</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(dep[x]&lt;dep[y])swap(x,y);</span><br><span class="line">    <span class="keyword">while</span>(dep[x]&gt;dep[y])x=fa[x][lg[dep[x]-dep[y]]<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">if</span>(x==y)<span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=lg[dep[x]]<span class="number">-1</span>;k&gt;=<span class="number">0</span>;k--)</span><br><span class="line">        <span class="keyword">if</span>(fa[x][k]!=fa[y][k])x=fa[x][k],y=fa[y][k];</span><br><span class="line">    <span class="keyword">return</span> fa[x][<span class="number">0</span>];</span><br><span class="line">&#125;<span class="comment">//LCA</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dist</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> z=lca(x,y);</span><br><span class="line">    <span class="keyword">return</span> dep[x]+dep[y]-dep[z]*<span class="number">2</span>;</span><br><span class="line">&#125;<span class="comment">//x、y两点之间的距离</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;=k&amp;&amp;x%<span class="number">2</span>==k%<span class="number">2</span>)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;<span class="comment">//检查长度为x的边是否满足前文讲得2个条件</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    read(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        read(x);read(y);</span><br><span class="line">        add(x,y);add(y,x);</span><br><span class="line">    &#125;</span><br><span class="line">    dfs(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)lg[i]=lg[i<span class="number">-1</span>]+(<span class="number">1</span>&lt;&lt;lg[i<span class="number">-1</span>]==i);<span class="comment">//预处理除log</span></span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    read(T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="keyword">int</span> x,y,a,b,k;</span><br><span class="line">        read(x);read(y);read(a);read(b);read(k);</span><br><span class="line">        <span class="keyword">int</span> ab=dist(a,b),ax=dist(a,x),yb=dist(b,y),ay=dist(a,y),bx=dist(b,x);<span class="comment">//3条边</span></span><br><span class="line">        <span class="keyword">if</span>(check(ab,k)||check(ax+yb+<span class="number">1</span>,k)||check(ay+bx+<span class="number">1</span>,k))<span class="built_in">puts</span>(<span class="string">"YES"</span>);<span class="comment">//有1条符合条件，就代表有</span></span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"NO"</span>);<span class="comment">//3条都不符合就代表没有</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>这道题还是很有思考的价值，也算是积累了经验<strong>看到一棵树加 $1$ 条边，未必一定要往基环树想</strong>。希望觉得好的同学可以点赞，有问题请在评论区表述一下，是我的题解都够再完善一下。</p>
]]></content>
      <categories>
        <category>CF题库</category>
      </categories>
      <tags>
        <tag>LCA</tag>
      </tags>
  </entry>
</search>
