<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>2020-3-19模拟赛题解</title>
      <link href="/2020/03/19/2020-3-19%E6%A8%A1%E6%8B%9F%E8%B5%9B/"/>
      <url>/2020/03/19/2020-3-19%E6%A8%A1%E6%8B%9F%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<p><code>2020-3-19</code>的模拟赛，考得不错，但仍有很大的进步空间，继续努力！</p><a id="more"></a><h1 id="T1"><a href="#T1" class="headerlink" title="T1"></a>T1</h1><p>这道题目应该，不用多说，直接上代码。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line"><span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">if</span>(x&gt;<span class="number">9</span>)<span class="built_in">write</span>(x/<span class="number">10</span>);</span><br><span class="line"><span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">writen</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line"><span class="built_in">write</span>(x);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ll n,ans=<span class="number">0</span>;ld len,a,s=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;len&gt;&gt;a;</span><br><span class="line">ll x=((a*<span class="number">2</span>)/len);</span><br><span class="line"><span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=x;i++)</span><br><span class="line"><span class="keyword">if</span>(n%i==<span class="number">0</span>)&#123;</span><br><span class="line">ans++;</span><br><span class="line">s+=(i*<span class="number">1.0</span>)*len;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(ans==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"poor Asuna."</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="string">" "</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;fixed&lt;&lt;setprecision(<span class="number">6</span>)&lt;&lt;s;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="T2"><a href="#T2" class="headerlink" title="T2"></a>T2</h1><p>直接模拟。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line"><span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">if</span>(x&gt;<span class="number">9</span>)<span class="built_in">write</span>(x/<span class="number">10</span>);</span><br><span class="line"><span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">writen</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line"><span class="built_in">write</span>(x);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">work</span><span class="params">(<span class="keyword">char</span> ch)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(ch==<span class="string">'A'</span>)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span>(ch==<span class="string">'C'</span>)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span>(ch==<span class="string">'G'</span>)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span>(ch==<span class="string">'U'</span>)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">1010</span>];</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line"><span class="built_in">string</span> a=<span class="string">""</span>,b=<span class="string">""</span>;</span><br><span class="line">a=a+s[<span class="number">0</span>]+s[<span class="number">1</span>]+s[<span class="number">2</span>];</span><br><span class="line">b=b+s[<span class="number">3</span>]+s[<span class="number">4</span>]+s[<span class="number">5</span>];</span><br><span class="line"><span class="keyword">if</span>(!work(s[<span class="number">0</span>])||!work(s[<span class="number">1</span>])||!work(s[<span class="number">2</span>])||!work(s[<span class="number">3</span>])||!work(s[<span class="number">4</span>])||!work(s[<span class="number">5</span>]))&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"bad"</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(a==<span class="string">"UUU"</span>)<span class="built_in">cout</span>&lt;&lt;<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(a==b)<span class="built_in">cout</span>&lt;&lt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(b==<span class="string">"UUU"</span>)<span class="built_in">cout</span>&lt;&lt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;<span class="number">2</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="T3"><a href="#T3" class="headerlink" title="T3"></a>T3</h1><p>依旧是比较简单的题。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line"><span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">if</span>(x&gt;<span class="number">9</span>)<span class="built_in">write</span>(x/<span class="number">10</span>);</span><br><span class="line"><span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">writen</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line"><span class="built_in">write</span>(x);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ll a,n;</span><br><span class="line"><span class="built_in">read</span>(n);<span class="built_in">read</span>(a);</span><br><span class="line"><span class="keyword">if</span>(a%n!=<span class="number">0</span>)<span class="built_in">puts</span>(<span class="string">"poor Asuna."</span>);</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">ll x=a/n,ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(x)&#123;</span><br><span class="line"><span class="keyword">if</span>(x&amp;<span class="number">1</span>)ans++;<span class="comment">//二进制的思想，找1的个数</span></span><br><span class="line">x&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">&#125;<span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="T4"><a href="#T4" class="headerlink" title="T4"></a>T4</h1><p>蒟蒻把 $30\%$ 的限制，当成了 $100 \%$ 的了$qwq$。。。</p><p>惨痛地丢了 $40pts$。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line"><span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">if</span>(x&gt;<span class="number">9</span>)<span class="built_in">write</span>(x/<span class="number">10</span>);</span><br><span class="line"><span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">writen</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line"><span class="built_in">write</span>(x);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans[<span class="number">40</span>],s,a;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">read</span>(n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="built_in">read</span>(x);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">5</span>;j++)ans[(x+j<span class="number">-2</span>)%<span class="number">24</span>+<span class="number">1</span>]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">24</span>;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(ans[i]==<span class="number">0</span>)s++;</span><br><span class="line">a=<span class="built_in">max</span>(a,ans[i]);</span><br><span class="line">&#125;<span class="built_in">cout</span>&lt;&lt;s&lt;&lt;<span class="string">" "</span>&lt;&lt;a;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="T5"><a href="#T5" class="headerlink" title="T5"></a>T5</h1><p>我们要贪心，要让攻者尽可能赢，也就是让攻者把防者的所有牌给打掉。</p><p>我们显然有一个贪心策略是这样的：</p><blockquote><p>每次拿 $2$ 队最强的牌<br>则有 $2$ 种情况</p><ul><li>如果攻者的牌 $\geq$ 防者的牌，就显然要让 $2$ 张牌同归于尽。</li><li>如果攻者的牌 $&lt;$ 防者的牌，就显然要让防者的牌 $-$ 攻者的牌的值。</li></ul></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line"><span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line"><span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">writen</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">write(x);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line">ll T,n,m,a[<span class="number">300010</span>],b[<span class="number">300010</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(ll x,ll y)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x&gt;y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">work</span><span class="params">()</span></span>&#123;</span><br><span class="line">priority_queue&lt;ll&gt;q;</span><br><span class="line">sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)q.push(b[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">ll x=q.top();</span><br><span class="line">q.pop();</span><br><span class="line"><span class="keyword">if</span>(a[i]&lt;x)&#123;</span><br><span class="line">x-=a[i];</span><br><span class="line">q.push(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(q.empty())<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">read(T);</span><br><span class="line"><span class="keyword">while</span>(T--)&#123;</span><br><span class="line">read(n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)read(a[i]);</span><br><span class="line">read(m);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)read(b[i]);</span><br><span class="line"><span class="keyword">if</span>(work())<span class="built_in">puts</span>(<span class="string">"Apollo"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"Dionysus"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="T6"><a href="#T6" class="headerlink" title="T6"></a>T6</h1><p>这道题还是很有水平的。</p><p>有这样一个结论：可能的数字为<strong>所有素数的平方</strong>。</p><p>首先，$n+\left \lceil \left \vert \sqrt{n+1} \right \vert \right \rceil=n+ \lfloor \vert \sqrt{n} \vert\rfloor+1$</p><ol><li><p>对于平方数</p><ol><li><p>对于素数的平方：假设是 $x$ 的平方</p><p> $\therefore$ 约数和 $= x^2+x+1$，上面写的式子也是 $x^2+x+1$</p><p> $\because$ 可以。</p></li><li><p>对于约数的平方：假设是 $x$ 的平方。</p><p> $\therefore$ 约数和 $\geq x^2+1+x+\sum\limits_{i \mid x} x^2 \div i &gt; x^2+x+1$</p><p> $\because$ 不可以。</p></li></ol></li><li><p>那么非平方数，假设它为 $n$，$x=\sqrt{n}$。</p><ol><li><p>如果 $n$ 为素数：</p><p> $\therefore n$ 的约数和为：$n+1$，上面的式子为 $n+x+1$。</p><p> 又 $\therefore$ $x \geq 1$。</p><p> $\because$ 不可以。</p></li><li><p>如果 $n$ 为合数：</p><p> $\therefore$ $n$ 的约数和一定会大于 $&gt; x^2+x+1$。</p><p> $\because$ 不可以。</p></li></ol></li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line"><span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">if</span>(x&gt;<span class="number">9</span>)<span class="built_in">write</span>(x/<span class="number">10</span>);</span><br><span class="line"><span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">writen</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line"><span class="built_in">write</span>(x);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line">ll f[<span class="number">300010</span>],g[<span class="number">300010</span>],x,s;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">2</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">2</span>;i*i&lt;=x;i++)</span><br><span class="line">        <span class="keyword">if</span>(x%i==<span class="number">0</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ll n;</span><br><span class="line"><span class="built_in">read</span>(n);</span><br><span class="line">n*=<span class="number">3</span>;</span><br><span class="line"><span class="keyword">for</span>(ll i=<span class="number">2</span>;i*i&lt;=n;i++)</span><br><span class="line"><span class="keyword">if</span>(check(i))x+=i*i+i+<span class="number">1</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;x;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="T7"><a href="#T7" class="headerlink" title="T7"></a>T7</h1><p>首先说明：</p><blockquote><p>异或运算满足交换律。</p></blockquote><p>大量模拟，不讲。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line"><span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line"><span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">writen</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">write(x);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line">ll n,ans=INT_MIN,C,Len,p[<span class="number">1010</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">ll a,b,c;</span><br><span class="line">&#125;a[<span class="number">1010</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a.c&lt;b.c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">work</span><span class="params">(<span class="keyword">double</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (ll)(<span class="built_in">sqrt</span>(x));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(ll x,ll s,ll y,ll minn,ll z)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x==n+<span class="number">1</span>)&#123;</span><br><span class="line">ans=max(ans,minn*(C-work(s))*(p[z%(Len)]));</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">dfs(x+<span class="number">1</span>,s,y,minn,z);</span><br><span class="line">dfs(x+<span class="number">1</span>,s+y+a[x].c,y+a[x].c,min(minn,a[x].b),a[x].a^z);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">read(n);</span><br><span class="line"><span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;i++)read(a[i].a);</span><br><span class="line"><span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;i++)read(a[i].b);</span><br><span class="line"><span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;i++)read(a[i].c);</span><br><span class="line">read(Len);</span><br><span class="line"><span class="keyword">for</span>(ll i=<span class="number">0</span>;i&lt;Len;i++)read(p[i]);</span><br><span class="line">read(C);</span><br><span class="line">sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp);</span><br><span class="line"><span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;i++)dfs(i+<span class="number">1</span>,a[i].c,a[i].c,a[i].b,a[i].a);</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="T8"><a href="#T8" class="headerlink" title="T8"></a>T8</h1><p>我觉得也很简单，可是我<code>gcd</code>不开<code>long long</code>见祖宗。</p><p>有<code>1</code>的字串个数<code>=</code>总个数<code>-</code>不含<code>1</code>的字串个数。</p><p>不含<code>1</code>的字串个数<code>=</code>全为<code>0</code>的字串个数。</p><p>然后这题就水了。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line"><span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">if</span>(x&gt;<span class="number">9</span>)<span class="built_in">write</span>(x/<span class="number">10</span>);</span><br><span class="line"><span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">writen</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line"><span class="built_in">write</span>(x);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line">ll n,t,s,ans,k;</span><br><span class="line"><span class="built_in">string</span> st;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll x,ll y)</span></span>&#123;<span class="comment">//这里开long long啊！</span></span><br><span class="line"><span class="keyword">if</span>(!y)<span class="keyword">return</span> x;</span><br><span class="line"><span class="keyword">return</span> gcd(y,x%y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;st&gt;&gt;t;</span><br><span class="line">ans=n*(n+<span class="number">1</span>)/<span class="number">2</span>;k=ans;</span><br><span class="line">st=st+<span class="string">'1'</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;st.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(st[i]==<span class="string">'0'</span>)s++;</span><br><span class="line"><span class="keyword">else</span> ans-=s*(s+<span class="number">1</span>)/<span class="number">2</span>,s=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">double</span> x=(ans*<span class="number">1.0</span>)/(k*<span class="number">1.0</span>);</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;fixed&lt;&lt;setprecision(<span class="number">3</span>)&lt;&lt;x;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">ll x=gcd(ans,k);</span><br><span class="line">ans/=x;</span><br><span class="line">k/=x;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="string">" "</span>&lt;&lt;k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 模拟赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模拟 </tag>
            
            <tag> 搜索 </tag>
            
            <tag> 枚举 </tag>
            
            <tag> 暴力 </tag>
            
            <tag> 排序 </tag>
            
            <tag> STL-priority_queue </tag>
            
            <tag> 贪心 </tag>
            
            <tag> 数论，数学 </tag>
            
            <tag> 位运算 </tag>
            
            <tag> 二进制 </tag>
            
            <tag> 分类讨论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>增援前线</title>
      <link href="/2020/03/18/%E6%8F%B4%E5%89%8D%E7%BA%BF/"/>
      <url>/2020/03/18/%E6%8F%B4%E5%89%8D%E7%BA%BF/</url>
      
        <content type="html"><![CDATA[<p>模拟赛试题<br><a id="more"></a></p><h1 id="增援前线"><a href="#增援前线" class="headerlink" title="增援前线"></a>增援前线</h1><h2 id="20-分做法"><a href="#20-分做法" class="headerlink" title="$20$ 分做法"></a>$20$ 分做法</h2><p>考虑暴力。答案为$a_i$的和</p><h1 id="50-分做法"><a href="#50-分做法" class="headerlink" title="$50$ 分做法"></a>$50$ 分做法</h1><p>枚举全排列</p><h1 id="100-分做法"><a href="#100-分做法" class="headerlink" title="$100$ 分做法"></a>$100$ 分做法</h1><p>我们可以用二分法或贪心。</p><p>这里会用到一个性质。</p><p><strong>说人要尽量走得远一点。</strong>什么意思？为什么？</p><p>画一个图：</p><p><img src="https://i.loli.net/2020/03/18/onHP7jtcwqf6Rhx.jpg" alt="360截图175711156810982.jpg"></p><p>假设：$L=4$</p><p>比如说这个魂师，他有 $2$ 种选择，现在我们的结论是走最远的最优。</p><p>那么，我们看他走近的</p><p><img src="https://i.loli.net/2020/03/18/BM416JHTLzwDXtd.jpg" alt="360截图175711156810982.jpg"></p><p>都没路走了，只能还是走远端的那片叶子，所以相当于<strong>浪费了一片叶子。</strong></p><p>走远的</p><p><img src="https://i.loli.net/2020/03/18/g1lZcPYyL84evCT.jpg" alt="360截图175711156810982.jpg"></p><p>还能走，那么我想用这个例子说明什么呢？</p><p><strong>我们走得越远，选择越多。</strong></p><p>从贪心的角度来讲，要让所有魂师<strong>消耗的叶子数量尽量少。</strong></p><h2 id="二分"><a href="#二分" class="headerlink" title="二分"></a>二分</h2><p>利用刚刚所讲的性质，我们用二分来写。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line"><span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">if</span>(x&gt;<span class="number">9</span>)<span class="built_in">write</span>(x/<span class="number">10</span>);</span><br><span class="line"><span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">writen</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line"><span class="built_in">write</span>(x);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> l,r=<span class="number">1</span>,a[<span class="number">100010</span>],b[<span class="number">100010</span>],L,n;<span class="comment">//左闭右开，r=1</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> mid)</span></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(b,<span class="number">0</span>,<span class="keyword">sizeof</span>(b));<span class="comment">//a[i]表示的是每个格子的上限，b[i]表示的是每个格子现有的数量</span></span><br><span class="line">b[<span class="number">0</span>]=mid;a[n]=mid;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="built_in">min</span>(i+L,n);j&gt;=i+<span class="number">1</span>;j--)<span class="comment">//从远的开始试</span></span><br><span class="line"><span class="keyword">if</span>(b[j]&lt;a[j])&#123;</span><br><span class="line"><span class="keyword">if</span>(b[j]+b[i]&lt;=a[j])&#123;<span class="comment">//全部都能去，那么就全部都去</span></span><br><span class="line">b[j]+=b[i];<span class="comment">//移走</span></span><br><span class="line">b[i]=<span class="number">0</span>;<span class="comment">//变成零</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">b[i]-=a[j]-b[j];<span class="comment">//能塞，尽量塞</span></span><br><span class="line">b[j]=a[j];<span class="comment">//塞满</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(b[i]!=<span class="number">0</span>)<span class="keyword">return</span> <span class="literal">false</span>;<span class="comment">//有人没去处，就代表不可能</span></span><br><span class="line">&#125;<span class="keyword">return</span> <span class="literal">true</span>;<span class="comment">//可能</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n);<span class="built_in">read</span>(L);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="built_in">read</span>(a[i]);</span><br><span class="line">r+=a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(l+<span class="number">1</span>&lt;r)&#123;</span><br><span class="line"><span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(check(mid))l=mid;</span><br><span class="line"><span class="keyword">else</span> r=mid;</span><br><span class="line">&#125;<span class="built_in">cout</span>&lt;&lt;l;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="贪心"><a href="#贪心" class="headerlink" title="贪心"></a>贪心</h1><p>我们发现，上面的二分似乎没什么用，知道答案也未必更好算。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line"><span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">if</span>(x&gt;<span class="number">9</span>)<span class="built_in">write</span>(x/<span class="number">10</span>);</span><br><span class="line"><span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">writen</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line"><span class="built_in">write</span>(x);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100010</span>],b[<span class="number">100010</span>],L,n,s;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n);<span class="built_in">read</span>(L);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="built_in">read</span>(a[i]);</span><br><span class="line">s+=a[i];<span class="comment">//一样的道理</span></span><br><span class="line">&#125;</span><br><span class="line">b[<span class="number">0</span>]=s;a[n]=s;<span class="comment">//拿边界</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="built_in">min</span>(i+L,n);j&gt;=i+<span class="number">1</span>;j--)<span class="comment">//从远的开始试</span></span><br><span class="line"><span class="keyword">if</span>(b[j]&lt;a[j])&#123;</span><br><span class="line"><span class="keyword">if</span>(b[j]+b[i]&lt;=a[j])&#123;<span class="comment">//全部都能去，那么就全部都去</span></span><br><span class="line">b[j]+=b[i];<span class="comment">//移走</span></span><br><span class="line">b[i]=<span class="number">0</span>;<span class="comment">//变成零</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">b[i]-=a[j]-b[j];<span class="comment">//能塞，尽量塞</span></span><br><span class="line">b[j]=a[j];<span class="comment">//塞满</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="built_in">cout</span>&lt;&lt;b[n];</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 模拟赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二分 </tag>
            
            <tag> 贪心 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>核心法阵</title>
      <link href="/2020/03/18/%E5%BF%83%E6%B3%95%E9%98%B5/"/>
      <url>/2020/03/18/%E5%BF%83%E6%B3%95%E9%98%B5/</url>
      
        <content type="html"><![CDATA[<p>模拟赛试题</p><a id="more"></a><h1 id="核心法阵"><a href="#核心法阵" class="headerlink" title="核心法阵"></a>核心法阵</h1><p>其实就是一道很简单的题目，我们先枚举全排列。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">work</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> maxn=INT_MIN,minn=INT_MAX;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=r;i++)maxn=<span class="built_in">max</span>(maxn,f[i]),minn=<span class="built_in">min</span>(minn,f[i]);</span><br><span class="line">    <span class="keyword">return</span> maxn-minn==r-l;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>学过  $STL$ 的一个都知道。之后，我们来看<strong>如何写 $check$</strong>呢</p><blockquote><p>我的做法比较暴力，$1$ 到 $n$ 得去扫，每个点去找最大的以它结尾最长的连续段。</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        ……</span><br><span class="line">    &#125;<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如何找呢，我的做法比较有技巧</p><p>如下</p><blockquote><p>我们已经确定了右端点，然后，我暴力枚举左端点，现在问题就转换成了，如何判断连续段。</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> ans;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=i;j++)</span><br><span class="line">            <span class="keyword">if</span>(work(j,i))&#123;</span><br><span class="line">                ans=i-j+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">if</span>(ans!=a[i])<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如何判断连续段呢，我的做法依然比较有技巧</p><p>如下</p><blockquote><p>因为这个序列是没有重复数字的，所以，我们去对这一段找最大值和最小值，看它们的差 $+1$ 是不是等于序列的长度，也就是 $r-l+1$。</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">work</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> maxn=INT_MIN,minn=INT_MAX;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=r;i++)maxn=<span class="built_in">max</span>(maxn,f[i]),minn=<span class="built_in">min</span>(minn,f[i]);</span><br><span class="line">    <span class="keyword">return</span> maxn-minn==r-l;<span class="comment">//等式两边都减1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>$code:$</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">15</span>;</span><br><span class="line"><span class="keyword">int</span> a[MAXN],f[MAXN],n,ans;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">work</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> maxn=INT_MIN,minn=INT_MAX;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=r;i++)maxn=<span class="built_in">max</span>(maxn,f[i]),minn=<span class="built_in">min</span>(minn,f[i]);</span><br><span class="line">    <span class="keyword">return</span> maxn-minn==r-l;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> ans;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=i;j++)</span><br><span class="line">            <span class="keyword">if</span>(work(j,i))&#123;</span><br><span class="line">                ans=i-j+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">if</span>(ans!=a[i])<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">read</span>(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">read</span>(a[i]),f[i]=i;</span><br><span class="line">    <span class="keyword">do</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(check())ans++;</span><br><span class="line">    &#125;<span class="keyword">while</span>(next_permutation(f+<span class="number">1</span>,f+n+<span class="number">1</span>));</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 模拟赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搜索 </tag>
            
            <tag> 枚举 </tag>
            
            <tag> 暴力 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020-3-13模拟赛题解</title>
      <link href="/2020/03/13/020-3-13%E6%A8%A1%E6%8B%9F%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
      <url>/2020/03/13/020-3-13%E6%A8%A1%E6%8B%9F%E8%B5%9B%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p>这场模拟赛，一如既往地凉凉。白白丢了 $150$ 分。</p><a id="more"></a><h1 id="T1"><a href="#T1" class="headerlink" title="T1"></a>T1</h1><p>给定 $5$ 个实数，问 $<36.2$ 或 $>37.2$ 的数的个数是否 $\geq 2$</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">double</span> a)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a&gt;<span class="number">37.2</span>)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(a&lt;<span class="number">36.2</span>)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> s=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">double</span> a,b,c,d,e,f;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b&gt;&gt;c&gt;&gt;d&gt;&gt;e;</span><br><span class="line">    <span class="keyword">if</span>(check(a))s++;</span><br><span class="line">    <span class="keyword">if</span>(check(b))s++;</span><br><span class="line">    <span class="keyword">if</span>(check(c))s++;</span><br><span class="line">    <span class="keyword">if</span>(check(d))s++;</span><br><span class="line">    <span class="keyword">if</span>(check(e))s++;</span><br><span class="line">    <span class="keyword">if</span>(s&gt;=<span class="number">2</span>)<span class="built_in">puts</span>(<span class="string">"STOP"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"PASS"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="T2"><a href="#T2" class="headerlink" title="T2"></a>T2</h1><p>就是一个小模拟</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line">ll n,k,d,s=<span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    read(n);read(k);read(d);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        s*=k;</span><br><span class="line">        <span class="keyword">if</span>(s&gt;=d)s/=<span class="number">2</span>;</span><br><span class="line">    &#125;<span class="built_in">cout</span>&lt;&lt;s;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="T3"><a href="#T3" class="headerlink" title="T3"></a>T3</h1><p>乍一看挺难的，仔细想一想就是求平均值呀。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line">ll s1,s2;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    read(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        read(x);read(y);</span><br><span class="line">        s1+=x;</span><br><span class="line">        s2+=y;</span><br><span class="line">    &#125;</span><br><span class="line">    s1/=n;s2/=n;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;s1&lt;&lt;<span class="string">" "</span>&lt;&lt;s2;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="T4"><a href="#T4" class="headerlink" title="T4"></a>T4</h1><p>这道题目，随便想想就可以差不多猜到，其实质数不不多，所以区间过长的直接输 <code>Yes</code></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">bool</span> h[<span class="number">1000010</span>];</span><br><span class="line">ll s[<span class="number">1000010</span>],l,r,T;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">2</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">2</span>;i*i&lt;=x;i++)</span><br><span class="line">        <span class="keyword">if</span>(x%i==<span class="number">0</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">1000000</span>;i++)</span><br><span class="line">        <span class="keyword">if</span>(!h[i])</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i*<span class="number">2</span>;j&lt;=<span class="number">1000000</span>;j+=i)h[j]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">1000000</span>;i++)</span><br><span class="line">        <span class="keyword">if</span>(!h[i])s[i]=s[i<span class="number">-1</span>]+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> s[i]=s[i<span class="number">-1</span>];</span><br><span class="line">    read(T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        read(l);read(r);</span><br><span class="line">        <span class="keyword">if</span>(r&lt;=<span class="number">1000000</span>)&#123;</span><br><span class="line">            ll ans=s[r]-s[l<span class="number">-1</span>],x=r-l+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(ans*<span class="number">3</span>&gt;=x)<span class="built_in">puts</span>(<span class="string">"No"</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(r-l+<span class="number">1</span>&gt;<span class="number">200010</span>)<span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                ll ans=<span class="number">0</span>,x=r-l+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">for</span>(ll i=l;i&lt;=r;i++)</span><br><span class="line">                    <span class="keyword">if</span>(check(i))ans++;</span><br><span class="line">                <span class="keyword">if</span>(ans*<span class="number">3</span>&gt;=x)<span class="built_in">puts</span>(<span class="string">"No"</span>);</span><br><span class="line">                <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="T5"><a href="#T5" class="headerlink" title="T5"></a>T5</h1><p>用 $priority_queue$ 优化复杂度</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line">ll a[<span class="number">100010</span>];</span><br><span class="line"><span class="function">ll <span class="title">work</span><span class="params">(ll x,ll y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x+y+x*y;</span><br><span class="line">&#125;</span><br><span class="line">priority_queue&lt;ll&gt;q;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    read(n);read(k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)read(a[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)q.push(a[i]);</span><br><span class="line">    ll x=q.top();</span><br><span class="line">    q.pop();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;k;i++)&#123;</span><br><span class="line">        x=work(x,q.top());</span><br><span class="line">        q.pop();</span><br><span class="line">    &#125;<span class="built_in">cout</span>&lt;&lt;x;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>$sort$ 也行吧</p><h1 id="T6"><a href="#T6" class="headerlink" title="T6"></a>T6</h1><p>差分模板</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">100010</span>],n,m,x,y,z;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    read(n);read(m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        read(x);read(y);read(z);</span><br><span class="line">        f[x]+=z;</span><br><span class="line">        f[y+<span class="number">1</span>]-=z;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        f[i]=f[i<span class="number">-1</span>]+f[i];</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;f[i]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="T7"><a href="#T7" class="headerlink" title="T7"></a>T7</h1><p>数据这么小，显然是让你暴力的，枚举左右端点判断。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> n,k,a[<span class="number">1010</span>],f[<span class="number">1010</span>][<span class="number">1010</span>],ans;</span><br><span class="line"><span class="built_in">string</span> st,t[<span class="number">1010</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;a[x];i++)</span><br><span class="line">        <span class="keyword">if</span>(st[y+i]!=t[x][i])<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x=l;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line">        <span class="keyword">while</span>(!check(i,l)&amp;&amp;l+a[i]<span class="number">-1</span>&lt;=r)l++;</span><br><span class="line">        <span class="keyword">if</span>(l+a[i]<span class="number">-1</span>&gt;r)<span class="keyword">return</span>;</span><br><span class="line">        l+=a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    ans++;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;st;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)<span class="built_in">cin</span>&gt;&gt;a[i]&gt;&gt;t[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">0</span>;l&lt;n;l++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> r=l;r&lt;n;r++)</span><br><span class="line">            work(l,r);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="T8"><a href="#T8" class="headerlink" title="T8"></a>T8</h1><p>最后一题有意思了。</p><p>首先显然是二分。</p><p>然后，判断，目前才只搞出 $70$ 分，待完善。</p>]]></content>
      
      
      <categories>
          
          <category> 模拟赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二分 </tag>
            
            <tag> 模拟 </tag>
            
            <tag> 排序 </tag>
            
            <tag> STL-priority_queue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>拓展欧几里得定理学习笔记</title>
      <link href="/2020/03/12/%E6%8B%93%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2020/03/12/%E6%8B%93%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>拓展欧几里得定理</p><a id="more"></a><p>求 $ax_1+by_1=\gcd(a,b)$</p><p>设 $bx_2+(a\bmod b)y_2=\gcd(b,a \bmod b)$</p><p>$\therefore \gcd(a,b)=\gcd(b,a \bmod b)$</p><p>$\because ax_1+by_1=bx_2+(a\bmod b)y_2$</p><p>又 $\therefore a \bmod b=a-\lfloor\frac{a}{b}\rfloor\times b$</p><p>$\because ax_1+by_1=bx_2+(a-\lfloor\frac{a}{b}\rfloor\times b)y_2$</p><p>我们利用乘法分配律，把这个式子展开</p><p>$bx_2+(a-\lfloor\frac{a}{b}\rfloor\times b)y_2=bx_2+ay_2-\lfloor\frac{a}{b}\rfloor\times by_2$</p><p>然后，我们把 $b$ 提出来</p><p>$bx_2+ay_2-\lfloor\frac{a}{b}\rfloor\times by_2=ay_2-b(x_2-\lfloor\frac{a}{b}\rfloor \times y_2)$</p><p>然后，我们发现 $x_1=y_2,y_1=x_2-\lfloor\frac{a}{b}\rfloor \times y_2$</p><p>这样，代码就好写了。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">exgcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> &amp;x,<span class="keyword">int</span> &amp;y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!b)&#123;</span><br><span class="line">        x=<span class="number">1</span>;</span><br><span class="line">        y=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> d=exgcd(b,a%b,x,y);</span><br><span class="line">    <span class="keyword">int</span> t=x;</span><br><span class="line">    x=y;</span><br><span class="line">    y=t-a/b*y;</span><br><span class="line">    <span class="keyword">return</span> d;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数论，数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>题解 P6148 【[USACO20FEB]Swapity Swapity Swap S】</title>
      <link href="/2020/03/05/%E8%A7%A3-P6148-%E3%80%90-USACO20FEB-Swapity-Swapity-Swap-S%E3%80%91/"/>
      <url>/2020/03/05/%E8%A7%A3-P6148-%E3%80%90-USACO20FEB-Swapity-Swapity-Swap-S%E3%80%91/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P6148" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p6148" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p><a id="more"></a><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>考场上没想到用倍增，呜呜呜~，只写了个找循环节，然后就 $30$ 分。</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>考虑用倍增，其实这道题和<a href="https://www.luogu.com.cn/problem/P3083" target="_blank" rel="noopener">这道题</a>是有异曲同工之处的。</p><p>我们 $f_{ij}$ 记录第 $j$ 个元素，经过 $2^i$ 次翻转后，这个元素的值。</p><h3 id="求-f-0-j"><a href="#求-f-0-j" class="headerlink" title="求 $f_{0,j}$"></a>求 $f_{0,j}$</h3><p>好，那么显然，我们要先求出 $f_{0,j}$。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">read(n);read(m);read(k);<span class="comment">//读入</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)read(a[i]),read(b[i]);<span class="comment">//读入</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)c[i]=i;<span class="comment">//给c数组赋初值</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)reverse(c+a[i],c+b[i]+<span class="number">1</span>);<span class="comment">//模拟</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)f[<span class="number">0</span>][i]=c[i];<span class="comment">//经过1次翻转第i个元素的值为c[i]</span></span><br></pre></td></tr></table></figure></p><h3 id="写倍增"><a href="#写倍增" class="headerlink" title="写倍增"></a>写倍增</h3><p>因为 $2^i=2^{i-1}+2^{i-1}$</p><p>所以，$f_{i,j}=f_{i-1,f_{i-1,j}}$</p><p>给第 $j$ 个元素操作 $2^{i-1}$ 次，再操作 $2^{i-1}$ 次，就相当于直接操作 $2^i$ 次。</p><p>学过 $LCA$ 的应该都会。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">30</span>;i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">        f[i][j]=f[i<span class="number">-1</span>][f[i<span class="number">-1</span>][j]];<span class="comment">//就是之前的公式</span></span><br></pre></td></tr></table></figure><h3 id="得到答案"><a href="#得到答案" class="headerlink" title="得到答案"></a>得到答案</h3><p>我们知道，任何一个十进制整数都是可以转成二进制形式</p><p>这里的话，我们就拆分 $k$。这里的步骤也很像 $LCA$。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> x=i,m=k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">30</span>;j&gt;=<span class="number">0</span>;j--)</span><br><span class="line">        <span class="keyword">if</span>(m&gt;=(<span class="number">1l</span>l&lt;&lt;j))&#123;</span><br><span class="line">            m-=(<span class="number">1l</span>l&lt;&lt;j);<span class="comment">//拆</span></span><br><span class="line">            x=f[j][x];<span class="comment">//操作</span></span><br><span class="line">        &#125;</span><br><span class="line">    writen(x);<span class="comment">//输出</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="复杂度"><a href="#复杂度" class="headerlink" title="复杂度"></a>复杂度</h3><p>这个复杂度显然是 $O(n \log k)$ 是一个不错的复杂度。</p><h2 id="总代码"><a href="#总代码" class="headerlink" title="总代码"></a>总代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">writen</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    write(x);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXM=<span class="number">1e2</span>+<span class="number">10</span>,MAXN=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,k,a[MAXM],b[MAXM],c[MAXN],f[<span class="number">35</span>][MAXN];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    read(n);read(m);read(k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)read(a[i]),read(b[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)c[i]=i;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)reverse(c+a[i],c+b[i]+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)f[<span class="number">0</span>][i]=c[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">30</span>;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">            f[i][j]=f[i<span class="number">-1</span>][f[i<span class="number">-1</span>][j]];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x=i,m=k;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">30</span>;j&gt;=<span class="number">0</span>;j--)</span><br><span class="line">            <span class="keyword">if</span>(m&gt;=(<span class="number">1l</span>l&lt;&lt;j))&#123;</span><br><span class="line">                m-=(<span class="number">1l</span>l&lt;&lt;j);</span><br><span class="line">                x=f[j][x];</span><br><span class="line">            &#125;</span><br><span class="line">        writen(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>感谢 @LightningUZ 帮我调了这道题的代码，帮我调出了一个小错误。</p><p>如果题解有误，欢迎在下面评论或私信我，使得这篇题解更好。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>题解 SP2916 【GSS5 - Can you answer these queries V】</title>
      <link href="/2020/03/04/%E8%A7%A3-SP2916-%E3%80%90GSS5-Can-you-answer-these-queries-V%E3%80%91/"/>
      <url>/2020/03/04/%E8%A7%A3-SP2916-%E3%80%90GSS5-Can-you-answer-these-queries-V%E3%80%91/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/S2916" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p2916" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p><a id="more"></a><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近沉迷于数据结构，感觉数据结构很有意思。</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>先来分类讨论一下</p><h3 id="1-x2-lt-y1"><a href="#1-x2-lt-y1" class="headerlink" title="1. $x2&lt;y1$"></a>1. $x2&lt;y1$</h3><p><img src="https://i.loli.net/2020/03/04/y1Z4Y7XQADTWwM3.png" alt="afd.png"></p><p>如果 $y1&lt;x2$ 的话，答案 $=\max \limits_{ y1 \leq x \leq y2} \{ s_i \} - \min \limits_{x1 \leq x \leq x2} \{ s_i \}$</p><p>其中 $s_i$ 表示 $\sum\limits_{j=1}^{i} a_j$ ，就是俗称的前缀和</p><p><img src="https://i.loli.net/2020/03/04/E7g8BYwDZUQNypd.png" alt="afd.png"></p><p>这个东西可以用线段树维护。</p><h3 id="2-x2-gt-y1"><a href="#2-x2-gt-y1" class="headerlink" title="2. $x2&gt;=y1$"></a>2. $x2&gt;=y1$</h3><p><img src="https://i.loli.net/2020/03/04/5O18AXc39CQnliT.png" alt="afd.png"></p><p>这个怎么处理呢</p><p>答案 $=$ $\max \begin{cases}\max \limits_{ y1 \leq x \leq y2} \{ s_i \} - \min \limits_{x1 \leq x \leq y1} \{ s_i \}\ \max \limits_{ x2 \leq x \leq y2} \{ s_i \} - \min \limits_{x1 \leq x \leq x2} \{ s_i \}\ f(x,y)\end{cases}$</p><p>这里的 $f$ 函数就是最大子段和。</p><p>不会用线段树求最大子段和的可以看<a href="https://zhaohaikun.blog.luogu.org/solution-sp1716" target="_blank" rel="noopener">这里</a></p><p>最上面的 $2$ 个也是可以用线段树来维护的。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><strong>最后要注意的一点是前缀和</strong>，我们知道区间 $[i,j]$ 的和 $ = s_j-s_{i-1}$，而不是 $ = s_j-s_{i}$</p><p>这个怎么处理呢，我们发现我们的题目全部都是用 $Max$ 函数的答案减去 $Min$ 函数的答案，所以，我们可以把线段树维护的 $\min$ 全部减去 $a_{i}$</p><p>现在这份代码就能 $A$ 了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls num&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs num&lt;&lt;1|1</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">writen</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    write(x);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">5e4</span>+<span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Tree</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l,r;</span><br><span class="line">    ll lans,rans,sum,ans,max,min;</span><br><span class="line">&#125;t[MAXN*<span class="number">4</span>];</span><br><span class="line"><span class="keyword">int</span> a[MAXN],x,y,n,T,T_,l1,r1,l2,r2;</span><br><span class="line">ll s[MAXN];</span><br><span class="line"><span class="function">Tree <span class="title">pushup</span><span class="params">(Tree L,Tree R)</span></span>&#123;</span><br><span class="line">    Tree z;</span><br><span class="line">    z.sum=L.sum+R.sum;</span><br><span class="line">    z.lans=max(L.lans,L.sum+R.lans);</span><br><span class="line">    z.rans=max(R.rans,R.sum+L.rans);</span><br><span class="line">    z.ans=max(max(L.ans,R.ans),L.rans+R.lans);</span><br><span class="line">    z.max=max(L.max,R.max);</span><br><span class="line">    z.min=min(L.min,R.min);</span><br><span class="line">    z.l=L.l;z.r=R.r;</span><br><span class="line">    <span class="keyword">return</span> z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> num)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l==r)&#123;</span><br><span class="line">        t[num].l=l;</span><br><span class="line">        t[num].r=r;</span><br><span class="line">        t[num].sum=a[l];</span><br><span class="line">        t[num].lans=a[l];</span><br><span class="line">        t[num].rans=a[l];</span><br><span class="line">        t[num].ans=a[l];</span><br><span class="line">        t[num].max=s[l];</span><br><span class="line">        t[num].min=s[l]-a[l];</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    build(l,mid,ls);</span><br><span class="line">    build(mid+<span class="number">1</span>,r,rs);</span><br><span class="line">    t[num]=pushup(t[ls],t[rs]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Tree <span class="title">query</span><span class="params">(<span class="keyword">int</span> num)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;=t[num].l&amp;&amp;t[num].r&lt;=y)<span class="keyword">return</span> t[num];</span><br><span class="line">    <span class="keyword">if</span>(t[rs].l&gt;y)<span class="keyword">return</span> query(ls);</span><br><span class="line">    <span class="keyword">if</span>(t[ls].r&lt;x)<span class="keyword">return</span> query(rs);</span><br><span class="line">    <span class="keyword">return</span> pushup(query(ls),query(rs));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">Max</span><span class="params">(<span class="keyword">int</span> num)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(t[num].l&gt;=x&amp;&amp;t[num].r&lt;=y)<span class="keyword">return</span> t[num].max;</span><br><span class="line">    <span class="keyword">if</span>(t[ls].r&lt;x)<span class="keyword">return</span> Max(rs);</span><br><span class="line">    <span class="keyword">if</span>(t[rs].l&gt;y)<span class="keyword">return</span> Max(ls);</span><br><span class="line">    <span class="keyword">return</span> max(Max(ls),Max(rs));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">Min</span><span class="params">(<span class="keyword">int</span> num)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(t[num].l&gt;=x&amp;&amp;t[num].r&lt;=y)<span class="keyword">return</span> t[num].min;</span><br><span class="line">    <span class="keyword">if</span>(t[ls].r&lt;x)<span class="keyword">return</span> Min(rs);</span><br><span class="line">    <span class="keyword">if</span>(t[rs].l&gt;y)<span class="keyword">return</span> Min(ls);</span><br><span class="line">    <span class="keyword">return</span> min(Min(ls),Min(rs));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">Mx</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    x=a;y=b;</span><br><span class="line">    <span class="keyword">return</span> Max(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">Mn</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    x=a;y=b;</span><br><span class="line">    <span class="keyword">return</span> Min(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">qy</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    x=a;y=b;</span><br><span class="line">    <span class="keyword">return</span> query(<span class="number">1</span>).ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    read(T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        read(n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)read(a[i]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)s[i]=s[i<span class="number">-1</span>]+a[i];</span><br><span class="line">        build(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">        read(T_);</span><br><span class="line">        <span class="keyword">while</span>(T_--)&#123;</span><br><span class="line">            read(l1);read(r1);read(l2);read(r2);</span><br><span class="line">            <span class="keyword">if</span>(r1&gt;l2)writen(max(qy(l2,r1),max(Mx(l2,r2)-Mn(l1,l2),Mx(r1,r2)-Mn(l1,r1))));</span><br><span class="line">            <span class="keyword">else</span> writen(Mx(l2,r2)-Mn(l1,r1));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>这篇题解如果有问题可以私信或评论，告诉我，一起完善</p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题库 </category>
          
          <category> SPOJ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分类讨论 </tag>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>题解 SP1716 【GSS3 - Can you answer these queries III】</title>
      <link href="/2020/03/03/%E8%A7%A3-SP1716-%E3%80%90GSS3-Can-you-answer-these-queries-III%E3%80%91/"/>
      <url>/2020/03/03/%E8%A7%A3-SP1716-%E3%80%90GSS3-Can-you-answer-these-queries-III%E3%80%91/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/SP1716" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p1716" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p><a id="more"></a><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>首先说一下题意。就是每次给出 $x$ 和 $y$ 两个数，求 $x$ 到 $y$ 这个区间的最大子段和</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>首先我们看这个数据范围，我们显然是要用线段树来做这道题。</p><p>我们考虑如何<code>pushup</code>。</p><h3 id="pushup的操作"><a href="#pushup的操作" class="headerlink" title="pushup的操作"></a><code>pushup</code>的操作</h3><p><img src="https://i.loli.net/2020/03/03/luVJw8qUL6gb1WT.png" alt="360截图17001020107151123.png"></p><h4 id="区间最大字段和"><a href="#区间最大字段和" class="headerlink" title="区间最大字段和"></a>区间最大字段和</h4><p>我们考虑一个区间的最大子段</p><p>我们分 $3$ 种情况讨论</p><h5 id="1-有可能是左边部分的最大子段和"><a href="#1-有可能是左边部分的最大子段和" class="headerlink" title="1. 有可能是左边部分的最大子段和"></a>1. 有可能是左边部分的最大子段和</h5><p><img src="https://i.loli.net/2020/03/03/MbQhGW7ruBJPYXk.png" alt="asdsajdfhiujhkja.png"></p><p>答案就是左边部分的最大子段和</p><h5 id="2-也有可能右边部分的最大子段和"><a href="#2-也有可能右边部分的最大子段和" class="headerlink" title="2. 也有可能右边部分的最大子段和"></a>2. 也有可能右边部分的最大子段和</h5><p><img src="https://i.loli.net/2020/03/03/EO9GtVwImgJ163u.png" alt="asdasajdfhiujhkja.png"></p><p>答案就是右边部分的最大子段和</p><h5 id="3-最大最大和有可能跨越了中间"><a href="#3-最大最大和有可能跨越了中间" class="headerlink" title="3. 最大最大和有可能跨越了中间"></a>3. 最大最大和有可能跨越了中间</h5><p><img src="https://i.loli.net/2020/03/03/fpndbVqamoOIXtK.png" alt="aasdasajdfhiujhkja.png"></p><p>答案就是左边部分右端点往左的最大子段和 $+$ 左端点往右的最大子段和</p><h4 id="发现"><a href="#发现" class="headerlink" title="发现"></a>发现</h4><p>所以，我们需要对于所有节点，还要维护它们以左端点往右的最大子段和、右端点往左的最大子段和。</p><p>我们再考虑如何维护一个区间以左端点往右的最大子段和、右端点往左的最大子段和。</p><h4 id="以左端点往右的最大子段和"><a href="#以左端点往右的最大子段和" class="headerlink" title="以左端点往右的最大子段和"></a>以左端点往右的最大子段和</h4><p>我们先考虑以左端点往右的最大子段和</p><p>我们分 $2$ 种情况讨论</p><h5 id="1-不跨越中间"><a href="#1-不跨越中间" class="headerlink" title="1. 不跨越中间"></a>1. 不跨越中间</h5><p><img src="https://i.loli.net/2020/03/03/b2BmrAucJ8jLdER.png" alt="aaasajdfhiujhkja.png"></p><p>答案就是左部分的以左端点往右的最大子段和</p><h5 id="2-跨越中间"><a href="#2-跨越中间" class="headerlink" title="2. 跨越中间"></a>2. 跨越中间</h5><p><img src="https://i.loli.net/2020/03/03/8TJ4RkfYzWdVSPX.png" alt="asdssssajdfhiujhkja.png"></p><p>答案就是左部分的和 $+$ 右部分以左端点往右的最大子段和</p><h4 id="以右端点往左的最大子段和"><a href="#以右端点往左的最大子段和" class="headerlink" title="以右端点往左的最大子段和"></a>以右端点往左的最大子段和</h4><p>我们先考虑以右端点往左的最大子段和</p><p>我们分 $2$ 种情况讨论</p><h5 id="1-不跨越中间-1"><a href="#1-不跨越中间-1" class="headerlink" title="1. 不跨越中间"></a>1. 不跨越中间</h5><p><img src="https://i.loli.net/2020/03/03/6Nv3yeZRlqLfo2C.png" alt="kja.png"></p><p>答案就是右部分的以左端点往右的最大子段和</p><h5 id="2-跨越中间-1"><a href="#2-跨越中间-1" class="headerlink" title="2. 跨越中间"></a>2. 跨越中间</h5><p><img src="https://i.loli.net/2020/03/03/ZuSvq8rM3mKwUsG.png" alt="df.png"></p><p>答案就是右部分的和 $+$ 左部分以右端点往左的最大子段和</p><h4 id="发现-1"><a href="#发现-1" class="headerlink" title="发现"></a>发现</h4><p>我们发现我们还需要维护区间和，这个问题很简单，不在讲解了。</p><p>所以我们现在总共要维护 $4$ 个东西</p><p>分别是</p><p>$lans$、$rans$、$ans$、$sum$</p><h4 id="边界情况——即整个区间是一个点"><a href="#边界情况——即整个区间是一个点" class="headerlink" title="边界情况——即整个区间是一个点"></a>边界情况——即整个区间是一个点</h4><p>我们可以发现</p><p>$lans$、$rans$、$ans$、$sum$ 都为这个点的值</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Tree <span class="title">pushup</span><span class="params">(Tree L,Tree R)</span></span>&#123;</span><br><span class="line">    Tree z;</span><br><span class="line">    z.sum=L.sum+R.sum;<span class="comment">//和</span></span><br><span class="line">    z.l=max(L.l,L.sum+R.l);<span class="comment">//2种情况</span></span><br><span class="line">    z.r=max(R.r,R.sum+L.r);<span class="comment">//2种情况</span></span><br><span class="line">    z.ans=max(max(L.ans,R.ans),L.r+R.l);<span class="comment">//3种情况</span></span><br><span class="line">    <span class="keyword">return</span> z;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我写了一个带返回值的函数，就是为了下面方便啦。</p><h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><p>上文已经讲解了最大子段和的 $3$ 中情况，已经知道最大子段和跟 $4$ 个东西有关。</p><p>所以我们要定义一个返回值为 $Tree$ 的函数。</p><p>那么现在，关键就在于合并区间，那么现在之前的<code>pushup</code>就可以被调用了。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Tree <span class="title">query</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> num,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l&lt;=x&amp;&amp;r&lt;=y)<span class="keyword">return</span> t[num];</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(y&lt;=mid)<span class="keyword">return</span> query(x,y,ls,l,mid);<span class="comment">//右区间和查询区间没有交，答案当然在左区间</span></span><br><span class="line">    <span class="keyword">if</span>(mid&lt;x)<span class="keyword">return</span> query(x,y,rs,mid+<span class="number">1</span>,r);<span class="comment">//左区间和查询区间没有交，答案当然在右区间</span></span><br><span class="line">    <span class="keyword">return</span> pushup(query(x,mid,ls,l,mid),query(mid+<span class="number">1</span>,y,rs,mid+<span class="number">1</span>,r));<span class="comment">//是不是很简洁？</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2><p>我们已经把这道题的重点都搞清楚了，接下来就可以放代码了，至于单点修改不会的请自行去<a href="https://oi-wiki.org/ds/seg/" target="_blank" rel="noopener">学习</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls num&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs num&lt;&lt;1|1</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">writen</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    write(x);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">5e4</span>+<span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Tree</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> sum,l,r,ans;<span class="comment">//维护的4个量</span></span><br><span class="line">&#125;t[MAXN*<span class="number">4</span>];</span><br><span class="line"><span class="keyword">int</span> a[MAXN],f,x,y;</span><br><span class="line"><span class="function">Tree <span class="title">pushup</span><span class="params">(Tree L,Tree R)</span></span>&#123;</span><br><span class="line">    Tree z;</span><br><span class="line">    z.sum=L.sum+R.sum;<span class="comment">//和</span></span><br><span class="line">    z.l=max(L.l,L.sum+R.l);<span class="comment">//2种情况</span></span><br><span class="line">    z.r=max(R.r,R.sum+L.r);<span class="comment">//2种情况</span></span><br><span class="line">    z.ans=max(max(L.ans,R.ans),L.r+R.l);<span class="comment">//3种情况</span></span><br><span class="line">    <span class="keyword">return</span> z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> num)</span></span>&#123;<span class="comment">//建树</span></span><br><span class="line">    <span class="keyword">if</span>(l==r)&#123;</span><br><span class="line">        t[num].sum=a[l];</span><br><span class="line">        t[num].l=a[l];</span><br><span class="line">        t[num].r=a[l];</span><br><span class="line">        t[num].ans=a[l];<span class="comment">//边界初始化</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    build(l,mid,ls);</span><br><span class="line">    build(mid+<span class="number">1</span>,r,rs);</span><br><span class="line">    t[num]=pushup(t[ls],t[rs]);<span class="comment">//pushup</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> num)</span></span>&#123;<span class="comment">//单点修改</span></span><br><span class="line">    <span class="keyword">if</span>(l==r)&#123;</span><br><span class="line">        t[num].sum=y;</span><br><span class="line">        t[num].l=y;</span><br><span class="line">        t[num].r=y;</span><br><span class="line">        t[num].ans=y;<span class="comment">//边界初始化</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;=mid)change(l,mid,ls);</span><br><span class="line">    <span class="keyword">else</span> change(mid+<span class="number">1</span>,r,rs);</span><br><span class="line">    t[num]=pushup(t[ls],t[rs]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Tree <span class="title">query</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> num,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l&lt;=x&amp;&amp;r&lt;=y)<span class="keyword">return</span> t[num];</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(y&lt;=mid)<span class="keyword">return</span> query(x,y,ls,l,mid);<span class="comment">//右区间和查询区间没有交，答案当然在左区间</span></span><br><span class="line">    <span class="keyword">if</span>(mid&lt;x)<span class="keyword">return</span> query(x,y,rs,mid+<span class="number">1</span>,r);<span class="comment">//左区间和查询区间没有交，答案当然在右区间</span></span><br><span class="line">    <span class="keyword">return</span> pushup(query(x,mid,ls,l,mid),query(mid+<span class="number">1</span>,y,rs,mid+<span class="number">1</span>,r));<span class="comment">//是不是很简洁？</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,T;</span><br><span class="line">    read(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)read(a[i]);</span><br><span class="line">    build(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">    read(T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        read(f);read(x);read(y);</span><br><span class="line">        <span class="keyword">if</span>(f==<span class="number">0</span>)change(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">else</span> writen(query(x,y,<span class="number">1</span>,<span class="number">1</span>,n).ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 洛谷题库 </category>
          
          <category> SPOJ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分类讨论 </tag>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>题解 P5835 【[USACO19DEC]Meetings S】</title>
      <link href="/2020/03/03/%E8%A7%A3-P5835-%E3%80%90-USACO19DEC-Meetings-S%E3%80%91/"/>
      <url>/2020/03/03/%E8%A7%A3-P5835-%E3%80%90-USACO19DEC-Meetings-S%E3%80%91/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P5835" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p5835" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p><a id="more"></a><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这道题目是道好题，想通了之后就可以把轻松这道题做出来。</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>先把一个结论写出来。</p><p>无论所有奶牛怎么走，它们的体重从左往右组成的序列是不会发生改变的。</p><p>这个结论简单地说明一下。</p><ol><li><p>首先我们可以把 $2$ 头牛相遇看成 $2$ 头牛走的方向不变，只是交换了体重。</p></li><li><p>如果这些奶牛的体重从左往右组成的序列发生改变，一定是 $2$ 头牛相向而行，然后发生序列变化。但是现在我们可以把交换体重看做<strong>如果序列发生变化，就将 $2$ 数交换，不让序列发生改变。</strong></p></li></ol><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><h3 id="二分·时间"><a href="#二分·时间" class="headerlink" title="二分·时间"></a>二分·时间</h3><p>有了这个性质，就好办了。</p><p>我们发现时间是有单调性的，然后我们就可以二分时间。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> ll=<span class="number">0</span>,rr=INT_MIN&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(ll+<span class="number">1</span>&lt;rr)&#123;</span><br><span class="line">    <span class="keyword">int</span> mid=(ll+rr)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(check(mid))rr=mid;</span><br><span class="line">    <span class="keyword">else</span> ll=mid;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>至于 $check$ 怎么写呢？</p><p>我们先要把 $a$ 数组是 <strong>按位置从小到大排序。</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp);</span><br></pre></td></tr></table></figure><p>$cmp$：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node x,node y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.x&lt;y.x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先放一下代码。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> llll=<span class="number">1</span>,rrrr=n,s=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">if</span>(a[i].d==<span class="number">1</span>)s+=a[i].x+x&gt;=l?a[rrrr--].w:<span class="number">0</span>;<span class="comment">//如果能到，重量就是a[rr--].w</span></span><br><span class="line">        <span class="keyword">else</span> s+=a[i].x-x&lt;=<span class="number">0</span>?a[llll++].w:<span class="number">0</span>;<span class="comment">//如果能到，重量就是a[ll++].w</span></span><br><span class="line">    <span class="keyword">return</span> s*<span class="number">2</span>&gt;=sm;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其实就是</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ll=<span class="number">1</span>,rr=n,s=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">if</span>(a[i].d==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i].x+x&gt;=l)s+=a[rr--].w;<span class="comment">//如果能到，重量就是a[rr--].w</span></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i].x-x&lt;=<span class="number">0</span>)s+=a[ll++].w;<span class="comment">//如果能到，重量就是a[ll++].w</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> s*<span class="number">2</span>&gt;=sm;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解释一下，有人可能会</p><p>问：</p><blockquote><p>程序里的体重不一定对啊？</p></blockquote><p>答：</p><blockquote><p>最后的体重显然是</p><p>$\sum\limits_{i=1}^{k1} w_{i}+\sum\limits_{i=k2}^{n} w_{i}$</p><p>因为最后到达牛棚的，一定是达到  $0$  的若干个，到达 $L$ 的若干个，再联系一下上面的性质，就显然是这个式子了。当然我们的 $a$ 数组是 <strong>按位置从小到大排序的。</strong></p></blockquote><h3 id="二分·查找"><a href="#二分·查找" class="headerlink" title="二分·查找"></a>二分·查找</h3><p>我们知道了时间，距离 $AC$ 还需要找到奶牛相遇的对数的总数。</p><p>现在，我们的 $a$ 数组已经按位置从小到大排序了。</p><p>我们从左往右扫过去，我们知道，相遇的对数 $=$ 往左走的奶牛所碰到往右走的奶牛的数量之和。</p><p>那么碰到的往右走的奶牛的数量之和，我们可以用<strong>二分</strong>来统计。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[i].d==<span class="number">-1</span>)&#123;<span class="comment">//向左走</span></span><br><span class="line">        <span class="keyword">int</span> xx=a[i].x-rr*<span class="number">2</span>;<span class="comment">//这里注意速度是1+1=2</span></span><br><span class="line">        <span class="keyword">int</span> lll=<span class="number">0</span>,rrr=k+<span class="number">1</span>;<span class="comment">//二分，注意边界</span></span><br><span class="line">        <span class="keyword">while</span>(lll+<span class="number">1</span>&lt;rrr)&#123;</span><br><span class="line">            <span class="keyword">int</span> mid=(lll+rrr)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(f[mid]&gt;=xx)rrr=mid;</span><br><span class="line">            <span class="keyword">else</span> lll=mid;</span><br><span class="line">        &#125;</span><br><span class="line">        ans+=k-rrr+<span class="number">1</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        f[++k]=a[i].x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的二分是在找<strong>能与这头向左走的牛相遇的最左边的牛。</strong></p><p>这里的 $f$ 数组是记录向右走的牛。</p><h2 id="总代码"><a href="#总代码" class="headerlink" title="总代码"></a>总代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">5e4</span>+<span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> w,x,d;</span><br><span class="line">&#125;a[MAXN];</span><br><span class="line"><span class="keyword">int</span> n,l,sm,f[MAXN],k,ans;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node x,node y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.x&lt;y.x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ll=<span class="number">1</span>,rr=n,s=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">if</span>(a[i].d==<span class="number">1</span>)s+=a[i].x+x&gt;=l?a[rr--].w:<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span> s+=a[i].x-x&lt;=<span class="number">0</span>?a[ll++].w:<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> s*<span class="number">2</span>&gt;=sm;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    read(n);read(l);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)read(a[i].w),read(a[i].x),read(a[i].d),sm+=a[i].w;</span><br><span class="line">    sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp);</span><br><span class="line">    <span class="keyword">int</span> ll=<span class="number">0</span>,rr=INT_MAX&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(ll+<span class="number">1</span>&lt;rr)&#123;</span><br><span class="line">        <span class="keyword">int</span> mid=(ll+rr)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(check(mid))rr=mid;</span><br><span class="line">        <span class="keyword">else</span> ll=mid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i].d==<span class="number">-1</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> xx=a[i].x-rr*<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">int</span> lll=<span class="number">0</span>,rrr=k+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span>(lll+<span class="number">1</span>&lt;rrr)&#123;</span><br><span class="line">                <span class="keyword">int</span> mid=(lll+rrr)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(f[mid]&gt;=xx)rrr=mid;</span><br><span class="line">                <span class="keyword">else</span> lll=mid;</span><br><span class="line">            &#125;</span><br><span class="line">            ans+=k-rrr+<span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            f[++k]=a[i].x;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>总体来讲，这道题目细节比较多，思维难度也比较高。</p><p>所以，如作者有错误请在评论区指出，谢谢。</p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题库 </category>
          
          <category> usaco </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二分 </tag>
            
            <tag> 排序 </tag>
            
            <tag> 贪心 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>题解 P3205 【[HNOI2010]合唱队】</title>
      <link href="/2020/03/03/%E8%A7%A3-P3205-%E3%80%90-HNOI2010-%E5%90%88%E5%94%B1%E9%98%9F%E3%80%91/"/>
      <url>/2020/03/03/%E8%A7%A3-P3205-%E3%80%90-HNOI2010-%E5%90%88%E5%94%B1%E9%98%9F%E3%80%91/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3205" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p3205" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p><a id="more"></a><h3 id="讲讲我的做法"><a href="#讲讲我的做法" class="headerlink" title="讲讲我的做法"></a>讲讲我的做法</h3><p>看了题目发现要用区间$dp$，为什么?</p><p>我们发现区间$dp$有一个性质——大区间包涵小区间，这道题就符合这样的一个性质<br><img src="https://cdn.luogu.com.cn/upload/pic/75397.png" alt=""><br>所以我们要用区间$dp$来解决这道题。</p><h4 id="如何设计状态"><a href="#如何设计状态" class="headerlink" title="如何设计状态"></a>如何设计状态</h4><p>那么我们要怎么设计状态，我们想，每给人进入队伍里，只有2种可能，1种是从左边加入，另外1种是从右边进入，所以我们的装态是有3个数</p><p>$f[i][j][0]$表示的是第$i$人从左边进来的方案数</p><p>$f[i][j][1]$表示的是第$j$人从右边进来的方案数</p><h4 id="推导状态转移方程"><a href="#推导状态转移方程" class="headerlink" title="推导状态转移方程"></a>推导状态转移方程</h4><p>从左边进来肯定前1个人比他高，前1个人有2种情况，要么在$i+1$号位置，要么在$j$号位置。</p><p>同理</p><p>从右边进来肯定前1个人比他矮，前1个人有2种情况，要么在$j-1$号位置，要么在$i$号位置。</p><p>那么状态转移方程就出来了<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(a[i]&lt;a[i+<span class="number">1</span>])f[i][j][<span class="number">0</span>]+=f[i+<span class="number">1</span>][j][<span class="number">0</span>];</span><br><span class="line"><span class="keyword">if</span>(a[i]&lt;a[j])f[i][j][<span class="number">0</span>]+=f[i+<span class="number">1</span>][j][<span class="number">1</span>];</span><br><span class="line"><span class="keyword">if</span>(a[j]&gt;a[i])f[i][j][<span class="number">1</span>]+=f[i][j<span class="number">-1</span>][<span class="number">0</span>];</span><br><span class="line"><span class="keyword">if</span>(a[j]&gt;a[j<span class="number">-1</span>])f[i][j][<span class="number">1</span>]+=f[i][j<span class="number">-1</span>][<span class="number">1</span>];</span><br><span class="line">f[i][j][<span class="number">0</span>]%=<span class="number">19650827</span>;</span><br><span class="line">f[i][j][<span class="number">1</span>]%=<span class="number">19650827</span>;</span><br></pre></td></tr></table></figure></p><h4 id="边界条件"><a href="#边界条件" class="headerlink" title="边界条件"></a>边界条件</h4><p>当$i=j$的时候显然只有一种方案，所以边界条件是<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)f[i][i][<span class="number">0</span>]=<span class="number">1</span>,f[i][i][<span class="number">1</span>]=<span class="number">1</span>;</span><br></pre></td></tr></table></figure><br>然而你会发现你WA了，为什么</p><p>因为，只有一个人的时候方案只有一种，可是我们这里却有2种方案，所以我们得默认1个人的时候，是从左边进来，于是我们就有了正确的边界条件<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)f[i][i][<span class="number">0</span>]=<span class="number">1</span>;</span><br></pre></td></tr></table></figure></p><h4 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">2010</span>][<span class="number">2010</span>][<span class="number">2</span>],a[<span class="number">2010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)f[i][i][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> len=<span class="number">1</span>;len&lt;=n;len++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,j=i+len;j&lt;=n;i++,j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]&lt;a[i+<span class="number">1</span>])f[i][j][<span class="number">0</span>]+=f[i+<span class="number">1</span>][j][<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">if</span>(a[i]&lt;a[j])f[i][j][<span class="number">0</span>]+=f[i+<span class="number">1</span>][j][<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span>(a[j]&gt;a[i])f[i][j][<span class="number">1</span>]+=f[i][j<span class="number">-1</span>][<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">if</span>(a[j]&gt;a[j<span class="number">-1</span>])f[i][j][<span class="number">1</span>]+=f[i][j<span class="number">-1</span>][<span class="number">1</span>];</span><br><span class="line">            f[i][j][<span class="number">0</span>]%=<span class="number">19650827</span>;</span><br><span class="line">            f[i][j][<span class="number">1</span>]%=<span class="number">19650827</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;(f[<span class="number">1</span>][n][<span class="number">0</span>]+f[<span class="number">1</span>][n][<span class="number">1</span>])%<span class="number">19650827</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 洛谷题库 </category>
          
          <category> HN省选 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dp </tag>
            
            <tag> 区间dp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>题解 P1002 【过河卒】</title>
      <link href="/2020/03/03/%E8%A7%A3-P1002-%E3%80%90%E8%BF%87%E6%B2%B3%E5%8D%92%E3%80%91/"/>
      <url>/2020/03/03/%E8%A7%A3-P1002-%E3%80%90%E8%BF%87%E6%B2%B3%E5%8D%92%E3%80%91/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1002" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p1002" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p><a id="more"></a><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/dqlo9i4w.png" alt=""></p><p>简单描述一下题意：</p><p>士兵想要过河，他每一次可以往下走一格，也可以往右走一格，但马一步走到的地方是不能走的，问走到$n$行，$m$列有多少种走法</p><p>我们显然应该先根据马的位置将不能走的格子做一下标记</p><p>于是，就会写下这段代码：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> x,<span class="keyword">long</span> <span class="keyword">long</span> y)</span></span>&#123;</span><br><span class="line">    ma[x][y]=<span class="number">1</span>;</span><br><span class="line">    ma[x<span class="number">-1</span>][y<span class="number">-2</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x<span class="number">-2</span>][y<span class="number">-1</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x<span class="number">-2</span>][y+<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x<span class="number">-1</span>][y+<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x+<span class="number">1</span>][y<span class="number">-2</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x+<span class="number">2</span>][y<span class="number">-1</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x+<span class="number">2</span>][y+<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x+<span class="number">1</span>][y+<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>之后就可以使用奥数中的一种简单而常用的方法——<strong>标数法</strong></p><p><strong>可以举个例子</strong>：</p><p><img src="https://i.loli.net/2019/10/25/OlK3HhBWmTRqguf.png" alt="123.png"></p><p>从这个表格的第一行第一列，走到第二行第二列的走法数量是由走到第一行第二列的方案数+第二行第一列的方案数</p><p>也就是走到x行，y列的方案数=走到x-1行，y列的方案数+走到x行，y-1列的方案数（出界就按0算）</p><p>也就是</p><script type="math/tex; mode=display">f[i][j]=f[i-1][j]+f[i][j-1]</script><p>因为走到$x$行$y$列的方案显然是来自于它的左边和它的上面，因为只有这两个格子才可以一步到达这个格子。</p><p>于是我们就可以开始递推：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(i==<span class="number">1</span>&amp;&amp;j==<span class="number">1</span>)<span class="keyword">continue</span>;</span><br><span class="line">       <span class="keyword">if</span>(ma[i][j]==<span class="number">0</span>)x[i][j]=x[i<span class="number">-1</span>][j]+x[i][j<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>下面是我AC的代码<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a,b,n,m,x[<span class="number">23</span>][<span class="number">23</span>],ma[<span class="number">23</span>][<span class="number">23</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> x,<span class="keyword">long</span> <span class="keyword">long</span> y)</span></span>&#123;</span><br><span class="line">    ma[x][y]=<span class="number">1</span>;</span><br><span class="line">    ma[x<span class="number">-1</span>][y<span class="number">-2</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x<span class="number">-2</span>][y<span class="number">-1</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x<span class="number">-2</span>][y+<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x<span class="number">-1</span>][y+<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x+<span class="number">1</span>][y<span class="number">-2</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x+<span class="number">2</span>][y<span class="number">-1</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x+<span class="number">2</span>][y+<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x+<span class="number">1</span>][y+<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld %lld"</span>,&amp;n,&amp;m,&amp;a,&amp;b);</span><br><span class="line">    a++;</span><br><span class="line">    b++;</span><br><span class="line">    n++;</span><br><span class="line">    m++;</span><br><span class="line">    work(a,b);</span><br><span class="line">    x[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i==<span class="number">1</span>&amp;&amp;j==<span class="number">1</span>)<span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span>(ma[i][j]==<span class="number">0</span>)x[i][j]=x[i<span class="number">-1</span>][j]+x[i][j<span class="number">-1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld"</span>,x[n][m]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="后记与补充"><a href="#后记与补充" class="headerlink" title="后记与补充"></a>后记与补充</h1><p><img src="https://i.loli.net/2019/10/25/OlK3HhBWmTRqguf.png" alt="123.png"></p><p>观看这张图，我们还可以发现其他的东西，我们能发现下面一行比上一行大的值，就是它左边格子的值，所以，我们可以将这道题优化成一维，代码实现也是很简单的。</p><script type="math/tex; mode=display">f[i]+=f[i-1]</script><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a,b,n,m,f[<span class="number">23</span>],ma[<span class="number">23</span>][<span class="number">23</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> x,<span class="keyword">long</span> <span class="keyword">long</span> y)</span></span>&#123;</span><br><span class="line">    ma[x][y]=<span class="number">1</span>;</span><br><span class="line">    ma[x<span class="number">-1</span>][y<span class="number">-2</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x<span class="number">-2</span>][y<span class="number">-1</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x<span class="number">-2</span>][y+<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x<span class="number">-1</span>][y+<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x+<span class="number">1</span>][y<span class="number">-2</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x+<span class="number">2</span>][y<span class="number">-1</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x+<span class="number">2</span>][y+<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x+<span class="number">1</span>][y+<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld %lld"</span>,&amp;n,&amp;m,&amp;a,&amp;b);</span><br><span class="line">    a++;</span><br><span class="line">    b++;</span><br><span class="line">    n++;</span><br><span class="line">    m++;</span><br><span class="line">    work(a,b);</span><br><span class="line">    x[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">1</span>&amp;&amp;j==<span class="number">1</span>)<span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span>(ma[i][j]==<span class="number">0</span>)f[j]+=f[j<span class="number">-1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld"</span>,f[m]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果我的文章对你有帮助请点个赞！！！</p><p>谢谢。</p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dp </tag>
            
            <tag> 递推 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>题解 分割田地</title>
      <link href="/2020/03/02/%E9%A2%98%E8%A7%A3-%E5%88%86%E5%89%B2%E7%94%B0%E5%9C%B0/"/>
      <url>/2020/03/02/%E9%A2%98%E8%A7%A3-%E5%88%86%E5%89%B2%E7%94%B0%E5%9C%B0/</url>
      
        <content type="html"><![CDATA[<p>这篇总的题解蒟蒻写了 $3.5h s$！作为回报，你们是不是应该去<a href="https://zhaohaikun.blog.luogu.org/" target="_blank" rel="noopener">$ZHK$ 的洛谷博客</a>里给 $ZHK$ 的所有题解点赞呢！</p><a id="more"></a><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这道题目呢，真的很复杂。</p><p>考试的时候呢，看到如此小的数据，就写了个搜索，写好之后一测，发现不对了。发现了一种情况。</p><p><img src="https://i.loli.net/2020/03/02/rAgO8JXEvZDmNL3.png" alt=""></p><p>然后我就 $fst$ 了，还有 $5$ 分钟，我终于想到了 $dp$，这也就是正解。</p><p>然后没写完 $qwq$。</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>我们定义：$f_{i,j,0/1}$ 代表前 $i$ 列，分割成 $j$ 份，最后一列 $2$ 块是否在同一块地。</p><p><del>这就好办了</del></p><p>我们必须考虑两列。因为此列是否跟前一列连，也是很重要的。</p><p>然后，我们可以开始分类讨论。</p><p>为了方便看，我用了四种颜色来画。分别是红、黄、橙、绿。</p><h3 id="这-1-列-2-个格子不在一块"><a href="#这-1-列-2-个格子不在一块" class="headerlink" title="这 $1$ 列 $2$ 个格子不在一块"></a>这 $1$ 列 $2$ 个格子不在一块</h3><p>我们先考虑最后 $2$ 块颜色不一样的情况。</p><h4 id="前-1-列-2-个格子不在一块"><a href="#前-1-列-2-个格子不在一块" class="headerlink" title="前 $1$ 列 $2$ 个格子不在一块"></a>前 $1$ 列 $2$ 个格子不在一块</h4><h5 id="情况-1"><a href="#情况-1" class="headerlink" title="情况 $1$"></a>情况 $1$</h5><p><img src="https://i.loli.net/2020/03/02/GrLOu8vTR7tmMhS.png" alt=""></p><script type="math/tex; mode=display">f_{i,j,0}+=f_{i-1,j-2,0}</script><h5 id="情况-2"><a href="#情况-2" class="headerlink" title="情况 $2$"></a>情况 $2$</h5><p><img src="https://i.loli.net/2020/03/02/54TXbMuplHBONFK.png" alt=""></p><script type="math/tex; mode=display">f_{i,j,0}+=f_{i-1,j-1,0}</script><h5 id="情况-3"><a href="#情况-3" class="headerlink" title="情况 $3$"></a>情况 $3$</h5><p><img src="https://i.loli.net/2020/03/02/OQPEjcir1sD9elV.png" alt=""></p><script type="math/tex; mode=display">f_{i,j,0}+=f_{i-1,j-1,0}</script><p>注意：情况 $3$ 和情况 $2$ 为 $2$ 种不同的情况，一定不要漏考虑。</p><h5 id="情况-4"><a href="#情况-4" class="headerlink" title="情况 $4$"></a>情况 $4$</h5><p><img src="https://i.loli.net/2020/03/02/YaWSKv1P2N7urGp.png" alt="360截图18720124667558.png"></p><p>$f_{i,j,0}+=f_{i-1,j-0,0}$</p><h4 id="前-1-列-2-个格子在一块"><a href="#前-1-列-2-个格子在一块" class="headerlink" title="前 $1$ 列 $2$ 个格子在一块"></a>前 $1$ 列 $2$ 个格子在一块</h4><h5 id="情况-1-1"><a href="#情况-1-1" class="headerlink" title="情况 $1$"></a>情况 $1$</h5><p><img src="https://i.loli.net/2020/03/02/cqXGJRam4AYUehQ.png" alt="360截图18720124667558.png"></p><script type="math/tex; mode=display">f_{i,j,0}+=f_{i-1,j-2,1}</script><h5 id="情况-2-1"><a href="#情况-2-1" class="headerlink" title="情况 $2$"></a>情况 $2$</h5><p><img src="https://i.loli.net/2020/03/02/6WS8yj7YITpCOvb.png" alt="360截图18720124667558.png"></p><script type="math/tex; mode=display">f_{i,j,0}+=f_{i-1,j-1,1}</script><h5 id="情况-3-1"><a href="#情况-3-1" class="headerlink" title="情况 $3$"></a>情况 $3$</h5><p><img src="https://i.loli.net/2020/03/02/uAKmWXgNciQk6E7.png" alt="360截图18720124667558.png"></p><script type="math/tex; mode=display">f_{i,j,0}+=f_{i-1,j-1,1}</script><p>注意：情况 $3$ 和情况 $2$ 为 $2$ 种不同的情况，一定不要漏考虑。</p><h3 id="这-1-列-2-个格子在一块"><a href="#这-1-列-2-个格子在一块" class="headerlink" title="这 $1$ 列 $2$ 个格子在一块"></a>这 $1$ 列 $2$ 个格子在一块</h3><h4 id="前-1-列-2-个格子不在一块-1"><a href="#前-1-列-2-个格子不在一块-1" class="headerlink" title="前 $1$ 列 $2$ 个格子不在一块"></a>前 $1$ 列 $2$ 个格子不在一块</h4><h5 id="情况-1-2"><a href="#情况-1-2" class="headerlink" title="情况 $1$"></a>情况 $1$</h5><p><img src="https://i.loli.net/2020/03/02/kJzqMYEhH8IQir1.png" alt="360截图18720124667558.png"></p><script type="math/tex; mode=display">f_{i,j,1}+=f_{i-1,j-1,0}</script><h5 id="情况-2-2"><a href="#情况-2-2" class="headerlink" title="情况 $2$"></a>情况 $2$</h5><p><img src="https://i.loli.net/2020/03/02/gnG3s5EBXdtLJfA.png" alt="360截图18720124667558.png"></p><script type="math/tex; mode=display">f_{i,j,1}+=f_{i-1,j-0,0}</script><h5 id="情况-3-2"><a href="#情况-3-2" class="headerlink" title="情况 $3$"></a>情况 $3$</h5><p><img src="https://i.loli.net/2020/03/02/4QslVBzaFrxtHJp.png" alt="360截图18720124667558.png"></p><script type="math/tex; mode=display">f_{i,j,1}+=f_{i-1,j-0,0}</script><p>注意：情况 $3$ 和情况 $2$ 为 $2$ 种不同的情况，一定不要漏考虑。</p><h4 id="这-1-列-2-个格子在一块-1"><a href="#这-1-列-2-个格子在一块-1" class="headerlink" title="这 $1$ 列 $2$ 个格子在一块"></a>这 $1$ 列 $2$ 个格子在一块</h4><h5 id="情况-1-3"><a href="#情况-1-3" class="headerlink" title="情况 $1$"></a>情况 $1$</h5><p><img src="https://i.loli.net/2020/03/02/8TEwPrN7GBRypnJ.png" alt="GrLOu8vTR7tmMhS.png"></p><script type="math/tex; mode=display">f_{i,j,1}+=f_{i-1,j-1,1}</script><h5 id="情况-2-3"><a href="#情况-2-3" class="headerlink" title="情况 $2$"></a>情况 $2$</h5><p><img src="https://i.loli.net/2020/03/02/amP2wcyHDd8TsRn.png" alt="GrLOu8vTR7tmMhS.png"></p><p>$f_{i,j,1}+=f_{i-1,j-0,1}$</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>代码就应该很好写了。</p><p>我是写了记忆化搜索，因为非法情况和边界条件很多。</p><h3 id="非法"><a href="#非法" class="headerlink" title="非法"></a>非法</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(i==<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(k==<span class="number">1</span>)<span class="keyword">return</span> j==<span class="number">1</span>;<span class="comment">//如果第1列的2个格子颜色相同，只能分割成1分。</span></span><br><span class="line">    <span class="keyword">return</span> j==<span class="number">2</span>;<span class="comment">//如果第1列的2个格子颜色不相同，只能分割成2分。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="边界"><a href="#边界" class="headerlink" title="边界"></a>边界</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(j==<span class="number">1</span>)<span class="keyword">return</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>你会发现，</p><h3 id="状态转移方程"><a href="#状态转移方程" class="headerlink" title="状态转移方程"></a>状态转移方程</h3><p>经过上面的推导，状态转移方程也是水到渠成了。</p><p>状态转移方程：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(k==<span class="number">0</span>)&#123;</span><br><span class="line">    f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-2</span>,<span class="number">0</span>);</span><br><span class="line">    f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-1</span>,<span class="number">0</span>);</span><br><span class="line">    f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-1</span>,<span class="number">0</span>);</span><br><span class="line">    f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-0</span>,<span class="number">0</span>);</span><br><span class="line">    f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-2</span>,<span class="number">1</span>);</span><br><span class="line">    f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-1</span>,<span class="number">1</span>);</span><br><span class="line">    f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-1</span>,<span class="number">1</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    f[i][j][<span class="number">1</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-1</span>,<span class="number">0</span>);</span><br><span class="line">    f[i][j][<span class="number">1</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-0</span>,<span class="number">0</span>);</span><br><span class="line">    f[i][j][<span class="number">1</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-0</span>,<span class="number">0</span>);</span><br><span class="line">    f[i][j][<span class="number">1</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-1</span>,<span class="number">1</span>);</span><br><span class="line">    f[i][j][<span class="number">1</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-0</span>,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总代码"><a href="#总代码" class="headerlink" title="总代码"></a>总代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,k,f[<span class="number">1010</span>][<span class="number">2010</span>][<span class="number">2</span>];</span><br><span class="line"><span class="keyword">bool</span> h[<span class="number">1010</span>][<span class="number">2010</span>][<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j,<span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(i==<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(k==<span class="number">1</span>)<span class="keyword">return</span> j==<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> j==<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(j==<span class="number">1</span>)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(h[i][j][k])<span class="keyword">return</span> f[i][j][k];</span><br><span class="line">    h[i][j][k]=<span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(k==<span class="number">0</span>)&#123;</span><br><span class="line">        f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-2</span>,<span class="number">0</span>);</span><br><span class="line">        f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-1</span>,<span class="number">0</span>);</span><br><span class="line">        f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-1</span>,<span class="number">0</span>);</span><br><span class="line">        f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-0</span>,<span class="number">0</span>);</span><br><span class="line">        f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-2</span>,<span class="number">1</span>);</span><br><span class="line">        f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-1</span>,<span class="number">1</span>);</span><br><span class="line">        f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-1</span>,<span class="number">1</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        f[i][j][<span class="number">1</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-1</span>,<span class="number">0</span>);</span><br><span class="line">        f[i][j][<span class="number">1</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-0</span>,<span class="number">0</span>);</span><br><span class="line">        f[i][j][<span class="number">1</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-0</span>,<span class="number">0</span>);</span><br><span class="line">        f[i][j][<span class="number">1</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-1</span>,<span class="number">1</span>);</span><br><span class="line">        f[i][j][<span class="number">1</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-0</span>,<span class="number">1</span>);</span><br><span class="line">    &#125;<span class="keyword">return</span> f[i][j][k];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    read(n);read(k);</span><br><span class="line">    write(dfs(n,k,<span class="number">0</span>)+dfs(n,k,<span class="number">1</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="调错"><a href="#调错" class="headerlink" title="调错"></a>调错</h3><p>然后你会发现你连样例都过不了，原来是有一种错误的情况在这里骗吃骗喝。</p><p>​   ——$j=1,k=0$</p><p>这一列 $2$ 两个格子颜色不同，还分成 $1$ 份？显然是错的（我在这里死了 $1 h$）</p><h3 id="总代码-1"><a href="#总代码-1" class="headerlink" title="总代码"></a>总代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,k,f[<span class="number">1010</span>][<span class="number">2010</span>][<span class="number">2</span>];</span><br><span class="line"><span class="keyword">bool</span> h[<span class="number">1010</span>][<span class="number">2010</span>][<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j,<span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(i==<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(k==<span class="number">1</span>)<span class="keyword">return</span> j==<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> j==<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(k==<span class="number">0</span>&amp;&amp;j==<span class="number">1</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(j==<span class="number">1</span>)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(h[i][j][k])<span class="keyword">return</span> f[i][j][k];</span><br><span class="line">    h[i][j][k]=<span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(k==<span class="number">0</span>)&#123;</span><br><span class="line">        f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-2</span>,<span class="number">0</span>);</span><br><span class="line">        f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-1</span>,<span class="number">0</span>);</span><br><span class="line">        f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-1</span>,<span class="number">0</span>);</span><br><span class="line">        f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-0</span>,<span class="number">0</span>);</span><br><span class="line">        f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-2</span>,<span class="number">1</span>);</span><br><span class="line">        f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-1</span>,<span class="number">1</span>);</span><br><span class="line">        f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-1</span>,<span class="number">1</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        f[i][j][<span class="number">1</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-1</span>,<span class="number">0</span>);</span><br><span class="line">        f[i][j][<span class="number">1</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-0</span>,<span class="number">0</span>);</span><br><span class="line">        f[i][j][<span class="number">1</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-0</span>,<span class="number">0</span>);</span><br><span class="line">        f[i][j][<span class="number">1</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-1</span>,<span class="number">1</span>);</span><br><span class="line">        f[i][j][<span class="number">1</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-0</span>,<span class="number">1</span>);</span><br><span class="line">    &#125;<span class="keyword">return</span> f[i][j][k];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    read(n);read(k);</span><br><span class="line">    write(dfs(n,k,<span class="number">0</span>)+dfs(n,k,<span class="number">1</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>这里作者大概花了 $3.5hs$ 的时间，整理，画图，写了这道题的代码</p><p>已经把我认为的所有都考虑了，如果有遗漏，欢迎找我补充。</p>]]></content>
      
      
      <categories>
          
          <category> 模拟赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搜索 </tag>
            
            <tag> 分类讨论 </tag>
            
            <tag> dp </tag>
            
            <tag> 记忆化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>题解 P1457 【城堡 The Castle】</title>
      <link href="/2020/03/02/%E9%A2%98%E8%A7%A3-P1457-%E3%80%90%E5%9F%8E%E5%A0%A1-The-Castle%E3%80%91/"/>
      <url>/2020/03/02/%E9%A2%98%E8%A7%A3-P1457-%E3%80%90%E5%9F%8E%E5%A0%A1-The-Castle%E3%80%91/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1457" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p1457" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p><a id="more"></a><p>来讨论区大摇大摆地逛了一圈后，我发现竟然大家的代码</p><h1 id="都很长"><a href="#都很长" class="headerlink" title="都很长"></a>都很长</h1><p>然而代码真的要写那么长吗</p><hr><p>首先，来分析问题，1，2，4，8，这些数显然是有特点的，也许你已经想到了没错，它们都是2的次方数。</p><p>1是2的0次方</p><p>2是2的1次方</p><p>4是2的2次方</p><p>8是2的3次方</p><p>知道这个就好办了，用什么呢？没错是位运算，哈哈！</p><p>1的二进制是1</p><p>2的二进制是10</p><p>4的二进制是100</p><p>8的二进制是1000</p><p>于是，就得出了以下代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(x&amp;<span class="number">1</span>)a[i][j][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(x&amp;<span class="number">2</span>)a[i][j][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(x&amp;<span class="number">4</span>)a[i][j][<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(x&amp;<span class="number">8</span>)a[i][j][<span class="number">3</span>]=<span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>大家也看到了，我用了一个3维数组，a[55][55][4]。</p><p>看到这道题，我首先想到的是宽搜（宽度优先搜索），用数组模拟，这道题的数据范围不大，用数组完全可能。</p><p>上代码：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;//用万能头文件开始了代码</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;<span class="comment">//命名空间</span></span><br><span class="line"><span class="keyword">int</span> n,m,h[<span class="number">55</span>][<span class="number">55</span>],a[<span class="number">55</span>][<span class="number">55</span>][<span class="number">4</span>],s,ans,z1,z2;</span><br><span class="line"><span class="keyword">int</span> q1[<span class="number">10010</span>],q2[<span class="number">10010</span>],f[<span class="number">10010</span>];</span><br><span class="line"><span class="keyword">int</span> dx[<span class="number">4</span>]=&#123;<span class="number">0</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>&#125;,dy[<span class="number">4</span>]=&#123;<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> z3;</span><br><span class="line"><span class="built_in">string</span> z=<span class="string">"WNEA"</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;m&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">            <span class="keyword">int</span> x;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;x;</span><br><span class="line">            <span class="keyword">if</span>(x&amp;<span class="number">1</span>)a[i][j][<span class="number">0</span>]=<span class="number">1</span>;<span class="comment">//位运算</span></span><br><span class="line">            <span class="keyword">if</span>(x&amp;<span class="number">2</span>)a[i][j][<span class="number">1</span>]=<span class="number">1</span>;<span class="comment">//位运算</span></span><br><span class="line">            <span class="keyword">if</span>(x&amp;<span class="number">4</span>)a[i][j][<span class="number">2</span>]=<span class="number">1</span>;<span class="comment">//位运算</span></span><br><span class="line">            <span class="keyword">if</span>(x&amp;<span class="number">8</span>)a[i][j][<span class="number">3</span>]=<span class="number">1</span>;<span class="comment">//位运算</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            <span class="keyword">if</span>(!h[i][j])&#123;</span><br><span class="line">                <span class="keyword">int</span> front=<span class="number">0</span>,rear=<span class="number">1</span>,sum=<span class="number">1</span>;</span><br><span class="line">                q1[<span class="number">1</span>]=i;</span><br><span class="line">                q2[<span class="number">1</span>]=j;</span><br><span class="line">                h[i][j]=++s;</span><br><span class="line">                <span class="keyword">while</span>(front&lt;rear)&#123;<span class="comment">//开始宽搜</span></span><br><span class="line">                    front++;</span><br><span class="line">                    <span class="keyword">int</span> x=q1[front],y=q2[front];</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;=<span class="number">3</span>;k++)&#123;</span><br><span class="line">                        <span class="keyword">int</span> tx=x+dx[k],ty=y+dy[k];</span><br><span class="line">                        <span class="keyword">if</span>(tx&gt;<span class="number">0</span>&amp;&amp;tx&lt;=n&amp;&amp;ty&gt;<span class="number">0</span>&amp;&amp;ty&lt;=m&amp;&amp;!h[tx][ty]&amp;&amp;!a[x][y][k])&#123;</span><br><span class="line">                            h[tx][ty]=s;</span><br><span class="line">                            sum++;</span><br><span class="line">                            q1[++rear]=tx;</span><br><span class="line">                            q2[rear]=ty;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;ans=max(ans,sum);</span><br><span class="line">                f[s]=sum;<span class="comment">//记录编号s的房间的间数</span></span><br><span class="line">            &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;s&lt;&lt;<span class="built_in">endl</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)<span class="comment">//这里有坑</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--)<span class="comment">//这里有坑</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=<span class="number">2</span>;k++)</span><br><span class="line">                <span class="keyword">if</span>(a[i][j][k])&#123;</span><br><span class="line">                    <span class="keyword">int</span> tx=i+dx[k],ty=j+dy[k];</span><br><span class="line">                    <span class="keyword">int</span> x=f[h[tx][ty]]+f[h[i][j]];<span class="comment">//活用数组下标</span></span><br><span class="line">                    <span class="keyword">if</span>(x&gt;ans&amp;&amp;h[tx][ty]!=h[i][j])&#123;<span class="comment">//一定要注意h[tx][ty]!=h[i][j]，有时候尽管有墙，但能通过别的房间，达到这个房间。（考虑要周全）</span></span><br><span class="line">                        ans=x;</span><br><span class="line">                        z1=i;</span><br><span class="line">                        z2=j;</span><br><span class="line">                        z3=z[k];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>&lt;&lt;z1&lt;&lt;<span class="string">" "</span>&lt;&lt;z2&lt;&lt;<span class="string">" "</span>&lt;&lt;z3;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//华丽结束</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题库 </category>
          
          <category> usaco </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bfs </tag>
            
            <tag> 搜索 </tag>
            
            <tag> 位运算 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>题解 P2642 【双子序列最大和】</title>
      <link href="/2020/03/02/%E9%A2%98%E8%A7%A3-P2642-%E3%80%90%E5%8F%8C%E5%AD%90%E5%BA%8F%E5%88%97%E6%9C%80%E5%A4%A7%E5%92%8C%E3%80%91/"/>
      <url>/2020/03/02/%E9%A2%98%E8%A7%A3-P2642-%E3%80%90%E5%8F%8C%E5%AD%90%E5%BA%8F%E5%88%97%E6%9C%80%E5%A4%A7%E5%92%8C%E3%80%91/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2642" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p2642" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p><a id="more"></a><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>其实这道题的关键就是在于预处理，其方法类似于 <a href="https://www.luogu.com.cn/problem/P1091" target="_blank" rel="noopener">合唱队形</a></p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="求最大子段和"><a href="#求最大子段和" class="headerlink" title="求最大子段和"></a>求最大子段和</h2><p>要想求出双子序列最大和，首先我们要会求出最大子段和</p><p>最大子段和的求值方法很简单</p><p>定义 $f_i$ 为以第 $i$ 个数结尾的最大子段和<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">1000010</span>],a[<span class="number">1000010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    f[<span class="number">1</span>]=a[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)f[i]=max(f[i<span class="number">-1</span>]+a[i],a[i]);</span><br><span class="line">    <span class="keyword">int</span> ans=f[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)ans=max(ans,f[i]);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="求双子序列最大和"><a href="#求双子序列最大和" class="headerlink" title="求双子序列最大和"></a>求双子序列最大和</h2><p>那么我们现在可以去求双子序列最大和</p><p>怎么求，思路是<br><img src="https://cdn.luogu.com.cn/upload/pic/75427.png" alt=""><br>如果你去枚举中间的数，然后去算左边的最大子段，再算出右边的最大子段，加起来，用打擂法，求出最大值，你会 $TLE$，毕竟$n&lt;=10^{6}$</p><p>那怎么办？我们可以预处理</p><p>我们可以用 $O(n)$ 的时间计算到前 $i$ 个数的最大子段，</p><p>我们可以用 $O(n)$ 的时间计算到后 $i$ 个数的最大子段</p><p>像这样</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">cin</span>&gt;&gt;x[i];</span><br><span class="line">f[<span class="number">1</span>]=x[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)f[i]=max(f[i<span class="number">-1</span>]+x[i],x[i]);<span class="comment">//算最大子段</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)f[i]=max(f[i<span class="number">-1</span>],f[i]);<span class="comment">//更新成最大值</span></span><br><span class="line">l[n]=x[n];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">1</span>;i--)l[i]=max(l[i+<span class="number">1</span>]+x[i],x[i]);<span class="comment">//算最大子段</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">1</span>;i--)l[i]=max(l[i+<span class="number">1</span>],l[i]);<span class="comment">//更新成最大值</span></span><br></pre></td></tr></table></figure><p>这里 $f_i$ 表示前 $i$ 个数中的最大字段和</p><p>这里 $l_i$ 表示后 $i$ 个数中的最大字段和</p><p>然后，用 $O(n)$ 的时间去枚举中间的数，打擂法求出双子序列最大和</p><p>上代码：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> x[<span class="number">1000010</span>],f[<span class="number">1000010</span>],l[<span class="number">1000010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">cin</span>&gt;&gt;x[i];</span><br><span class="line">    f[<span class="number">1</span>]=x[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)f[i]=max(f[i<span class="number">-1</span>]+x[i],x[i]);<span class="comment">//算最大子段</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)f[i]=max(f[i<span class="number">-1</span>],f[i]);<span class="comment">//算最大子段</span></span><br><span class="line">    l[n]=x[n];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">1</span>;i--)l[i]=max(l[i+<span class="number">1</span>]+x[i],x[i]);<span class="comment">//算最大子段</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">1</span>;i--)l[i]=max(l[i+<span class="number">1</span>],l[i]);<span class="comment">//算最大子段</span></span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans=f[<span class="number">1</span>]+l[<span class="number">3</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>;i&lt;n;i++)ans=max(ans,f[i<span class="number">-1</span>]+l[i+<span class="number">1</span>]);<span class="comment">//枚举中间数</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>这种预处理的方法可以优化我们的时间复杂度，避免重复计算，使我们的程序跑得更快！</p><p>感谢 @kuoluo03 帮我指出错误，已改正。</p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dp </tag>
            
            <tag> 预处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>题解 P1985 【[USACO07OPEN]翻转棋】</title>
      <link href="/2020/03/02/%E9%A2%98%E8%A7%A3-P1985-%E3%80%90-USACO07OPEN-%E7%BF%BB%E8%BD%AC%E6%A3%8B%E3%80%91/"/>
      <url>/2020/03/02/%E9%A2%98%E8%A7%A3-P1985-%E3%80%90-USACO07OPEN-%E7%BF%BB%E8%BD%AC%E6%A3%8B%E3%80%91/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1985" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p1985" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p><a id="more"></a><h2 id="讲讲我的做法"><a href="#讲讲我的做法" class="headerlink" title="讲讲我的做法"></a>讲讲我的做法</h2><p>刚开始做这道题的时候，看到$n&lt;=15$，我这个$6$年级的蒟蒻的第1反应是状压$dp$。貌似不好做。然而，等到我在省中集训的时候，老师的一席话，让我豁然开朗。今天我准备来分享一下。</p><p><strong>老师的话是：除了第1行，其他格子要不要翻是由上一行决定的。</strong></p><p>听到这里，我想应该跟那时的我一样——豁然开朗了。</p><p>用$dfs$或用2进制来枚举第1行要不要翻（推荐用$dfs$，不容易$WA$，并且时间充裕的很），然后去模拟后面的格子，最后再看最后一行是否全好了。（$dfs$注意要字典序）</p><p>我们先来看看dfs该怎么写</p><p>$code$：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x==m+<span class="number">1</span>)&#123;</span><br><span class="line">        check();<span class="comment">//判断是否成立</span></span><br><span class="line">        <span class="keyword">return</span>;<span class="comment">//不要再做下去了，已经是终点了</span></span><br><span class="line">    &#125;</span><br><span class="line">    f[x]=<span class="number">0</span>;<span class="comment">//先试0的情况</span></span><br><span class="line">    dfs(x+<span class="number">1</span>);<span class="comment">//递归下去</span></span><br><span class="line">    f[x]=<span class="number">1</span>;<span class="comment">//再试1的情况</span></span><br><span class="line">    dfs(x+<span class="number">1</span>);<span class="comment">//递归下去</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我也放一下二进制的代码吧<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(<span class="number">1</span>&lt;&lt;m);i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m;j++)f[j+<span class="number">1</span>]=(i&gt;&gt;j)&amp;<span class="number">1</span>;</span><br><span class="line">    check();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>大家发现我这个$check$竟然没有用$bool$，显然是因为$check$如果判断成功，就直接$exit(0);$</p><p>再给大家看一看$check$函数的实现过程</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    c[x][y]=<span class="number">1</span>-c[x][y];</span><br><span class="line">    c[x<span class="number">-1</span>][y]=<span class="number">1</span>-c[x<span class="number">-1</span>][y];</span><br><span class="line">    c[x+<span class="number">1</span>][y]=<span class="number">1</span>-c[x+<span class="number">1</span>][y];</span><br><span class="line">    c[x][y<span class="number">-1</span>]=<span class="number">1</span>-c[x][y<span class="number">-1</span>];</span><br><span class="line">    c[x][y+<span class="number">1</span>]=<span class="number">1</span>-c[x][y+<span class="number">1</span>];</span><br><span class="line">&#125;<span class="comment">//这里为了方便写了个函数来模拟翻格子</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">check</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(b,<span class="number">0</span>,<span class="keyword">sizeof</span>(b));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            c[i][j]=a[i][j];<span class="comment">//初始化</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">        <span class="keyword">if</span>(f[i])&#123;</span><br><span class="line">            work(<span class="number">1</span>,i);<span class="comment">//模拟出第一行的反转情况</span></span><br><span class="line">            b[<span class="number">1</span>][i]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            <span class="keyword">if</span>(c[i<span class="number">-1</span>][j])b[i][j]=<span class="number">1</span>,work(i,j);<span class="comment">//跟据老师的那句话，去模拟</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">        <span class="keyword">if</span>(c[n][i])<span class="keyword">return</span>;<span class="comment">//如果是1直接结束</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)<span class="built_in">cout</span>&lt;&lt;b[i][j]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;<span class="comment">//输出</span></span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);<span class="comment">//结束全部</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>应该没有什么问题</p><p>我们来看一看完整的代码吧</p><p>$dfs:$<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> s=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f*=<span class="number">-1</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))s=(s&lt;&lt;<span class="number">1</span>)+(s&lt;&lt;<span class="number">3</span>)+(ch^<span class="number">48</span>),ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> s*f;</span><br><span class="line">&#125;<span class="comment">//快读</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">25</span>][<span class="number">25</span>],f[<span class="number">25</span>],n,m,b[<span class="number">25</span>][<span class="number">25</span>],c[<span class="number">25</span>][<span class="number">25</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    c[x][y]=<span class="number">1</span>-c[x][y];</span><br><span class="line">    c[x<span class="number">-1</span>][y]=<span class="number">1</span>-c[x<span class="number">-1</span>][y];</span><br><span class="line">    c[x+<span class="number">1</span>][y]=<span class="number">1</span>-c[x+<span class="number">1</span>][y];</span><br><span class="line">    c[x][y<span class="number">-1</span>]=<span class="number">1</span>-c[x][y<span class="number">-1</span>];</span><br><span class="line">    c[x][y+<span class="number">1</span>]=<span class="number">1</span>-c[x][y+<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">check</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(b,<span class="number">0</span>,<span class="keyword">sizeof</span>(b));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            c[i][j]=a[i][j];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">        <span class="keyword">if</span>(f[i])&#123;</span><br><span class="line">            work(<span class="number">1</span>,i);</span><br><span class="line">            b[<span class="number">1</span>][i]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            <span class="keyword">if</span>(c[i<span class="number">-1</span>][j])b[i][j]=<span class="number">1</span>,work(i,j);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">        <span class="keyword">if</span>(c[n][i])<span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)<span class="built_in">cout</span>&lt;&lt;b[i][j]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x==m+<span class="number">1</span>)&#123;</span><br><span class="line">        check();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    f[x]=<span class="number">0</span>;</span><br><span class="line">    dfs(x+<span class="number">1</span>);</span><br><span class="line">    f[x]=<span class="number">1</span>;</span><br><span class="line">    dfs(x+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    n=read(),m=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            a[i][j]=read();<span class="comment">//读入</span></span><br><span class="line">    dfs(<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"IMPOSSIBLE"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>二进制：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> s=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f*=<span class="number">-1</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))s=(s&lt;&lt;<span class="number">1</span>)+(s&lt;&lt;<span class="number">3</span>)+(ch^<span class="number">48</span>),ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> s*f;</span><br><span class="line">&#125;<span class="comment">//快读</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">25</span>][<span class="number">25</span>],f[<span class="number">25</span>],n,m,b[<span class="number">25</span>][<span class="number">25</span>],c[<span class="number">25</span>][<span class="number">25</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    c[x][y]=<span class="number">1</span>-c[x][y];</span><br><span class="line">    c[x<span class="number">-1</span>][y]=<span class="number">1</span>-c[x<span class="number">-1</span>][y];</span><br><span class="line">    c[x+<span class="number">1</span>][y]=<span class="number">1</span>-c[x+<span class="number">1</span>][y];</span><br><span class="line">    c[x][y<span class="number">-1</span>]=<span class="number">1</span>-c[x][y<span class="number">-1</span>];</span><br><span class="line">    c[x][y+<span class="number">1</span>]=<span class="number">1</span>-c[x][y+<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">check</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(b,<span class="number">0</span>,<span class="keyword">sizeof</span>(b));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            c[i][j]=a[i][j];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">        <span class="keyword">if</span>(f[i])&#123;</span><br><span class="line">            work(<span class="number">1</span>,i);</span><br><span class="line">            b[<span class="number">1</span>][i]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            <span class="keyword">if</span>(c[i<span class="number">-1</span>][j])b[i][j]=<span class="number">1</span>,work(i,j);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">        <span class="keyword">if</span>(c[n][i])<span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)<span class="built_in">cout</span>&lt;&lt;b[i][j]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    n=read(),m=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            a[i][j]=read();<span class="comment">//读入</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(<span class="number">1</span>&lt;&lt;m);i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m;j++)f[j+<span class="number">1</span>]=(i&gt;&gt;j)&amp;<span class="number">1</span>;</span><br><span class="line">        check();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(ans==INT_MAX)<span class="built_in">puts</span>(<span class="string">"IMPOSSIBLE"</span>);</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)<span class="built_in">cout</span>&lt;&lt;d[i][j]&lt;&lt;<span class="string">' '</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>衷心感谢 @龙·海流 大佬帮我指出了一个致命的错误</p><p>这是我<a href="https://www.luogu.org/paste/05qcgwu7" target="_blank" rel="noopener">原来的代码</a></p><p><strong>注意题目中说的是翻转次数少的优先，如果一样，再按照字典序排列。</strong>我自己不认真读题，还去怪数据错误，还特判了数据。</p><p>衷心感谢省中集训的那位老师<del>让我AC了一道蓝题</del>。。</p><p>如果我的这篇题解对你有所帮助请点个赞，谢谢。。</p><p>有任何问题，请评论或私信我这个$6$年级的蒟蒻，谢谢。</p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题库 </category>
          
          <category> usaco </category>
          
          <category> 省中集训 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搜索 </tag>
            
            <tag> 状压 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>题解 P1278 【单词游戏】</title>
      <link href="/2020/03/02/%E9%A2%98%E8%A7%A3-P1278-%E3%80%90%E5%8D%95%E8%AF%8D%E6%B8%B8%E6%88%8F%E3%80%91/"/>
      <url>/2020/03/02/%E9%A2%98%E8%A7%A3-P1278-%E3%80%90%E5%8D%95%E8%AF%8D%E6%B8%B8%E6%88%8F%E3%80%91/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1278" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p1278" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p><a id="more"></a><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>首先，看到这道题目，我首先想到的是暴搜，通过$vector$来搞，代码也是很短的。</p><p>这里用了一个类似于分治的思想</p><p>把一个大问题转化为小问题</p><p>先枚举第一个单词，之后把能拼接在它后面的单词都一个一个的去试，哪个最优选哪个</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T&amp;x)</span></span>&#123;</span><br><span class="line">    T f=<span class="number">1</span>;x=<span class="number">0</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(ch);ch=getchar())<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(ch);ch=getchar())x=(x&lt;&lt;<span class="number">1</span>)+(x&lt;&lt;<span class="number">3</span>)+(ch^<span class="number">48</span>);</span><br><span class="line">    x*=f;</span><br><span class="line">&#125;<span class="comment">//快读，常数优化</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">'-'</span>);</span><br><span class="line">        write(x*<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;<span class="comment">//快写，常数优化</span></span><br><span class="line"><span class="built_in">string</span> st[<span class="number">18</span>];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;v[<span class="number">210</span>];<span class="comment">//动态数组</span></span><br><span class="line"><span class="keyword">int</span> f[<span class="number">18</span>];<span class="comment">//标记数组</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> i:v[st[x][st[x].size()<span class="number">-1</span>]])<span class="comment">//v数组是存第1个字母的一个容器</span></span><br><span class="line">        <span class="keyword">if</span>(!f[i])&#123;</span><br><span class="line">            f[i]=<span class="number">1</span>;<span class="comment">//标记这个字符串已经用过了</span></span><br><span class="line">            ans=max(ans,dfs(i));<span class="comment">//打擂</span></span><br><span class="line">            f[i]=<span class="number">0</span>;<span class="comment">//回溯</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> ans+st[x].size();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>,n;</span><br><span class="line">    read(n);<span class="comment">//读入</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">cin</span>&gt;&gt;st[i],v[st[i][<span class="number">0</span>]].push_back(i);<span class="comment">//读入，放入vector容器</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        f[i]=<span class="number">1</span>;<span class="comment">//表记</span></span><br><span class="line">        ans=max(ans,dfs(i));<span class="comment">//打擂法找到最优解</span></span><br><span class="line">        f[i]=<span class="number">0</span>;<span class="comment">//回溯</span></span><br><span class="line">    &#125;</span><br><span class="line">    write(ans);<span class="comment">//输出</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.luogu.org/record/27279213" target="_blank" rel="noopener">然后</a>，你会发现你只得了70分，开$O(2)$试试？<a href="https://www.luogu.org/record/27279276" target="_blank" rel="noopener">TLE</a>again!</p><p>想一想更优秀的算法，加记忆化？是的！</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="储存状态"><a href="#储存状态" class="headerlink" title="储存状态"></a>储存状态</h3><p>如何存状态</p><p>我们发现每一个字符串的状态都要么是0，要么是1，所以我们可以用二进制的思想去压缩状态。</p><script type="math/tex; mode=display">1≤N≤16</script><script type="math/tex; mode=display">2^{n(16)}=65536</script><p>开数组很充裕，浪费也不要紧。</p><h3 id="判断状态"><a href="#判断状态" class="headerlink" title="判断状态"></a>判断状态</h3><p>如何去判断第$i$个单词有没有用过</p><p>从右往左这个数二进制的第$i$位是$1$，就代表这个单词用过，反之$0$就代表这个单词没用过。</p><p>但给你这么一个数，你该这么去判断呢？</p><p>用位运算！</p><p>如果第$i$为是$1$，那么$x&gt;&gt;(i-1)$后$\mod2$就是$1$</p><p>如果第$i$为是$0$，那么$x&gt;&gt;(i-1)$后$\mod2$就是$0$</p><p>那么判断这个单词是否用过，我们就可以这么写<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!((y&gt;&gt;(i<span class="number">-1</span>)&amp;<span class="number">1</span>))<span class="comment">//按位与，只有两个数这一位都是1才为1，所以只有当最后一位是1，这个数才会是1，否则是0</span></span><br></pre></td></tr></table></figure></p><h3 id="标记状态"><a href="#标记状态" class="headerlink" title="标记状态"></a>标记状态</h3><p>如何将这一位变成$1$</p><p>将这一位变成$1$，我们可以用位运算中的按位或——两位都是$0$，这一位的得数才为$0$</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">y|(<span class="number">1</span>&lt;&lt;(i<span class="number">-1</span>))</span><br></pre></td></tr></table></figure><p>这应该是很显然的</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>现在就可以看总的代码了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T&amp;x)</span></span>&#123;</span><br><span class="line">    T f=<span class="number">1</span>;x=<span class="number">0</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(ch);ch=getchar())<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(ch);ch=getchar())x=(x&lt;&lt;<span class="number">1</span>)+(x&lt;&lt;<span class="number">3</span>)+(ch^<span class="number">48</span>);</span><br><span class="line">    x*=f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">'-'</span>);</span><br><span class="line">        write(x*<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">string</span> st[<span class="number">18</span>];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;v[<span class="number">210</span>];</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">17</span>][<span class="number">1</span>&lt;&lt;<span class="number">17</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(f[x][y])<span class="keyword">return</span> f[x][y];</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> i:v[st[x][st[x].size()<span class="number">-1</span>]])</span><br><span class="line">        <span class="keyword">if</span>(!((y&gt;&gt;(i<span class="number">-1</span>))&amp;<span class="number">1</span>))ans=max(ans,dfs(i,y|(<span class="number">1</span>&lt;&lt;(i<span class="number">-1</span>))));</span><br><span class="line">    <span class="keyword">return</span> f[x][y]=ans+st[x].size();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>,n;</span><br><span class="line">    read(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">cin</span>&gt;&gt;st[i],v[st[i][<span class="number">0</span>]].push_back(i);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)ans=max(ans,dfs(i,(<span class="number">1</span>&lt;&lt;(i<span class="number">-1</span>))));</span><br><span class="line">    write(ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>刚开始我认为这应该没有多少重复运算，所以我写了个暴搜，但是，我写了记忆化之后惊奇地发现，暴搜总用时$4.00s$,也就是$4000ms$，而记忆化搜索总用时$73ms$，快了不只一点。但是空间确实消耗很大。</p><p>编程中有很多算法，用空间换时间，记忆化搜索就是这么一个代表，我们要学习这种思想，想出更巧妙的办法！</p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搜索 </tag>
            
            <tag> 记忆化 </tag>
            
            <tag> 状压 </tag>
            
            <tag> STL-vector </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>题解 P6155 【修改】</title>
      <link href="/2020/03/02/%E9%A2%98%E8%A7%A3-P6155-%E3%80%90%E4%BF%AE%E6%94%B9%E3%80%91/"/>
      <url>/2020/03/02/%E9%A2%98%E8%A7%A3-P6155-%E3%80%90%E4%BF%AE%E6%94%B9%E3%80%91/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P6155" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p6155" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p><a id="more"></a><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>其实我感觉这道题比第 $2$ 道题还略微的简单了一些。</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><h3 id="性质"><a href="#性质" class="headerlink" title="性质"></a>性质</h3><p>这道题，我们显而易见地可以得出一个结论，<strong>最小化花费的情况下，改变的数，一定要尽量少。</strong></p><p>所以我们要先把数组排一遍序。</p><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><p>这道题，我用了一个类似并查集的方法。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(f[x]==<span class="number">0</span>)<span class="keyword">return</span> f[x]=x+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> f[x]=find(f[x]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的 $f$ 数组就是表示以 $x$ 数组往后的最近的<strong>可能</strong>空位</p><h2 id="总代码"><a href="#总代码" class="headerlink" title="总代码"></a>总代码</h2><p>会了以上 $2$ 个东西，我们就可以做这道题了。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">1e6</span>;</span><br><span class="line"><span class="keyword">int</span> a[MAXN];</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> b[MAXN],ans,n;</span><br><span class="line"><span class="built_in">unordered_map</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;f;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(f[x]==<span class="number">0</span>)<span class="keyword">return</span> f[x]=x+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> f[x]=find(f[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;v;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a&gt;b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    read(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)read(a[i]);<span class="comment">//读入a数组</span></span><br><span class="line">    sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp);<span class="comment">//排序</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x=find(a[i])-a[i]<span class="number">-1</span>;<span class="comment">//当然是要减1的</span></span><br><span class="line">        <span class="keyword">if</span>(x)v.push_back(x);<span class="comment">//插入</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)read(b[i]);</span><br><span class="line">    sort(b+<span class="number">1</span>,b+n+<span class="number">1</span>);<span class="comment">//排序b数组，显然</span></span><br><span class="line">    sort(v.begin(),v.end());</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=v.size()<span class="number">-1</span>,j=<span class="number">1</span>;i&gt;=<span class="number">0</span>;i--,j++)ans+=v[i]*b[j];<span class="comment">//算和</span></span><br><span class="line">    write(ans);<span class="comment">//输出</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>这道题，我程序运行的时间想对还是比较慢的，但是这种是可以过的。</p><p>欢迎在评论区指出错误，也欢迎优化此算法。</p><p>感谢 @北辰yama 和 @天下我有 的提醒，本算法已经从原来的 $9.42s$ 变成了 $5.70s$，这个优化的效果还是很显著的。</p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 排序 </tag>
            
            <tag> 贪心 </tag>
            
            <tag> STL-vector </tag>
            
            <tag> 并查集 </tag>
            
            <tag> STL-unordered_map </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020-2-15模拟赛题解</title>
      <link href="/2020/02/23/2020-2-15%E6%A8%A1%E6%8B%9F%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
      <url>/2020/02/23/2020-2-15%E6%A8%A1%E6%8B%9F%E8%B5%9B%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p>这篇总的题解蒟蒻写了 $3h s$！作为回报，你们是不是应该去<a href="https://zhaohaikun.blog.luogu.org/" target="_blank" rel="noopener">$ZHK$ 的洛谷博客</a>里给 $ZHK$ 的所有题解点赞呢！</p><a id="more"></a><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这场比赛我发挥欠佳，各种小失误不断，也需要我自己去反思吧，以后打模拟赛也要有选择性地去打，毕竟<strong>一天 $3$ 场比赛</strong>肯定会有影响。</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="1-子数整数"><a href="#1-子数整数" class="headerlink" title="1. 子数整数"></a>1. 子数整数</h2><h3 id="错点"><a href="#错点" class="headerlink" title="错点"></a>错点</h3><p>考试的时候蒟蒻把 <code>No</code> 打成了 <code>NO</code>。</p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>这道题实际上就是个小模拟，您只要会 $for$ 循环就可以轻松过掉此题。</p><p>答案是直接统计一下就好了。</p><p>我们可以直接从 <code>10000</code> 到 <code>30000</code> 循环，算出 <code>s1</code> 、 <code>s2</code> 、 <code>s3</code>。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">10000</span>;i&lt;=<span class="number">30000</span>;i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> g=i%<span class="number">10</span>,s=i/<span class="number">10</span>%<span class="number">10</span>,b=i/<span class="number">100</span>%<span class="number">10</span>,q=i/<span class="number">1000</span>%<span class="number">10</span>,w=i/<span class="number">10000</span>%<span class="number">10</span>,s1=<span class="number">100</span>*w+<span class="number">10</span>*q+b,s2=<span class="number">100</span>*q+<span class="number">10</span>*b+s,s3=<span class="number">100</span>*b+s*<span class="number">10</span>+g;<span class="comment">//s1,s2,s3的计算</span></span><br><span class="line">    <span class="keyword">if</span>(s1%k==<span class="number">0</span>&amp;&amp;s2%k==<span class="number">0</span>&amp;&amp;s3%k==<span class="number">0</span>)writen(i),f=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总代码"><a href="#总代码" class="headerlink" title="总代码"></a>总代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">writen</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    write(x);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> k,s1,s2,s3,g,s,b,q,w;</span><br><span class="line"><span class="keyword">bool</span> f;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    read(k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">10000</span>;i&lt;=<span class="number">30000</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> g=i%<span class="number">10</span>,s=i/<span class="number">10</span>%<span class="number">10</span>,b=i/<span class="number">100</span>%<span class="number">10</span>,q=i/<span class="number">1000</span>%<span class="number">10</span>,w=i/<span class="number">10000</span>%<span class="number">10</span>,s1=<span class="number">100</span>*w+<span class="number">10</span>*q+b,s2=<span class="number">100</span>*q+<span class="number">10</span>*b+s,s3=<span class="number">100</span>*b+s*<span class="number">10</span>+g;<span class="comment">//s1,s2,s3的计算</span></span><br><span class="line">        <span class="keyword">if</span>(s1%k==<span class="number">0</span>&amp;&amp;s2%k==<span class="number">0</span>&amp;&amp;s3%k==<span class="number">0</span>)writen(i),f=<span class="number">1</span>;</span><br><span class="line">    &#125;<span class="keyword">if</span>(f==<span class="number">0</span>)<span class="built_in">puts</span>(<span class="string">"No"</span>);<span class="comment">//考试时这里直接挂掉，打成了NO</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-安全逃离"><a href="#2-安全逃离" class="headerlink" title="2. 安全逃离"></a>2. 安全逃离</h2><h3 id="错点-1"><a href="#错点-1" class="headerlink" title="错点"></a>错点</h3><p>蒟蒻向老师报告题目有问题后没有认真看题，结果就死了。</p><h3 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h3><p>做到这道题的时候，我们考到数据范围很小，考虑高复杂度的做法。</p><p>我的做法是最暴力的做法，复杂度大概是 $O(cr^2 \times + rc^2 \times n)$，面对这么小的这么小的数据，这个做法显然能过。</p><p>我们先写一个 $check$ 函数，判断此时的矩阵是否安全。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=r;++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=c;j++)</span><br><span class="line">            <span class="keyword">if</span>(a[i][j])&#123;<span class="comment">//此点有牛</span></span><br><span class="line">                <span class="keyword">int</span> s=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">1</span>;l&lt;=i;l++)</span><br><span class="line">                    <span class="keyword">if</span>(a[l][j])&#123;</span><br><span class="line">                        s++;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> l=j;l&lt;=n;l++)</span><br><span class="line">                    <span class="keyword">if</span>(a[i][l])&#123;</span><br><span class="line">                        s++;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                <span class="keyword">if</span>(s==<span class="number">2</span>)<span class="keyword">return</span> <span class="literal">false</span>;<span class="comment">//如果有牛上面和右面都被堵死了，这个矩阵显然是不安全的</span></span><br><span class="line">            &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当然还有更快速地写法啦</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">save</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> l=x[i]<span class="number">-1</span>;l&gt;=<span class="number">1</span>;l--)</span><br><span class="line">            <span class="keyword">if</span>(a[l][y[i]])&#123;</span><br><span class="line">                flag++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> l=y[i]+<span class="number">1</span>;l&lt;=n;l++)</span><br><span class="line">            <span class="keyword">if</span>(a[x[i]][l])&#123;</span><br><span class="line">                flag++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag==<span class="number">2</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们再写一个函数去枚举移掉哪头牛</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> f=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line">        a[x[i]][y[i]]--;</span><br><span class="line">        <span class="keyword">if</span>(save())&#123;<span class="comment">//如果安全</span></span><br><span class="line">            f=<span class="number">0</span>;</span><br><span class="line">            write(i);<span class="comment">//输出</span></span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        a[x[i]][y[i]]++;</span><br><span class="line">    &#125;<span class="keyword">if</span>(f)<span class="built_in">puts</span>(<span class="string">"-1"</span>);<span class="comment">//无解</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总代码-1"><a href="#总代码-1" class="headerlink" title="总代码"></a>总代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">50</span>+<span class="number">10</span>,MAXK=<span class="number">100</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[MAXN][MAXN],n,m,k,x[MAXK],y[MAXK];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">save</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> l=x[i]<span class="number">-1</span>;l&gt;=<span class="number">1</span>;l--)</span><br><span class="line">            <span class="keyword">if</span>(a[l][y[i]])&#123;</span><br><span class="line">                flag++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> l=y[i]+<span class="number">1</span>;l&lt;=n;l++)</span><br><span class="line">            <span class="keyword">if</span>(a[x[i]][l])&#123;</span><br><span class="line">                flag++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag==<span class="number">2</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> f=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line">        a[x[i]][y[i]]--;<span class="comment">//移除</span></span><br><span class="line">        <span class="keyword">if</span>(save())&#123;</span><br><span class="line">            f=<span class="number">0</span>;</span><br><span class="line">            write(i);</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        a[x[i]][y[i]]++;<span class="comment">//注意回溯</span></span><br><span class="line">    &#125;<span class="keyword">if</span>(f)<span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    read(n);read(m);read(k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line">        read(x[i]);read(y[i]);</span><br><span class="line">        a[x[i]][y[i]]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(save())<span class="built_in">puts</span>(<span class="string">"0"</span>);</span><br><span class="line">    <span class="keyword">else</span> work();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-阶乘问题"><a href="#3-阶乘问题" class="headerlink" title="3. 阶乘问题"></a>3. 阶乘问题</h2><h3 id="错点-2"><a href="#错点-2" class="headerlink" title="错点"></a>错点</h3><p>蒟蒻竟然把 $/ 10$ 打成了 $\% 10$。</p><h3 id="分析-2"><a href="#分析-2" class="headerlink" title="分析"></a>分析</h3><p><del>做法显然</del></p><p>由于数字极大，我们应该先对 $1$~$n$ 的这些数字把末尾的 $0$ 全部删掉</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(x%<span class="number">10</span>==<span class="number">0</span>)x/=<span class="number">10</span>;</span><br></pre></td></tr></table></figure><p>再把乘好后的 $s$ 末尾的 $0$ 也都去掉。</p><p>关于为什么末尾会有 $0$，我来举个例子 $2 \times 5=10$ ，所以我们还要再筛一遍 $0$。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(s%<span class="number">10</span>==<span class="number">0</span>)s/=<span class="number">10</span>;</span><br></pre></td></tr></table></figure><h3 id="总代码-2"><a href="#总代码-2" class="headerlink" title="总代码"></a>总代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,s=<span class="number">1</span>;</span><br><span class="line">    read(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x=i;</span><br><span class="line">        <span class="keyword">while</span>(x%<span class="number">10</span>==<span class="number">0</span>)x/=<span class="number">10</span>;</span><br><span class="line">        s*=x;</span><br><span class="line">        <span class="keyword">while</span>(s%<span class="number">10</span>==<span class="number">0</span>)s/=<span class="number">10</span>;</span><br><span class="line">    &#125;write(s);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-拱猪计分"><a href="#4-拱猪计分" class="headerlink" title="4. 拱猪计分"></a>4. 拱猪计分</h2><h3 id="分析-3"><a href="#分析-3" class="headerlink" title="分析"></a>分析</h3><p>典型的大模拟。</p><p>明白了什么叫 $1h$ 读题，$0.2h$ 写代码</p><p>我们从读入开始</p><h4 id="读入"><a href="#读入" class="headerlink" title="读入"></a>读入</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;i++)&#123;</span><br><span class="line">    read(size[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=size[i];j++)&#123;</span><br><span class="line">        <span class="keyword">char</span> k;<span class="keyword">int</span> p;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;k&gt;&gt;p;</span><br><span class="line">        <span class="keyword">if</span>(k==<span class="string">'H'</span>)card[i][p]=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(k==<span class="string">'S'</span>)card[i][<span class="number">14</span>]=<span class="literal">true</span>;</span><br><span class="line">               <span class="keyword">else</span> <span class="keyword">if</span>(k==<span class="string">'D'</span>)card[i][<span class="number">15</span>]=<span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(k==<span class="string">'C'</span>)card[i][<span class="number">16</span>]=<span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们用 $card_{i,j}$ 记录第 $i$ 个人，有没第 $j$ 张得分牌。</p><h4 id="计分"><a href="#计分" class="headerlink" title="计分"></a>计分</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;i++)&#123;</span><br><span class="line">    <span class="keyword">bool</span> flag=<span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">13</span>;j++)</span><br><span class="line">        <span class="keyword">if</span>(card[i][j]==<span class="literal">false</span>)&#123;</span><br><span class="line">            flag=<span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">if</span>(flag)&#123;<span class="comment">//有没有红心牌</span></span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">200</span>;<span class="comment">//所有红心牌以+200分计算。</span></span><br><span class="line">        <span class="keyword">if</span>(card[i][<span class="number">14</span>]&amp;&amp;card[i][<span class="number">15</span>])ans=<span class="number">500</span>;<span class="comment">//若S12、D11皆在吃下所有红心牌之一家，则此玩家得+500分。</span></span><br><span class="line">        <span class="keyword">else</span> ans=ans+card[i][<span class="number">14</span>]*fraction[<span class="number">14</span>]+card[i][<span class="number">15</span>]*fraction[<span class="number">15</span>];</span><br><span class="line">        <span class="keyword">if</span>(card[i][<span class="number">16</span>])ans*=<span class="number">2</span>;<span class="comment">//若除了C10还有其它计分牌，则将其它计分牌所得分数加倍计算。</span></span><br><span class="line">        work(ans);<span class="comment">//输出</span></span><br><span class="line">        <span class="built_in">putchar</span>(<span class="number">32</span>);<span class="comment">//输出</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">bool</span> flg=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">15</span>;j++)</span><br><span class="line">            <span class="keyword">if</span>(card[i][j]==<span class="literal">true</span>)&#123;</span><br><span class="line">                flg=<span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">if</span>(flg)&#123;</span><br><span class="line">            <span class="keyword">if</span>(card[i][<span class="number">16</span>])work(<span class="number">50</span>);<span class="comment">//若持有C10的玩家只有该张牌而没有任何其它牌则得+50分</span></span><br><span class="line">            <span class="keyword">else</span> work(<span class="number">0</span>);<span class="comment">//若未持有这16张牌之任一张则以得零分计算。</span></span><br><span class="line">            <span class="built_in">putchar</span>(<span class="number">32</span>);<span class="comment">//输出</span></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">15</span>;j++)</span><br><span class="line">                <span class="keyword">if</span>(card[i][j])ans+=fraction[j];</span><br><span class="line">            <span class="keyword">if</span>(card[i][<span class="number">16</span>])ans*=<span class="number">2</span>;</span><br><span class="line">            work(ans);<span class="comment">//输出</span></span><br><span class="line">            <span class="built_in">putchar</span>(<span class="number">32</span>);<span class="comment">//输出</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="built_in">puts</span>(<span class="string">""</span>);</span><br></pre></td></tr></table></figure><h3 id="总代码-3"><a href="#总代码-3" class="headerlink" title="总代码"></a>总代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">cout</span>&lt;&lt;x;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(x&gt;<span class="number">0</span>)<span class="built_in">cout</span>&lt;&lt;<span class="string">'+'</span>&lt;&lt;x;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> fraction[<span class="number">17</span>]=&#123;<span class="number">0</span>,<span class="number">-50</span>,<span class="number">-2</span>,<span class="number">-3</span>,<span class="number">-4</span>,<span class="number">-5</span>,<span class="number">-6</span>,<span class="number">-7</span>,<span class="number">-8</span>,<span class="number">-9</span>,<span class="number">-10</span>,<span class="number">-20</span>,<span class="number">-30</span>,<span class="number">-40</span>,<span class="number">-100</span>,+<span class="number">100</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> size[<span class="number">5</span>];</span><br><span class="line"><span class="keyword">bool</span> card[<span class="number">5</span>][<span class="number">17</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="built_in">memset</span>(card,<span class="literal">false</span>,<span class="keyword">sizeof</span>(card));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;i++)&#123;</span><br><span class="line">            read(size[i]);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=size[i];j++)&#123;</span><br><span class="line">                <span class="keyword">char</span> k;<span class="keyword">int</span> p;</span><br><span class="line">                <span class="built_in">cin</span>&gt;&gt;k&gt;&gt;p;</span><br><span class="line">                <span class="keyword">if</span>(k==<span class="string">'H'</span>)card[i][p]=<span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(k==<span class="string">'S'</span>)card[i][<span class="number">14</span>]=<span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(k==<span class="string">'D'</span>)card[i][<span class="number">15</span>]=<span class="literal">true</span>;</span><br><span class="line">                        <span class="keyword">else</span> <span class="keyword">if</span>(k==<span class="string">'C'</span>)card[i][<span class="number">16</span>]=<span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(size[<span class="number">1</span>]+size[<span class="number">2</span>]+size[<span class="number">3</span>]+size[<span class="number">4</span>]==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">bool</span> flag=<span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">13</span>;j++)</span><br><span class="line">                <span class="keyword">if</span>(card[i][j]==<span class="literal">false</span>)&#123;</span><br><span class="line">                    flag=<span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">                <span class="keyword">int</span> ans=<span class="number">200</span>;</span><br><span class="line">                <span class="keyword">if</span>(card[i][<span class="number">14</span>]&amp;&amp;card[i][<span class="number">15</span>])ans=<span class="number">500</span>;</span><br><span class="line">                <span class="keyword">else</span> ans=ans+card[i][<span class="number">14</span>]*fraction[<span class="number">14</span>]+card[i][<span class="number">15</span>]*fraction[<span class="number">15</span>];</span><br><span class="line">                <span class="keyword">if</span>(card[i][<span class="number">16</span>])ans*=<span class="number">2</span>;</span><br><span class="line">                work(ans);</span><br><span class="line">                <span class="built_in">putchar</span>(<span class="number">32</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">bool</span> flg=<span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">15</span>;j++)</span><br><span class="line">                    <span class="keyword">if</span>(card[i][j]==<span class="literal">true</span>)&#123;</span><br><span class="line">                        flg=<span class="literal">false</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                <span class="keyword">if</span>(flg)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(card[i][<span class="number">16</span>])work(<span class="number">50</span>);</span><br><span class="line">                    <span class="keyword">else</span> work(<span class="number">0</span>);</span><br><span class="line">                    <span class="built_in">putchar</span>(<span class="number">32</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">15</span>;j++)</span><br><span class="line">                        <span class="keyword">if</span>(card[i][j])ans+=fraction[j];</span><br><span class="line">                    <span class="keyword">if</span>(card[i][<span class="number">16</span>])ans*=<span class="number">2</span>;</span><br><span class="line">                    work(ans);</span><br><span class="line">                    <span class="built_in">putchar</span>(<span class="number">32</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-变色龙"><a href="#5-变色龙" class="headerlink" title="5. 变色龙"></a>5. 变色龙</h2><h3 id="错点-3"><a href="#错点-3" class="headerlink" title="错点"></a>错点</h3><p>$bfs$ 的 $priority$_$queue$ 优化写假了。</p><h3 id="分析-4"><a href="#分析-4" class="headerlink" title="分析"></a>分析</h3><p>最短路问题。</p><p>为什么能使用 $dij$ 跑最短路？明显会 $T$ 啊！</p><p>点数：$2000 \times 2000=400,0000$</p><p>边数：小学奥数之等差数列</p><p>$\begin{matrix}\underbrace{0+4+\cdots+7996}\\2000项\end{matrix}=(7996+0)  \times 2000 \div 2=7996 \times 1000=799,6000$</p><p>我们知道 $dij$ 的复杂度是 $O(n \log m)$</p><p>简单计算一下</p><p>$\log m=\log 7996000 \approx 26$，$26 \times 4000000=1,0400,0000 &gt; 1,0000,0000‬$</p><p>所以显然是会 $T$ 掉的<del>（除非玄学卡常，比如：等式展开之类的）</del></p><p>而 $bfs$ 的期望复杂度是 $O(n+m)$ 的。</p><p>$bfs$ 大概就是这种写法</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">q.push((node)&#123;xx,yy,<span class="number">0</span>&#125;);</span><br><span class="line">    <span class="keyword">while</span>(q.size())&#123;</span><br><span class="line">    node f=q.top();</span><br><span class="line">    q.pop();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x=f.x+dx[i],y=f.y+dy[i];</span><br><span class="line">        <span class="keyword">if</span>(x&gt;=<span class="number">1</span>&amp;&amp;x&lt;=n&amp;&amp;y&gt;=<span class="number">1</span>&amp;&amp;y&lt;=m)&#123;</span><br><span class="line">            <span class="keyword">int</span> as=ans[f.x][f.y];</span><br><span class="line">            <span class="keyword">if</span>(a[x][y]!=a[f.x][f.y])as++;</span><br><span class="line">            <span class="keyword">if</span>(as&lt;ans[x][y])ans[x][y]=as,q.push((node)&#123;x,y&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总代码-4"><a href="#总代码-4" class="headerlink" title="总代码"></a>总代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">2000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,xx,yy,a[MAXN][MAXN],ans[MAXN][MAXN];</span><br><span class="line"><span class="keyword">int</span> dx[<span class="number">4</span>]=&#123;<span class="number">-1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dy[<span class="number">4</span>]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">1</span>&#125;;</span><br><span class="line"><span class="built_in">queue</span>&lt;node&gt;q;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    read(n);read(m);read(xx);read(yy);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">            read(a[i][j]);</span><br><span class="line">    q.push((node)&#123;xx,yy,<span class="number">0</span>&#125;);</span><br><span class="line">    <span class="keyword">while</span>(q.size())&#123;</span><br><span class="line">        node f=q.top();</span><br><span class="line">        q.pop();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> x=f.x+dx[i],y=f.y+dy[i];</span><br><span class="line">            <span class="keyword">if</span>(x&gt;=<span class="number">1</span>&amp;&amp;x&lt;=n&amp;&amp;y&gt;=<span class="number">1</span>&amp;&amp;y&lt;=m)&#123;</span><br><span class="line">                <span class="keyword">int</span> as=ans[f.x][f.y];</span><br><span class="line">                <span class="keyword">if</span>(a[x][y]!=a[f.x][f.y])as++;</span><br><span class="line">                <span class="keyword">if</span>(as&lt;ans[x][y])ans[x][y]=as,q.push((node)&#123;x,y&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;ans[i][j]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-和谐分组"><a href="#6-和谐分组" class="headerlink" title="6. 和谐分组"></a>6. 和谐分组</h2><h3 id="讲解二分"><a href="#讲解二分" class="headerlink" title="讲解二分"></a>讲解二分</h3><p>终于是正常一点的题目了，并且是我最喜欢的算法（蒟蒻最喜欢的算法是并查集、二分、dp、LCA）</p><p>二分是确定一个答案然后对其分析，而答案常常有这样一种情况：</p><p><img src="https://i.loli.net/2020/02/23/1ogLUr7OITxSV8R.png" alt="左闭右开"></p><p>​                                 左闭右开</p><p><img src="https://i.loli.net/2020/02/23/y1FNhUaTKIAQBCo.png" alt="右闭左开"></p><p>​                                    右闭左开</p><p>题目通常会让我们找符合条件的最大值或最小值。</p><p>以这道题为例，就是去在可能的谐度度中找一个最小的。</p><p>比答案大的都可以，不答案小的都不可以。</p><p>这个我们叫右闭左开。</p><p>而比答案小的都可以，不答案大的都不可以。</p><p>这个我们叫左闭右开。</p><p>二分顾名思义，就是二分。</p><p>左闭右开：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> l=<span class="number">0</span>,r=INT_MAX/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">while</span>(l+<span class="number">1</span>&lt;r)&#123;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(check(mid))l=mid;<span class="comment">//这里不同</span></span><br><span class="line">    <span class="keyword">else</span> r=mid;<span class="comment">//这里不同</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>右闭左开：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> l=<span class="number">0</span>,r=INT_MAX/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">while</span>(l+<span class="number">1</span>&lt;r)&#123;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(check(mid))r=mid;<span class="comment">//这里不同</span></span><br><span class="line">    <span class="keyword">else</span> l=mid;<span class="comment">//这里不同</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="分析-5"><a href="#分析-5" class="headerlink" title="分析"></a>分析</h3><p>现在我们已经会了二分，我们可以愉快地做这道题了。</p><p>我们可以开始写 $check$ 函数：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="comment">//check函数顾名思义，就是用来反对我们的答案x是否可行</span></span><br><span class="line">    <span class="keyword">int</span> maxn=a[<span class="number">1</span>],minn=a[<span class="number">1</span>],s=<span class="number">1</span>;<span class="comment">//初始化</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        maxn=max(maxn,a[i]);<span class="comment">//最大</span></span><br><span class="line">        minn=min(minn,a[i]);<span class="comment">//最小</span></span><br><span class="line">        <span class="keyword">if</span>(maxn-minn&gt;x)&#123;</span><br><span class="line">            s++;<span class="comment">//新分一个组</span></span><br><span class="line">            maxn=a[i];<span class="comment">//初始化</span></span><br><span class="line">            minn=a[i];<span class="comment">//初始化</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s&lt;=k;<span class="comment">//如果组数小于等于k，就说明不可行</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总代码-5"><a href="#总代码-5" class="headerlink" title="总代码"></a>总代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n,k,a[MAXN];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> maxn=a[<span class="number">1</span>],minn=a[<span class="number">1</span>],s=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        maxn=max(maxn,a[i]);</span><br><span class="line">        minn=min(minn,a[i]);</span><br><span class="line">        <span class="keyword">if</span>(maxn-minn&gt;x)&#123;</span><br><span class="line">            s++;</span><br><span class="line">            maxn=a[i];</span><br><span class="line">            minn=a[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s&lt;=k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    read(n);read(k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)read(a[i]);</span><br><span class="line">    <span class="keyword">int</span> l=<span class="number">0</span>,r=INT_MAX/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">while</span>(l+<span class="number">1</span>&lt;r)&#123;</span><br><span class="line">        <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(check(mid))r=mid;</span><br><span class="line">        <span class="keyword">else</span> l=mid;</span><br><span class="line">    &#125;write(r);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 模拟赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二分 </tag>
            
            <tag> 模拟 </tag>
            
            <tag> bfs </tag>
            
            <tag> dij </tag>
            
            <tag> 搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>题解 P1748 【H数】</title>
      <link href="/2020/02/21/%E9%A2%98%E8%A7%A3%20P1748%20%E3%80%90H%E6%95%B0%E3%80%91/"/>
      <url>/2020/02/21/%E9%A2%98%E8%A7%A3%20P1748%20%E3%80%90H%E6%95%B0%E3%80%91/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1748" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p1748" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p><a id="more"></a><h1 id="我来讲讲-dp-的做法"><a href="#我来讲讲-dp-的做法" class="headerlink" title="我来讲讲 $dp$ 的做法"></a>我来讲讲 $dp$ 的做法</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>昨天 $PHY$ 大佬问我，这题怎么做？考虑到他没学过 $set$ 、 $priority_queue$ 和 $queue$ 。之后，我就想到了可以用 $dp$ 来解决这道题。</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="设置状态"><a href="#设置状态" class="headerlink" title="设置状态"></a>设置状态</h3><p>很显然，我们可以用 $f[i]$ 表示第$i$个数是多少。</p><h3 id="转移"><a href="#转移" class="headerlink" title="转移"></a>转移</h3><p>第$i$个$H$数是多少，我们显然应该从前面的$i-1$个数去分别$\times2$、$\times3$、$\times5$、$\times7$中取比第$i-1$个$H$数大的最小数。</p><h3 id="边界条件"><a href="#边界条件" class="headerlink" title="边界条件"></a>边界条件</h3><p>$f_1=1$是很显然的</p><p>此外还要注意$f_0=0$</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>我们现在就可以开始写代码了</p><p><strong>注意开$long$ $long$</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> f[<span class="number">10010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(f,<span class="number">127</span>,<span class="keyword">sizeof</span>(f));<span class="comment">//为了找最小，我们最开始就得赋成最大</span></span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    read(n);</span><br><span class="line">    f[<span class="number">0</span>]=<span class="number">0</span>;<span class="comment">//初始化</span></span><br><span class="line">    f[<span class="number">1</span>]=<span class="number">1</span>;<span class="comment">//初始化</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i<span class="number">-1</span>;j&gt;=<span class="number">1</span>;j--)</span><br><span class="line">            <span class="keyword">if</span>(f[j]*<span class="number">2</span>&gt;f[i<span class="number">-1</span>])f[i]=min(f[i],f[j]*<span class="number">2</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(f[j]*<span class="number">3</span>&gt;f[i<span class="number">-1</span>])f[i]=min(f[i],f[j]*<span class="number">3</span>);</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(f[j]*<span class="number">5</span>&gt;f[i<span class="number">-1</span>])f[i]=min(f[i],f[j]*<span class="number">5</span>);</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(f[j]*<span class="number">7</span>&gt;f[i<span class="number">-1</span>])f[i]=min(f[i],f[j]*<span class="number">7</span>);</span><br><span class="line">                        <span class="keyword">else</span> <span class="keyword">break</span>;<span class="comment">//优化</span></span><br><span class="line">    write(f[n]);<span class="comment">//输出</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>这个代码还是很简短的，十分好写，希望大家以后学习也能好好想想一题多解</p><p>最后来求一下赞和评论！</p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>题解 P1052 【过河】</title>
      <link href="/2020/02/21/%E9%A2%98%E8%A7%A3%20P1052%20%E3%80%90%E8%BF%87%E6%B2%B3%E3%80%91/"/>
      <url>/2020/02/21/%E9%A2%98%E8%A7%A3%20P1052%20%E3%80%90%E8%BF%87%E6%B2%B3%E3%80%91/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1052" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p1052" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p><a id="more"></a><p>显然是$dp$，是用$STL$当中的<a href="https://zhaohaikun.blog.luogu.org/solution-p1305" target="_blank" rel="noopener">$map$</a>可以做到<a href="https://www.luogu.org/record/27685820" target="_blank" rel="noopener">30分</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;//万能头文件</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> l,n,s,t;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="keyword">bool</span>&gt;m;<span class="comment">//记有没有石头</span></span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;dp;<span class="comment">//最少踩到石头的个数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;l&gt;&gt;s&gt;&gt;t&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;x;</span><br><span class="line">        m[x]=<span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=l+t<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        dp[i]=INT_MAX/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=s;j&lt;=t&amp;&amp;j&lt;=i;j++)dp[i]=min(dp[i],dp[i-j]);<span class="comment">//倒退</span></span><br><span class="line">        <span class="keyword">if</span>(m[i])dp[i]++;</span><br><span class="line">    &#125;<span class="keyword">int</span> s=dp[l];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=l+<span class="number">1</span>;i&lt;=l+t<span class="number">-1</span>;i++)s=min(s,dp[i]);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;s;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后，我们该想一想如何$AC$这道题</p><p>我们发现石头数量很少，而独木桥却很长</p><p><img src="https://i.loli.net/2019/11/23/MndaCKcbu7ZoUyi.png" alt="360截图18141224304435.png"></p><p>遇到这张图，我们可能还会选择暴力的方法</p><p><img src="https://i.loli.net/2019/11/23/6mNA9akXPqD7pQv.png" alt="360截图170405117195111.png"></p><p>但是遇到这张图，你还会用暴力吗？</p><p>空的地方就是随便走就行了，完全可以不用老老实实的去看，我们可以把路径压缩，更简单地说就是如果后面的一个石头与前面的一个石头距离太远，我们可以把后面一个石头推到前一个石头附近，至于这个量是多少呢，需要自己把握。</p><p>我自己还是觉得稍微保险一点，不要$TLE$就行了，所以我选择把这个数定在$1000$，当然听同学说，他定的比较小也过了，这并没有关系。</p><p>所以，我们可以看代码了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> l,s,t,m,a[<span class="number">110</span>],dp[<span class="number">100010</span>],b[<span class="number">110</span>];</span><br><span class="line"><span class="keyword">bool</span> x[<span class="number">100010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;l;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;s&gt;&gt;t&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)<span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    sort(a+<span class="number">1</span>,a+<span class="number">1</span>+m);</span><br><span class="line">    <span class="keyword">if</span>(s==t)&#123;<span class="comment">//这个应该很简单，我上面没有说</span></span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">            <span class="keyword">if</span>(a[i]%s==<span class="number">0</span>)ans++;<span class="comment">//如果会经过它，答案+1</span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;ans;<span class="comment">//输出</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">        <span class="keyword">if</span>(a[i]-a[i<span class="number">-1</span>]&gt;<span class="number">1000</span>)b[i]=b[i<span class="number">-1</span>]+<span class="number">1000</span>;<span class="comment">//注意啦，如果原来的距离小于1000，你要保持不变</span></span><br><span class="line">        <span class="keyword">else</span> b[i]=a[i]-a[i<span class="number">-1</span>]+b[i<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)x[b[i]]=<span class="literal">true</span>;<span class="comment">//石头</span></span><br><span class="line">    l=b[m];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=l+t<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        dp[i]=INT_MAX/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=s;j&lt;=t&amp;&amp;j&lt;=i;j++)dp[i]=min(dp[i],dp[i-j]);<span class="comment">//转移状态</span></span><br><span class="line">        <span class="keyword">if</span>(x[i])dp[i]++;</span><br><span class="line">    &#125;<span class="keyword">int</span> ans=dp[l];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=l+t<span class="number">-1</span>;i++)ans=min(ans,dp[i]);<span class="comment">//打擂法求最小值</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans;<span class="comment">//输出</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 洛谷题库 </category>
          
          <category> noip提高组 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dp </tag>
            
            <tag> 离散化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>题解 P2070 【刷墙】</title>
      <link href="/2020/02/21/%E9%A2%98%E8%A7%A3%20P2070%20%E3%80%90%E5%88%B7%E5%A2%99%E3%80%91/"/>
      <url>/2020/02/21/%E9%A2%98%E8%A7%A3%20P2070%20%E3%80%90%E5%88%B7%E5%A2%99%E3%80%91/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2070" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p2070" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p><a id="more"></a><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><a href="http://www.zhaohaikun.cn/2020/02/10/ti-jie-p2070-shua-qiang/" target="_blank" rel="noopener">$ZHK$私人博客体验更佳</a></p><p>这道题目，$n&lt;=10^5$，显然在暗示我们使用$n \log n$的做法，我就是用了一个简单的贪心，通过了此题。</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>在这道题中，我们发现，可以把 $Bessie$ 每次走的路看成是对序列的一段区间染色。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> x;<span class="keyword">char</span> y;</span><br><span class="line">    read(x);<span class="built_in">cin</span>&gt;&gt;y;</span><br><span class="line">    a[i].l=position;</span><br><span class="line">    <span class="keyword">if</span>(y==<span class="string">'L'</span>)position-=x;<span class="comment">//Bessie往左走</span></span><br><span class="line">    <span class="keyword">else</span> position+=x;<span class="comment">//Bessie往右走</span></span><br><span class="line">    a[i].r=position;</span><br><span class="line">    <span class="keyword">if</span>(a[i].l&gt;a[i].r)swap(a[i].l,a[i].r);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的 $a$数组是一个结构体——$node$<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l,r;<span class="comment">//每次染色的左端点和右端点</span></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(<span class="keyword">const</span> node&amp;b)<span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> l&lt;b.l;<span class="comment">//按左端点从小到大排序</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;a[MAXN];</span><br></pre></td></tr></table></figure><br>之后，我们就要说真正的思路了，我们对于 $a$ 序列排序后，会有这样一个画面。</p><p><img src="https://i.loli.net/2020/02/10/yELKiHaF1QPTD3m.png" alt=""></p><p>我们定义两个变量——$lft$和$rgt$，记录可能区间的左端点和右端点。</p><p>这里面我们记录的是<strong>有可能和下面相交的区间</strong>，什么意思？比如那张图，我们标一下号</p><p><img src="https://i.loli.net/2020/02/10/ZBfRq9P2JwOVjIy.png" alt=""></p><p>当我么扫描第 $1$ 个区间时，我们发现，之后有可能被覆盖到的区间是 $lft=0,rgt=15$。</p><p>当我们继续扫描，到第 $2$ 个区间时，我们发现，之后可能被覆盖到的区间是 $lft=15,rgt=18$。</p><p>可能有人会问，$5$~$15$ 这段消失，我们还能理解，但是为什么 $0$~$5$ 这段也没了呢，因为第 $2$ 个区间的$l$都大约 $0$ 了，之后的区间肯定就更大于 $0$ 了，我们是按 $l$ 从小到大排序的啊。</p><p>所以，我可以放一下代码了：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">    <span class="keyword">if</span>(a[i].r&gt;lft)&#123;<span class="comment">//如果跟可能被覆盖到的区间有交</span></span><br><span class="line">        a[i].l=max(a[i].l,lft);<span class="comment">//这里是使得之后的代码可以少写一点，因为显然，a[i].l&lt;lft，a[i].l~lft这1段也没有用了</span></span><br><span class="line">        <span class="keyword">if</span>(a[i].r&gt;rgt)&#123;<span class="comment">//比之前的右端点大</span></span><br><span class="line">            ans+=rgt-a[i].l;<span class="comment">//从rgt到a[i].l</span></span><br><span class="line">            lft=rgt;<span class="comment">//之前的右端点显然就是左端点，显然，新的可能被覆盖到的区间就是之前的rgt~a[i].r</span></span><br><span class="line">            rgt=a[i].r;<span class="comment">//更新右端点</span></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;<span class="comment">//比之前的右端点小</span></span><br><span class="line">            ans+=a[i].r-a[i].l;<span class="comment">//从a[i].r到a[i].l</span></span><br><span class="line">            lft=a[i].r;<span class="comment">//更新左端点</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>我们先来看一下完整的代码：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;<span class="comment">//快读</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;<span class="comment">//快写</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l,r;<span class="comment">//每次染色的左端点和右端点</span></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(<span class="keyword">const</span> node&amp;b)<span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> l&lt;b.l;<span class="comment">//按左端点从小到大排序</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;a[MAXN];</span><br><span class="line"><span class="keyword">int</span> position,ans,lft,rgt,n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    read(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x;<span class="keyword">char</span> y;</span><br><span class="line">        read(x);<span class="built_in">cin</span>&gt;&gt;y;</span><br><span class="line">        a[i].l=position;</span><br><span class="line">        <span class="keyword">if</span>(y==<span class="string">'L'</span>)position-=x;<span class="comment">//Bessie往左走</span></span><br><span class="line">        <span class="keyword">else</span> position+=x;<span class="comment">//Bessie往右走</span></span><br><span class="line">        a[i].r=position;</span><br><span class="line">        <span class="keyword">if</span>(a[i].l&gt;a[i].r)swap(a[i].l,a[i].r);</span><br><span class="line">    &#125;sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>);<span class="comment">//排序</span></span><br><span class="line">    lft=a[<span class="number">1</span>].l;rgt=a[<span class="number">1</span>].r;<span class="comment">//给lft和rgt赋上初值</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">if</span>(a[i].r&gt;lft)&#123;<span class="comment">//如果跟可能被覆盖到的区间有交</span></span><br><span class="line">            a[i].l=max(a[i].l,lft);<span class="comment">//这里是使得之后的代码可以少写一点，因为显然，a[i].l&lt;lft，a[i].l~lft这1段也没有用了</span></span><br><span class="line">            <span class="keyword">if</span>(a[i].r&gt;rgt)&#123;<span class="comment">//比之前的右端点大</span></span><br><span class="line">                ans+=rgt-a[i].l;<span class="comment">//从rgt到a[i].l</span></span><br><span class="line">                lft=rgt;<span class="comment">//之前的右端点显然就是左端点，显然，新的可能被覆盖到的区间就是之前的rgt~a[i].r</span></span><br><span class="line">                rgt=a[i].r;<span class="comment">//更新右端点</span></span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;<span class="comment">//比之前的右端点小</span></span><br><span class="line">                ans+=a[i].r-a[i].l;<span class="comment">//从a[i].r到a[i].l</span></span><br><span class="line">                lft=a[i].r;<span class="comment">//更新左端点</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    write(ans);<span class="comment">//输出</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>补充一下正确性证明：</p><p>实际上作者想到这个方法的时候觉得显然是对的</p><p>其实主要就是为什么要 $lft=a[i].r$ 可能有人对此有点问题，我来解释一下</p><blockquote><p>$\therefore$ 我们是按从小到大对 $a$ 数组进行排序，也就是 $a[i+1].l \geq a[i].l$，而 $a[i].l&gt;lft$</p><p>$\because$ $a[i+1].l&gt;lft$。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 洛谷题库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 排序 </tag>
            
            <tag> 贪心 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>题解 P4302 【[SCOI2003]字符串折叠】</title>
      <link href="/2020/02/21/%E9%A2%98%E8%A7%A3%20P4302%20%E3%80%90%5BSCOI2003%5D%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8A%98%E5%8F%A0%E3%80%91/"/>
      <url>/2020/02/21/%E9%A2%98%E8%A7%A3%20P4302%20%E3%80%90%5BSCOI2003%5D%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8A%98%E5%8F%A0%E3%80%91/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4302" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p4302" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p><a id="more"></a><h2 id="讲讲我的做法"><a href="#讲讲我的做法" class="headerlink" title="讲讲我的做法"></a>讲讲我的做法</h2><p>题目大意：对一个字符串进行折叠是它长度最小</p><p>看一眼数据范围：哇！字符串长度不超过<strong>100</strong>！这是一道省选题，不可能给你太宽裕的时限，所以，题目基本暗示你要用$n^{3}$多一些的算法复杂度。</p><p>这是一道最优化的题目，常见求最优化问题的算法比如贪心，模拟，枚举我都想不出什么好办法，唯独觉得像一道区间$dp$</p><h3 id="区间-dp-的分析"><a href="#区间-dp-的分析" class="headerlink" title="区间$dp$的分析"></a>区间$dp$的分析</h3><h4 id="解释状态"><a href="#解释状态" class="headerlink" title="解释状态"></a>解释状态</h4><p>我们用$f[i][j]$表示$i$到$j$这个区间内最小的长度</p><p>首先，我们可以把$i$~$j$这个区间的字符串拆成2部分处理</p><p>就有了这段代码：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">2</span>;l&lt;=n;l++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,j=i+l<span class="number">-1</span>;j&lt;=n;i++,j++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;j;k++)</span><br><span class="line">            f[i][j]=min(f[i][j],f[i][k]+f[k+<span class="number">1</span>][j]);</span><br></pre></td></tr></table></figure><br>当然我用了字符串，然后加空格，这样更加符合人脑思维</p><p>也有同学喜欢用字符数组，我也写了这样的一段代码<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">2</span>;l&lt;=n;l++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>,j=i+len<span class="number">-1</span>;j&lt;n;i++,j++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;j;k++)</span><br><span class="line">            f[i][j]=min(f[i][j],f[i][k]+f[k+<span class="number">1</span>][j]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="折叠"><a href="#折叠" class="headerlink" title="折叠"></a>折叠</h4><p>至于如何判断能否折叠，我呢用了一个函数——$check$，来检查一下是否可以折叠</p><p>字符串代码：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=r;i++)</span><br><span class="line">        <span class="keyword">if</span>(st[i]!=st[(i-l)%len+l])<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>字符数组代码<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">char</span> s[],<span class="keyword">int</span> n,<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=len;i&lt;n;i++)</span><br><span class="line">        <span class="keyword">if</span>(s[i]!=s[i%len])<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>判断好了是否可以折叠，我们就可以去写状态了，从$i$~$j$,判断区间折叠的循环节</p><p>字符串代码<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">2</span>;l&lt;=n;l++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,j=i+l<span class="number">-1</span>;j&lt;=n;i++,j++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;j;k++)</span><br><span class="line">            f[i][j]=min(f[i][j],f[i][k]+f[k+<span class="number">1</span>][j]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;j;k++)&#123;</span><br><span class="line">            <span class="keyword">int</span> len=k-i+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(l%len!=<span class="number">0</span>)<span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(check(i,j,len))f[i][j]=min(f[i][j],f[i][k]+<span class="number">2</span>+m[l/len]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>字符数组代码<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">2</span>;l&lt;=n;l++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,j=i+l<span class="number">-1</span>;j&lt;n;i++,j++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;j;k++)</span><br><span class="line">            f[i][j]=min(f[i][j],f[i][k]+f[k+<span class="number">1</span>][j]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;j;k++)&#123;</span><br><span class="line">            <span class="keyword">int</span> len=k-i+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(l%len!=<span class="number">0</span>)<span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(check(s+i,l,len))f[i][j]=min(f[i][j],f[i][k]+<span class="number">2</span>+m[l/len]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="边界条件以及初始化"><a href="#边界条件以及初始化" class="headerlink" title="边界条件以及初始化"></a>边界条件以及初始化</h4><p>刚刚的代码里出现里$m$，现在我就来解释一下$m$数组是干什么的</p><p><strong>$m[i]$的值表示的是i的位数</strong>，因为字符串的长度跟数字的位数有关</p><p>提到了$m$数组的左右自然由于提及如何用代码实现</p><p>我用的是最简单的方法，$for$循环扫，<strong>注意</strong>：<strong>100也要赋值，万一数据给你100个同样的字符</strong><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">9</span>;i++)m[i]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">10</span>;i&lt;=<span class="number">99</span>;i++)m[i]=<span class="number">2</span>;</span><br><span class="line">m[<span class="number">100</span>]=<span class="number">3</span>;</span><br></pre></td></tr></table></figure></p><p>现在我们想一想初始化怎么做？</p><p>显然，$f[i][i]=1$，如何数组的初值要设为$INF$<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">memset</span>(f,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)f[i][i]=<span class="number">1</span>;</span><br></pre></td></tr></table></figure></p><h4 id="现在我们已经做完了所有的步骤，让我们看一看完整代码吧"><a href="#现在我们已经做完了所有的步骤，让我们看一看完整代码吧" class="headerlink" title="现在我们已经做完了所有的步骤，让我们看一看完整代码吧"></a>现在我们已经做完了所有的步骤，让我们看一看完整代码吧</h4><p>字符串代码<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">string</span> st;</span><br><span class="line"><span class="keyword">int</span> n,m[<span class="number">110</span>],f[<span class="number">110</span>][<span class="number">110</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=r;i++)</span><br><span class="line">        <span class="keyword">if</span>(st[i]!=st[(i-l)%len+l])<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;st;</span><br><span class="line">    n=st.size();</span><br><span class="line">    st=<span class="string">' '</span>+st;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">9</span>;i++)m[i]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">10</span>;i&lt;=<span class="number">99</span>;i++)m[i]=<span class="number">2</span>;</span><br><span class="line">    m[<span class="number">100</span>]=<span class="number">3</span>;</span><br><span class="line">    <span class="built_in">memset</span>(f,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)f[i][i]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">2</span>;l&lt;=n;l++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,j=i+l<span class="number">-1</span>;j&lt;=n;i++,j++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;j;k++)</span><br><span class="line">                f[i][j]=min(f[i][j],f[i][k]+f[k+<span class="number">1</span>][j]);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;j;k++)&#123;</span><br><span class="line">                <span class="keyword">int</span> len=k-i+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(l%len!=<span class="number">0</span>)<span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">if</span>(check(i,j,len))f[i][j]=min(f[i][j],f[i][k]+<span class="number">2</span>+m[l/len]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,f[<span class="number">1</span>][n]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>字符数组代码<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">110</span>];</span><br><span class="line"><span class="keyword">int</span> n,m[<span class="number">110</span>],f[<span class="number">110</span>][<span class="number">110</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">char</span> s[],<span class="keyword">int</span> n,<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=len;i&lt;n;i++)</span><br><span class="line">        <span class="keyword">if</span>(s[i]!=s[i%len])<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">    n=<span class="built_in">strlen</span>(s);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">9</span>;i++)m[i]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">10</span>;i&lt;=<span class="number">99</span>;i++)m[i]=<span class="number">2</span>;</span><br><span class="line">    m[<span class="number">100</span>]=<span class="number">3</span>;</span><br><span class="line">    <span class="built_in">memset</span>(f,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)f[i][i]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">2</span>;l&lt;=n;l++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,j=i+l<span class="number">-1</span>;j&lt;n;i++,j++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;j;k++)</span><br><span class="line">                f[i][j]=min(f[i][j],f[i][k]+f[k+<span class="number">1</span>][j]);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;j;k++)&#123;</span><br><span class="line">                <span class="keyword">int</span> len=k-i+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(l%len!=<span class="number">0</span>)<span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">if</span>(check(s+i,l,len))f[i][j]=min(f[i][j],f[i][k]+<span class="number">2</span>+m[l/len]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,f[<span class="number">0</span>][n<span class="number">-1</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度"></a>时间复杂度</h3><p>看上去我们连续套了4个循环，然而真的时间复杂度就达到了$n^{4}$吗？其实不是的</p><p>首先$n^{3}$是肯定要的，那么为什么时间复杂度没有达到$n^{4}$呢！</p><p>原因在于我们的continue剪枝，它能够给这个$n^{4}$的复杂度加上一个$log$</p><p>为什么？</p><p>我们要check的显然是$l$的因数，然而$l$的因数个数$\approx$ $\log{l}$</p><p>现实当中的复杂度还会更小，因为$check$的复杂度没有到$O(n)$，它不是从头开始，没有到头结束，并且一旦发现错误后会直接$return$</p><p>其实可以把里面的2个循环并成一个循环，但为了让大家看的更清楚，就不演示了</p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题库 </category>
          
          <category> SC省选 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dp </tag>
            
            <tag> 区间dp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>题解 P5663 【加工零件【民间数据】】</title>
      <link href="/2020/02/21/%E9%A2%98%E8%A7%A3-P5663-%E3%80%90%E5%8A%A0%E5%B7%A5%E9%9B%B6%E4%BB%B6%E3%80%90%E6%B0%91%E9%97%B4%E6%95%B0%E6%8D%AE%E3%80%91%E3%80%91/"/>
      <url>/2020/02/21/%E9%A2%98%E8%A7%A3-P5663-%E3%80%90%E5%8A%A0%E5%B7%A5%E9%9B%B6%E4%BB%B6%E3%80%90%E6%B0%91%E9%97%B4%E6%95%B0%E6%8D%AE%E3%80%91%E3%80%91/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P5663" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p5663" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p><a id="more"></a><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>蒟蒻没有资格去参加 $CSPJ$，只能看着众多巨佬 $AK$。</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><h3 id="确定做法"><a href="#确定做法" class="headerlink" title="确定做法"></a>确定做法</h3><p>首先，看到这道题，我直接想到的是递归，于是复杂度就上天了，考虑<strong>最短路</strong>。</p><h3 id="如何用最短路"><a href="#如何用最短路" class="headerlink" title="如何用最短路"></a>如何用最短路</h3><p>首先，看一张图</p><p><img src="https://i.loli.net/2019/11/23/CQ1F4lRjrX2qVpf.png" alt="360截图16251114373524.png"></p><p>我们该如何解决问题？</p><blockquote><p>问题:$3$做$5$阶段的零件$1$要不要做呢？</p></blockquote><p>其实，实质就是看$3$到$1$有没有长度为$5$的路径。</p><blockquote><p>问题:$3$做$7$阶段的零件$1$要不要做呢？</p></blockquote><p>其实，实质就是看$3$到$1$有没有长度为$7$的路径。</p><blockquote><p>问题:$3$做$6$阶段的零件$1$要不要做呢？</p></blockquote><p>其实，实质就是看$3$到$1$有没有长度为$6$的路径。</p><p>仔细思考这$3$个问题，我们会发现，<strong>如果$3$到$1$有长度为$5$的路径，那么$3$到$1$一定有长度为$7$的路径，但并不一定有长度为$6$的路径。</strong></p><p>所以，我们要对每个点求一遍奇数路径，和偶数路径。</p><h3 id="实现最短路"><a href="#实现最短路" class="headerlink" title="实现最短路"></a>实现最短路</h3><p>最短路的算法有很多，这道题最好用$dijkstra$，或$bfs$。</p><p>这道题的时限并不紧，并且$dijkstra$<strong>细节太多</strong>，我就来演示$bfs$实现的最短路</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfw</span><span class="params">()</span></span>&#123;<span class="comment">//我有一个好朋友叫bfw，所以我写bfs时，喜欢把函数名起为bfw</span></span><br><span class="line">    <span class="built_in">memset</span>(ji,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(ji));<span class="comment">//奇数最短路径</span></span><br><span class="line">    <span class="built_in">memset</span>(ou,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(ou));<span class="comment">//偶数最短路径</span></span><br><span class="line">    <span class="built_in">queue</span>&lt;pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt;q;</span><br><span class="line">    q.push(make_pair(<span class="number">1</span>,<span class="number">0</span>));</span><br><span class="line">    ou[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(q.size())&#123;</span><br><span class="line">        <span class="keyword">int</span> x=q.front().first,y=q.front().second;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v[x].size();i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(y%<span class="number">2</span>==<span class="number">1</span>)&#123;<span class="comment">//奇数+1=偶数</span></span><br><span class="line">                <span class="keyword">if</span>(y+<span class="number">1</span>&lt;ou[v[x][i]])&#123;</span><br><span class="line">                    ou[v[x][i]]=y+<span class="number">1</span>;<span class="comment">//更新答案</span></span><br><span class="line">                    q.push(make_pair(v[x][i],y+<span class="number">1</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;<span class="comment">//偶数+1=奇数</span></span><br><span class="line">                <span class="keyword">if</span>(y+<span class="number">1</span>&lt;ji[v[x][i]])&#123;</span><br><span class="line">                    ji[v[x][i]]=y+<span class="number">1</span>;<span class="comment">//更新答案</span></span><br><span class="line">                    q.push(make_pair(v[x][i],y+<span class="number">1</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        q.pop();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>$v$数组是一个动态数组，也就是$vector$，曹老师教我们<strong>多用$STL$写程序</strong></p><p>如果你写这样的$bfs$民间数据会$WA$ $1$个点 ，这个点是这样的</p><p><img src="https://i.loli.net/2019/11/23/JiCDb6jpuB9gzfZ.png" alt="360截图172905077510285.png"></p><p>$1$号点是一个孤点，没有偶数路径，所以，我们的$bfs$要这么写</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfw</span><span class="params">()</span></span>&#123;<span class="comment">//我有一个好朋友叫bfw，所以我写bfs时，喜欢把函数名起为bfw</span></span><br><span class="line">    <span class="built_in">memset</span>(ji,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(ji));<span class="comment">//奇数最短路径</span></span><br><span class="line">    <span class="built_in">memset</span>(ou,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(ou));<span class="comment">//偶数最短路径</span></span><br><span class="line">    <span class="built_in">queue</span>&lt;pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt;q;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v[<span class="number">1</span>].size();i++)&#123;</span><br><span class="line">        ji[v[<span class="number">1</span>][i]]=<span class="number">1</span>;</span><br><span class="line">        q.push(make_pair(v[<span class="number">1</span>][i],<span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(q.size())&#123;</span><br><span class="line">        <span class="keyword">int</span> x=q.front().first,y=q.front().second;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v[x].size();i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(y%<span class="number">2</span>==<span class="number">1</span>)&#123;<span class="comment">//奇数+1=偶数</span></span><br><span class="line">                <span class="keyword">if</span>(y+<span class="number">1</span>&lt;ou[v[x][i]])&#123;</span><br><span class="line">                    ou[v[x][i]]=y+<span class="number">1</span>;<span class="comment">//更新答案</span></span><br><span class="line">                    q.push(make_pair(v[x][i],y+<span class="number">1</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;<span class="comment">//偶数+1=奇数</span></span><br><span class="line">                <span class="keyword">if</span>(y+<span class="number">1</span>&lt;ji[v[x][i]])&#123;</span><br><span class="line">                    ji[v[x][i]]=y+<span class="number">1</span>;<span class="comment">//更新答案</span></span><br><span class="line">                    q.push(make_pair(v[x][i],y+<span class="number">1</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        q.pop();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="简要讲解主程序"><a href="#简要讲解主程序" class="headerlink" title="简要讲解主程序"></a>简要讲解主程序</h3><p>有了这些主程序应该是很简单的了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m,q;</span><br><span class="line">    read(n);read(m);read(q);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        read(x);read(y);<span class="comment">//无向边</span></span><br><span class="line">        v[x].push_back(y);<span class="comment">//连边</span></span><br><span class="line">        v[y].push_back(x);<span class="comment">//连边</span></span><br><span class="line">    &#125;</span><br><span class="line">    bfw();<span class="comment">//跑最短路</span></span><br><span class="line">    <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        read(x);read(y);</span><br><span class="line">        <span class="keyword">if</span>(y%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(ou[x]&gt;y)<span class="built_in">puts</span>(<span class="string">"No"</span>);<span class="comment">//如果大于就不可能了</span></span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(ji[x]&gt;y)<span class="built_in">puts</span>(<span class="string">"No"</span>);<span class="comment">//如果大于就不可能了</span></span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>先来看一看这题完整的代码了<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;v[<span class="number">100010</span>];</span><br><span class="line"><span class="keyword">int</span> ji[<span class="number">100010</span>],ou[<span class="number">100010</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfw</span><span class="params">()</span></span>&#123;<span class="comment">//我有一个好朋友叫bfw，所以我写bfs时，喜欢把函数名起为bfw</span></span><br><span class="line">    <span class="built_in">memset</span>(ji,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(ji));<span class="comment">//奇数最短路径</span></span><br><span class="line">    <span class="built_in">memset</span>(ou,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(ou));<span class="comment">//偶数最短路径</span></span><br><span class="line">    <span class="built_in">queue</span>&lt;pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt;q;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v[<span class="number">1</span>].size();i++)&#123;</span><br><span class="line">        ji[v[<span class="number">1</span>][i]]=<span class="number">1</span>;</span><br><span class="line">        q.push(make_pair(v[<span class="number">1</span>][i],<span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(q.size())&#123;</span><br><span class="line">        <span class="keyword">int</span> x=q.front().first,y=q.front().second;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v[x].size();i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(y%<span class="number">2</span>==<span class="number">1</span>)&#123;<span class="comment">//奇数+1=偶数</span></span><br><span class="line">                <span class="keyword">if</span>(y+<span class="number">1</span>&lt;ou[v[x][i]])&#123;</span><br><span class="line">                    ou[v[x][i]]=y+<span class="number">1</span>;<span class="comment">//更新答案</span></span><br><span class="line">                    q.push(make_pair(v[x][i],y+<span class="number">1</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;<span class="comment">//偶数+1=奇数</span></span><br><span class="line">                <span class="keyword">if</span>(y+<span class="number">1</span>&lt;ji[v[x][i]])&#123;</span><br><span class="line">                    ji[v[x][i]]=y+<span class="number">1</span>;<span class="comment">//更新答案</span></span><br><span class="line">                    q.push(make_pair(v[x][i],y+<span class="number">1</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        q.pop();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m,q;</span><br><span class="line">    read(n);read(m);read(q);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        read(x);read(y);<span class="comment">//无向边</span></span><br><span class="line">        v[x].push_back(y);<span class="comment">//连边</span></span><br><span class="line">        v[y].push_back(x);<span class="comment">//连边</span></span><br><span class="line">    &#125;</span><br><span class="line">    bfw();<span class="comment">//跑最短路</span></span><br><span class="line">    <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        read(x);read(y);</span><br><span class="line">        <span class="keyword">if</span>(y%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(ou[x]&gt;y)<span class="built_in">puts</span>(<span class="string">"No"</span>);<span class="comment">//如果大于就不可能了</span></span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(ji[x]&gt;y)<span class="built_in">puts</span>(<span class="string">"No"</span>);<span class="comment">//如果大于就不可能了</span></span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>这道题还是比较有<strong>思维含量</strong>的，民间数据也出的很好，让我们思考全面。</p><p>最后，还是希望大家不懂就在评论区问，觉得好就点赞！</p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题库 </category>
          
          <category> noip普及组 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bfs </tag>
            
            <tag> 搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>题解 CF1304E 【1-Trees and Queries】</title>
      <link href="/2020/02/21/%E9%A2%98%E8%A7%A3-CF1304E-%E3%80%901-Trees-and-Queries%E3%80%91-1/"/>
      <url>/2020/02/21/%E9%A2%98%E8%A7%A3-CF1304E-%E3%80%901-Trees-and-Queries%E3%80%91-1/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/CF1304E" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-cf1304e" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p><a id="more"></a><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这场比赛，在最后 $5$ 分钟，我想到了这道题的 $Idea$，但是，没有打完，比赛就结束了。</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="题目意思"><a href="#题目意思" class="headerlink" title="题目意思"></a>题目意思</h2><p>这道题目的意思就是说，一棵树上每次给 $x$ 和 $y$ 节点连 $1$ 条边，问 $a$ 到 $b$ 之间有没有长度为 $k$ 的边。</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>一开始，我看到这道题就往基环树这里去想，可实际上，这道题的方法却是和<a href="https://www.luogu.com.cn/problem/P5663" target="_blank" rel="noopener">加工零件</a>这道题是有异曲同工之处，作者那道题里面也写了篇<a href="https://zhaohaikun.blog.luogu.org/solution-p5663" target="_blank" rel="noopener">题解</a>，不会的同学可以去看一看。</p><p>这道题难处理的地方就是加 $1$ 条边这个地方很难处理，但是我们可以想一想，实际上可能的路径一共就<strong>3条</strong>。</p><ol><li><p>$a \implies b$ 这是最原始的路径。</p></li><li><p>$a \implies x \implies y \implies b$ 这是借助 $x,y$ 的路径</p></li><li><p>$a \implies y \implies x \implies b$ 这是借助 $y,x$ 的路径。</p></li></ol><p>也就是<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;=y&amp;&amp;x%<span class="number">2</span>==y%<span class="number">2</span>)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(T--)&#123;</span><br><span class="line">    <span class="keyword">int</span> x,y,a,b,k;</span><br><span class="line">    read(x);read(y);read(a);read(b);read(k);</span><br><span class="line">    <span class="keyword">int</span> ab=dist(a,b),ax=dist(a,x),yb=dist(b,y),ay=dist(a,y),bx=dist(b,x);</span><br><span class="line">    <span class="keyword">if</span>(check(ab,k)||check(ax+yb+<span class="number">1</span>,k)||check(ay+bx+<span class="number">1</span>,k))<span class="built_in">puts</span>(<span class="string">"YES"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"NO"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>​    </p><p>​    </p><h3 id="处理往回走"><a href="#处理往回走" class="headerlink" title="处理往回走"></a>处理往回走</h3><p>可能有读者会问，走到 $1$ 个点，再走回来，这个怎么办呢？我们发现走到 $1$ 个点再回来，这样 $1$ 次路径长度是 $2$。所以我们这 $3$ 条路径当中，只要有 $1$ 条路径满足一下 $2$ 个条件，就说明存在这样一条长度为 $k$ 的路径。</p><ol><li><p><strong>路径长度 $\leq k$ 这一个很显然。</strong>长度 $&gt; k$，显然就是不合法的。</p></li><li><p><strong>路径长度和 $k$ 奇偶性相同。</strong>这就是基于往回走的做法，奇偶性相同，就代表两个数的差是偶数，所以就是可以组成长度为 $k$ 路径。</p></li></ol><h3 id="预处理-2-点之间的距离"><a href="#预处理-2-点之间的距离" class="headerlink" title="预处理 $2$ 点之间的距离"></a>预处理 $2$ 点之间的距离</h3><p>我们刚才说了，两个点之间的距离显然是要求出来的，我们需要预处理 $LCA$，不会的同学可以左转<a href="https://www.luogu.com.cn/problemnew/solution/P3379" target="_blank" rel="noopener">题解区</a>，我用的是最朴素的倍增 $LCA$。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> f)</span></span>&#123;</span><br><span class="line">    dep[x]=dep[f]+<span class="number">1</span>;</span><br><span class="line">    fa[x][<span class="number">0</span>]=f;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;(<span class="number">1</span>&lt;&lt;i)&lt;=dep[x];i++)</span><br><span class="line">        fa[x][i]=fa[fa[x][i<span class="number">-1</span>]][i<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];i;i=nxt[i])</span><br><span class="line">        <span class="keyword">if</span>(t[i]!=f)dfs(t[i],x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lca</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(dep[x]&lt;dep[y])swap(x,y);</span><br><span class="line">    <span class="keyword">while</span>(dep[x]&gt;dep[y])x=fa[x][lg[dep[x]-dep[y]]<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">if</span>(x==y)<span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=lg[dep[x]]<span class="number">-1</span>;k&gt;=<span class="number">0</span>;k--)</span><br><span class="line">        <span class="keyword">if</span>(fa[x][k]!=fa[y][k])x=fa[x][k],y=fa[y][k];</span><br><span class="line">    <span class="keyword">return</span> fa[x][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dist</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;<span class="comment">//x号节点和y号节点的距离</span></span><br><span class="line">    <span class="keyword">int</span> z=lca(x,y);</span><br><span class="line">    <span class="keyword">return</span> dep[x]+dep[y]-dep[z]*<span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;<span class="comment">//快读</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;<span class="comment">//快写</span></span><br><span class="line"><span class="keyword">int</span> dep[<span class="number">500010</span>],fa[<span class="number">500010</span>][<span class="number">22</span>],lg[<span class="number">500010</span>],head[<span class="number">500010</span>],nxt[<span class="number">500010</span>],t[<span class="number">500010</span>],tot;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    t[++tot]=y;</span><br><span class="line">    nxt[tot]=head[x];</span><br><span class="line">    head[x]=tot;</span><br><span class="line">&#125;<span class="comment">//连边</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> f)</span></span>&#123;</span><br><span class="line">    dep[x]=dep[f]+<span class="number">1</span>;</span><br><span class="line">    fa[x][<span class="number">0</span>]=f;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;(<span class="number">1</span>&lt;&lt;i)&lt;=dep[x];i++)</span><br><span class="line">        fa[x][i]=fa[fa[x][i<span class="number">-1</span>]][i<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];i;i=nxt[i])</span><br><span class="line">        <span class="keyword">if</span>(t[i]!=f)dfs(t[i],x);</span><br><span class="line">&#125;<span class="comment">//预处理father</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lca</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(dep[x]&lt;dep[y])swap(x,y);</span><br><span class="line">    <span class="keyword">while</span>(dep[x]&gt;dep[y])x=fa[x][lg[dep[x]-dep[y]]<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">if</span>(x==y)<span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=lg[dep[x]]<span class="number">-1</span>;k&gt;=<span class="number">0</span>;k--)</span><br><span class="line">        <span class="keyword">if</span>(fa[x][k]!=fa[y][k])x=fa[x][k],y=fa[y][k];</span><br><span class="line">    <span class="keyword">return</span> fa[x][<span class="number">0</span>];</span><br><span class="line">&#125;<span class="comment">//LCA</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dist</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> z=lca(x,y);</span><br><span class="line">    <span class="keyword">return</span> dep[x]+dep[y]-dep[z]*<span class="number">2</span>;</span><br><span class="line">&#125;<span class="comment">//x、y两点之间的距离</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;=k&amp;&amp;x%<span class="number">2</span>==k%<span class="number">2</span>)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;<span class="comment">//检查长度为x的边是否满足前文讲得2个条件</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    read(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        read(x);read(y);</span><br><span class="line">        add(x,y);add(y,x);</span><br><span class="line">    &#125;</span><br><span class="line">    dfs(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)lg[i]=lg[i<span class="number">-1</span>]+(<span class="number">1</span>&lt;&lt;lg[i<span class="number">-1</span>]==i);<span class="comment">//预处理除log</span></span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    read(T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="keyword">int</span> x,y,a,b,k;</span><br><span class="line">        read(x);read(y);read(a);read(b);read(k);</span><br><span class="line">        <span class="keyword">int</span> ab=dist(a,b),ax=dist(a,x),yb=dist(b,y),ay=dist(a,y),bx=dist(b,x);<span class="comment">//3条边</span></span><br><span class="line">        <span class="keyword">if</span>(check(ab,k)||check(ax+yb+<span class="number">1</span>,k)||check(ay+bx+<span class="number">1</span>,k))<span class="built_in">puts</span>(<span class="string">"YES"</span>);<span class="comment">//有1条符合条件，就代表有</span></span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"NO"</span>);<span class="comment">//3条都不符合就代表没有</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>这道题还是很有思考的价值，也算是积累了经验<strong>看到一棵树加 $1$ 条边，未必一定要往基环树想</strong>。希望觉得好的同学可以点赞，有问题请在评论区表述一下，是我的题解都够再完善一下。</p>]]></content>
      
      
      <categories>
          
          <category> 洛谷题库 </category>
          
          <category> CF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LCA </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
