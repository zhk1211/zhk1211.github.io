<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>题解 CF1406C 【Link Cut Centroids】</title>
    <url>/2020/09/14/%E9%A2%98%E8%A7%A3-CF1406C-%E3%80%90Link-Cut-Centroids%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1052" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p1052" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<p>有一个性质是这样的——重心连接的最大的子树大小不超过整棵树的一半。</p>
<p>当重心连接的最大的子树大小小于整棵树的一半时，这个树的重心是唯一的。</p>
<p>有了这个性质就好做了，我们可以随便找到一个重心，然后将它连接的最大的子树下的一个点连向它。</p>
<p>举个例子：</p>
<p><img src="https://i.loli.net/2020/09/14/7F9RnlWrABJx8de.png" alt=""></p>
<p>代码：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;v[<span class="number">100010</span>];</span><br><span class="line"><span class="keyword">int</span> n,s[<span class="number">100010</span>],ans[<span class="number">100010</span>],as;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> fa)</span></span>&#123;</span><br><span class="line">	s[x]=<span class="number">1</span>;ans[x]=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i:v[x])</span><br><span class="line">		<span class="keyword">if</span>(i!=fa)&#123;</span><br><span class="line">			dfs(i,x);</span><br><span class="line">			ans[x]=max(ans[x],s[i]);</span><br><span class="line">			s[x]+=s[i];</span><br><span class="line">		&#125;</span><br><span class="line">	ans[x]=max(ans[x],n-s[x]);</span><br><span class="line">	as=min(as,ans[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">memset</span>(s,<span class="number">0</span>,<span class="keyword">sizeof</span>(s));<span class="comment">//多测不清空，爆零两行泪。</span></span><br><span class="line">	read(n);as=n;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)v[i].clear();<span class="comment">//多测不清空，爆零两行泪。</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">		<span class="keyword">int</span> x,y;read(x);read(y);</span><br><span class="line">		v[x].push_back(y);</span><br><span class="line">		v[y].push_back(x);</span><br><span class="line">	&#125;</span><br><span class="line">	dfs(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">		<span class="keyword">if</span>(ans[i]==as)&#123;</span><br><span class="line">			dfs(i,<span class="number">0</span>);</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j:v[i])</span><br><span class="line">				<span class="keyword">if</span>(s[j]==as)&#123;</span><br><span class="line">					<span class="keyword">if</span>(as==<span class="number">1</span>)&#123;<span class="comment">//这里需要特判</span></span><br><span class="line">						<span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="string">" "</span>&lt;&lt;j&lt;&lt;<span class="built_in">endl</span>&lt;&lt;i&lt;&lt;<span class="string">" "</span>&lt;&lt;j&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">						<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">for</span>(<span class="keyword">int</span> k:v[j])&#123;</span><br><span class="line">						<span class="keyword">if</span>(k!=i)&#123;</span><br><span class="line">							<span class="built_in">cout</span>&lt;&lt;k&lt;&lt;<span class="string">" "</span>&lt;&lt;j&lt;&lt;<span class="built_in">endl</span>&lt;&lt;k&lt;&lt;<span class="string">" "</span>&lt;&lt;i&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">							<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">						&#125;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">		&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>洛谷题库</category>
        <category>CF</category>
      </categories>
  </entry>
  <entry>
    <title>题解 CF1409E 【Two Platforms】</title>
    <url>/2020/09/05/Two%E3%80%91%E2%80%9D/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/CF1409E" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-cf1409e" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<p>写篇题解庆祝我第 $1$ 次参加 $div3$，而且还 $AK$ 了</p>
<p>我们发现 $y$ 坐标越低越好，所以答案与 $y$ 坐标无关。</p>
<p>现在问题等价于一条数轴上有 $n$ 个点，求 $2$ 条线段覆盖尽可能多的点.</p>
<p>我们考虑类似于<a href="https://www.luogu.com.cn/problem/P2642" target="_blank" rel="noopener">双子序列最大和</a>一样的<a href="https://www.luogu.com.cn/blog/180242/solution-p2642" target="_blank" rel="noopener">做法</a></p>
<p>首先，有 $2$ 个结论：</p>
<ul>
<li>$2$ 条线段重叠明显是不优的，我们就需要让这两条无重叠。</li>
<li>线段的至少 $1$ 的端点要是 $n$ 个点当中的一个，这样显然会比线段 $2$ 段都不是 $n$ 个中的一个的要优。</li>
</ul>
<p>这样就可以了</p>
<p>代码：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">work</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">memset</span>(f,<span class="number">0</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line">	<span class="built_in">memset</span>(g,<span class="number">0</span>,<span class="keyword">sizeof</span>(g));</span><br><span class="line">	<span class="built_in">memset</span>(k,<span class="number">0</span>,<span class="keyword">sizeof</span>(k));</span><br><span class="line">	<span class="keyword">int</span> n,k;read(n);read(k);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)read(a[i]);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)read(b[i]);</span><br><span class="line">	sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>);<span class="comment">//不要忘了排序</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)f[i]=i-(lower_bound(a+<span class="number">1</span>,a+n+<span class="number">1</span>,a[i]-k)-a)+<span class="number">1</span>;<span class="comment">//以第i个点为左端点</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=n;i;i--)p[i]=upper_bound(a+<span class="number">1</span>,a+n+<span class="number">1</span>,a[i]+k)-a-i;<span class="comment">//以第i个点为右端点</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)g[i]=max(g[i<span class="number">-1</span>],f[i]);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=n;i;i--)::k[i]=max(::k[i+<span class="number">1</span>],p[i]);</span><br><span class="line">	<span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n+<span class="number">1</span>;i++)ans=max(ans,g[i<span class="number">-1</span>]+::k[i]);</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
  </entry>
  <entry>
    <title>题解 CF1409F 【Subsequences of Length Two】</title>
    <url>/2020/09/05/%E9%A2%98%E8%A7%A3-CF1409F-%E3%80%90Subsequences-of-Length-Two%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/CF1409F" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-cf1409f" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<p>看一下数据范围发现基本上标算应该是 $O(n^3)$ 了、</p>
<p>我们考虑 $3$ 方的 $dp$。</p>
<p>首先 $\texttt{t}$ 的 $2$ 个字符相等的话，答案为</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> s=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">	<span class="keyword">if</span>(a[i]==b[<span class="number">1</span>])s++;</span><br><span class="line">s=min(n,s+k);</span><br><span class="line"><span class="keyword">int</span> x=(s*(s<span class="number">-1</span>)/<span class="number">2</span>);</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;x;</span><br></pre></td></tr></table></figure>
<p>代码的 $s$ 就是结果 $k$ 次操作，字符串 $\texttt{s}$ 里面最多有 $s$ 个 $\texttt{t}$ 的字符。</p>
<p>我们算一算，发现答案为</p>
<script type="math/tex; mode=display">(s-1)+(s-2)+\cdots+1=\frac{s\times (s-1)}{2}</script><p>换个角度也可以</p>
<script type="math/tex; mode=display">\begin{pmatrix} s \\ 2 \end{pmatrix} = \frac{s\times (s-1)}{2}</script><p>那么剩下的情况就是这 $2$ 个字符不同了。</p>
<p>我们想一想，其实，字符串 $\texttt{s}$ 里有多少个字符串 $\texttt{t}$ 就直接看字符串 $\texttt{s}$ 里<strong>每个字符 $\texttt{t}_2$ 前 $\texttt{t}_1$ 的个数。</strong></p>
<p>举个例子:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">aababccabb</span><br><span class="line">ab</span><br></pre></td></tr></table></figure>
<p>里有多少个子子序列 $\texttt{t}$ 呢</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">字符标号</th>
<th style="text-align:center">1</th>
<th style="text-align:center">2</th>
<th style="text-align:center">3</th>
<th style="text-align:center">4</th>
<th style="text-align:center">5</th>
<th style="text-align:center">6</th>
<th style="text-align:center">7</th>
<th style="text-align:center">8</th>
<th style="text-align:center">9</th>
<th style="text-align:center">10</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">字符</td>
<td style="text-align:center">a</td>
<td style="text-align:center">a</td>
<td style="text-align:center">b</td>
<td style="text-align:center">a</td>
<td style="text-align:center">b</td>
<td style="text-align:center">c</td>
<td style="text-align:center">c</td>
<td style="text-align:center">a</td>
<td style="text-align:center">b</td>
<td style="text-align:center">b</td>
</tr>
<tr>
<td style="text-align:center">前面 $a$ 的个数</td>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
<td style="text-align:center">2</td>
<td style="text-align:center">2</td>
<td style="text-align:center">3</td>
<td style="text-align:center">3</td>
<td style="text-align:center">3</td>
<td style="text-align:center">3</td>
<td style="text-align:center">4</td>
<td style="text-align:center">4</td>
</tr>
<tr>
<td style="text-align:center">$ans$</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:center">2</td>
<td style="text-align:center">2</td>
<td style="text-align:center">5</td>
<td style="text-align:center">5</td>
<td style="text-align:center">5</td>
<td style="text-align:center">5</td>
<td style="text-align:center">9</td>
<td style="text-align:center">13</td>
</tr>
</tbody>
</table>
</div>
<p>不难发现有 $13$ 个。</p>
<p>我们用 $f_{i,j,k}$ 来 $dp$。</p>
<p>它的意义：</p>
<ul>
<li>$i$ 就对应上面的字符编号</li>
<li>$j$ 指的是前 $i$ 个字符修改了多少个</li>
<li>$k$ 对应上面的前面 $a$ 的个数</li>
</ul>
<p>还有一个非常重要的东西，对于一个字符，要么将它修改为 $\texttt{t}_2$、要么将它修改为 $\texttt{t}_1$，要么不修改。</p>
<p>这样我们的状态转移方程就好写了</p>
<p>分别对应不修改</p>
<script type="math/tex; mode=display">f_{i,j,k}=f_{i-1,j,k}</script><p>修改为 $\texttt{t}_1$</p>
<ul>
<li>如果这个字符本来为 $\texttt{t}_1$，则<script type="math/tex; mode=display">f_{i,j,k}=f_{i-1,j,k-1}</script></li>
<li>否则<script type="math/tex; mode=display">f_{i,j,k}=f_{i-1,j-1,k-1}</script></li>
</ul>
<p>修改为 $\texttt{t}_2$</p>
<ul>
<li>如果这个字符本来为 $\texttt{t}_2$，则<script type="math/tex; mode=display">f_{i,j,k}=f_{i-1,j,k}+k</script></li>
<li>否则<script type="math/tex; mode=display">f_{i,j,k}=f_{i-1,j-1,k}+k</script></li>
</ul>
<p>初始化的话先全部赋值为无穷小，再将 $f_{0,i,0}$ 赋值为 $0$（这里 $i\in (1,k)$）</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// Problem: F. Subsequences of Length Two</span></span><br><span class="line"><span class="comment">// Contest: Codeforces - Codeforces Round #667 (Div. 3)</span></span><br><span class="line"><span class="comment">// URL: https://codeforces.ml/contest/1409/problem/F</span></span><br><span class="line"><span class="comment">// Memory Limit: 256 MB</span></span><br><span class="line"><span class="comment">// Time Limit: 2000 ms</span></span><br><span class="line"><span class="comment">// Powered by CP Editor (https://github.com/cpeditor/cpeditor)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,k,f[<span class="number">210</span>][<span class="number">210</span>][<span class="number">210</span>];</span><br><span class="line"><span class="built_in">string</span> a,b;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">memset</span>(f,<span class="number">128</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line">	read(n);read(k);</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">	a=<span class="string">' '</span>+a;b=<span class="string">' '</span>+b;</span><br><span class="line">	<span class="keyword">if</span>(b[<span class="number">1</span>]==b[<span class="number">2</span>])&#123;</span><br><span class="line">		<span class="keyword">int</span> s=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">			<span class="keyword">if</span>(a[i]==b[<span class="number">1</span>])s++;</span><br><span class="line">		s=min(n,s+k);</span><br><span class="line">		<span class="keyword">int</span> x=(s*(s<span class="number">-1</span>)/<span class="number">2</span>);</span><br><span class="line">		<span class="built_in">cout</span>&lt;&lt;x;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=k;i++)f[<span class="number">0</span>][i][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=k;j++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">0</span>;l&lt;=i;l++)&#123;</span><br><span class="line">				f[i][j][l]=f[i<span class="number">-1</span>][j][l];</span><br><span class="line">				<span class="keyword">if</span>(a[i]==b[<span class="number">1</span>])f[i][j][l]=max(f[i][j][l],f[i<span class="number">-1</span>][j][l<span class="number">-1</span>]);</span><br><span class="line">				<span class="keyword">else</span> <span class="keyword">if</span>(j)f[i][j][l]=max(f[i][j][l],f[i<span class="number">-1</span>][j<span class="number">-1</span>][l<span class="number">-1</span>]);</span><br><span class="line">				<span class="keyword">if</span>(a[i]==b[<span class="number">2</span>])f[i][j][l]=max(f[i][j][l],f[i<span class="number">-1</span>][j][l]+l);</span><br><span class="line">				<span class="keyword">else</span> <span class="keyword">if</span>(j)f[i][j][l]=max(f[i][j][l],f[i<span class="number">-1</span>][j<span class="number">-1</span>][l]+l);</span><br><span class="line">			&#125;</span><br><span class="line">	<span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++)ans=max(ans,f[n][k][i]);</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>洛谷题库</category>
        <category>CF</category>
      </categories>
      <tags>
        <tag>分类讨论</tag>
        <tag>dp</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 CF1391D 【505】</title>
    <url>/2020/08/10/%E9%A2%98%E8%A7%A3-CF1391D-%E3%80%90505%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/CF1391D" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-cf1391d" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<p>这道题目的话看似没有头绪，我们分析一下。</p>
<p>偶数长度平方矩阵为：$2 \times 2$、$4 \times 4$、$8 \times 8$……</p>
<p>我们考虑是否可能同时满足所有 $2 \times 2$ 的矩阵 $1$ 的个数为奇数，所有 $4 \times 4$ 的矩阵 $1$ 的个数为奇数。</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjAvMDgvMTAvV2I3RVp5OG51WEh3Vk1sLnBuZw?x-oss-process=image/format,png" alt=""></p>
<p>如图，每个黑色正方形是一个 $2 \times 2$ 的矩阵，为了满足要求它们 $1$ 的个数都为奇数，由 $4$ 个 $2 \times 2$ 的矩阵拼成的 $4 \times 4$ 大矩阵为了复合要求也必须由奇数个 $1$，然后这和我们上面的东西矛盾，因为奇数 $\times 4=$ 偶数，所以，$n\geq 4$ 且 $m \geq 4$ 的矩阵，一定不能满足所有条件。</p>
<p>那么由于 $n\leq 3$，所以我们分类讨论。</p>
<ul>
<li><p>对于 $n=1$ ，答案显然为 $0$。</p>
</li>
<li><p>对于 $n=2$ ，显然对于连续的 $2$ 列，这两列 $1$ 的个数必须奇偶性不相同，因为只有奇数+偶数=奇数。所以一共就只有 $2$ 钟情况。</p>
<ol>
<li>第 $1$ 列 $1$ 的个数为奇数，第 $2$ 列 $1$ 的个数为偶数……</li>
<li><p>第 $1$ 列 $1$ 的个数为偶数，第 $2$ 列 $1$ 的个数为奇数……</p>
<p>时间复杂度 $O(n)$。</p>
</li>
</ol>
</li>
<li><p>对于 $n=3$，我们可以用状压 $dp$ 来做，我们设 $f_{i,j}$ 表示第 $i$ 列状态为 $j$，转移的话，我们枚举前一列的合法状态，对所有可行解取个 $\min$ 即可，最后不要忘记加上这 $1$ 列修改的方格数。</p>
<p>  不难发现，每个状态可以转移的状态数均为 $2$，因此此题复杂度为 $O(n)$，$16$ 倍常数，但这是可以 $A$ 的。</p>
</li>
</ul>
<p>代码：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">15</span>][<span class="number">1000010</span>],f[<span class="number">1000010</span>][<span class="number">11</span>];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;v[<span class="number">15</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;<span class="comment">//判断2个状态是否能相互转移</span></span><br><span class="line">	<span class="keyword">int</span> a1=x&amp;<span class="number">1</span>,a2=(x&gt;&gt;<span class="number">1</span>)&amp;<span class="number">1</span>,a3=(x&gt;&gt;<span class="number">2</span>)&amp;<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">int</span> b1=y&amp;<span class="number">1</span>,b2=(y&gt;&gt;<span class="number">1</span>)&amp;<span class="number">1</span>,b3=(y&gt;&gt;<span class="number">2</span>)&amp;<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">if</span>((a1+a2+b1+b2)%<span class="number">2</span>==<span class="number">0</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	<span class="keyword">if</span>((a2+a3+b2+b3)%<span class="number">2</span>==<span class="number">0</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">work</span><span class="params">(<span class="keyword">int</span> y,<span class="keyword">int</span> x)</span></span>&#123;<span class="comment">//算修改了几个格子</span></span><br><span class="line">	<span class="keyword">int</span> a1=x&amp;<span class="number">1</span>,a2=(x&gt;&gt;<span class="number">1</span>)&amp;<span class="number">1</span>,a3=(x&gt;&gt;<span class="number">2</span>)&amp;<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">return</span> (a[<span class="number">1</span>][y]!=a1)+(a[<span class="number">2</span>][y]!=a2)+(a[<span class="number">3</span>][y]!=a3);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n,m;read(n);read(m);</span><br><span class="line">	<span class="keyword">if</span>(n&gt;=<span class="number">4</span>&amp;&amp;m&gt;=<span class="number">4</span>)&#123;</span><br><span class="line">		<span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">			<span class="keyword">char</span> ch=getchar();</span><br><span class="line">			<span class="keyword">for</span>(;ch!=<span class="string">'0'</span>&amp;&amp;ch!=<span class="string">'1'</span>;ch=getchar());</span><br><span class="line">			a[i][j]=(ch==<span class="string">'1'</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">if</span>(n==<span class="number">1</span>)&#123;</span><br><span class="line">		<span class="built_in">puts</span>(<span class="string">"0"</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(n==<span class="number">2</span>)&#123;</span><br><span class="line">		<span class="keyword">int</span> ans1=<span class="number">0</span>,ans2=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">			<span class="keyword">if</span>((a[<span class="number">1</span>][j]+a[<span class="number">2</span>][j])%<span class="number">2</span>!=(j&amp;<span class="number">1</span>))ans1++;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">			<span class="keyword">if</span>((a[<span class="number">1</span>][j]+a[<span class="number">2</span>][j])%<span class="number">2</span>!=((j&amp;<span class="number">1</span>)^<span class="number">1</span>))ans2++;</span><br><span class="line">		<span class="built_in">cout</span>&lt;&lt;min(ans1,ans2);</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(<span class="number">1</span>&lt;&lt;<span class="number">3</span>);i++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;(<span class="number">1</span>&lt;&lt;<span class="number">3</span>);j++)</span><br><span class="line">			<span class="keyword">if</span>(check(i,j))</span><br><span class="line">				v[j].push_back(i);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;(<span class="number">1</span>&lt;&lt;<span class="number">3</span>);j++)f[<span class="number">1</span>][j]=work(<span class="number">1</span>,j);<span class="comment">//边界</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=m;i++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;(<span class="number">1</span>&lt;&lt;<span class="number">3</span>);j++)&#123;</span><br><span class="line">			f[i][j]=n*m+<span class="number">1</span>;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">auto</span> k:v[j])&#123;</span><br><span class="line">				f[i][j]=min(f[i][j],f[i<span class="number">-1</span>][k]+work(i,j));</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">int</span> ans=n*m+<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;(<span class="number">1</span>&lt;&lt;<span class="number">3</span>);j++)ans=min(ans,f[m][j]);</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
  </entry>
  <entry>
    <title>题解 CF1391C 【Cyclic Permutations 】</title>
    <url>/2020/08/10/%E9%A2%98%E8%A7%A3-CF1391C-%E3%80%90Cyclic-Permutations-%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/CF1391C" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-cf1391c" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<p>我们考虑什么样的情况没有环。</p>
<p>首先，有一个性质是这样的：对于任意的 $i(i\geq 3)$，如果 $a_i$ 是前 $i$ 个数中的最大数或最小数，就必定没有环。</p>
<p>如果证明呢？我们考虑反证法。</p>
<p>假设对于任意一个 $z(z\geq 3)$ 如果它不是前 $z$ 个数中的最大数或最小数的话，就必定有一个 $x$ 是最小的满足 $a_x<a_z$ 的数，$y$ 是最大满足 $a_y>a_z$ 的数。那么 $x \leftrightarrow z,y \leftrightarrow z$。</p>
<p>下面，我们分情况讨论：</p>
<ul>
<li><p>如果 $x&gt;y$，那么 $y$ 必定为最大的满足 $a_y &gt; a_x$ 的数，因为 $a_y &gt; a_z$ 然后 $a_z &gt; a_x$；</p>
</li>
<li><p>如果 $x&lt;y$，那么 $x$ 必定为最小的满足 $a_x &lt; a_y$ 的数，因为 $a_x &lt; a_z$ 然后 $a_z &lt; a_y$。</p>
</li>
</ul>
<p>证毕。</p>
<p>然后我们考虑这样的序列有多少种，我们这么考虑，第 $n$ 个数可能是 $1\sim n$ 中的最大数或最小数。</p>
<ul>
<li>如果是最大数，那么剩余的数为 $1\sim n-1$；</li>
<li>如果是最小数，那么剩余的数位 $2\sim n$。</li>
</ul>
<p>我们把剩下的数想象成一个双端队列，问题等价于让你求这个队列让你从左边取或右边取，一共有多少种取法。</p>
<p>我们每次可以从左边取或右边取，一共去 $n$ 次，所以答案为 $2^n$。</p>
<p>所以，这题的答案为总的排列数 $n!$ 减去不合法的排列数 $2^n$。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> ll mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="function">ll <span class="title">pw</span><span class="params">(ll x,ll y)</span></span>&#123;</span><br><span class="line">	ll ans=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(y)&#123;</span><br><span class="line">		<span class="keyword">if</span>(y&amp;<span class="number">1</span>)ans=ans*x%mod;</span><br><span class="line">		y&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">		x=x*x%mod;</span><br><span class="line">	&#125;<span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">work</span><span class="params">()</span></span>&#123;</span><br><span class="line">	ll n,ans=<span class="number">1</span>;read(n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)ans=ans*i%mod;</span><br><span class="line">	ans=(ans-pw(<span class="number">2</span>,n<span class="number">-1</span>)+mod)%mod;<span class="comment">//防止负数</span></span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>洛谷题库</category>
        <category>CF</category>
      </categories>
      <tags>
        <tag>数论，数学</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 CF1391B 【Fix You】</title>
    <url>/2020/08/10/%E9%A2%98%E8%A7%A3-CF1391B-%E3%80%90Fix-You%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/CF1391B" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-cf1391B" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<p>题目大概就是在说，对于任意 $(i,j)$ 都有一个标记，如果标记为 $\texttt{D}$ j就是说到了这个格子会往下走，否则就是往右走。现在问你，如果最少要修改多少个格子的标记使得 $i\neq n$ 且 $j\neq m$，就一定能顺着格子的路径走到 $(n,m)$，不会出界。</p>
<p>我们发现一个格子的标记要么是向下走，要么是向右走，因此，不会出左边界和右边界。然后，就只有可能出下边界和右边界了，然后出下边界就一定是最后一行的格子标记为下（除了 $(n,m)$），同理出右边界一定最后一列的格子标记为右（除了 $(n,m)$）。</p>
<p>因此，答案为这些格子的个数。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">work</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n,m;read(n);read(m);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">			<span class="keyword">char</span> ch;<span class="built_in">cin</span>&gt;&gt;ch;</span><br><span class="line">			<span class="keyword">if</span>(ch==<span class="string">'R'</span>)a[i][j]=<span class="number">1</span>;</span><br><span class="line">			<span class="keyword">else</span> a[i][j]=<span class="number">2</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;m;i++)</span><br><span class="line">		<span class="keyword">if</span>(a[n][i]==<span class="number">2</span>)ans++;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">		<span class="keyword">if</span>(a[i][m]==<span class="number">1</span>)ans++;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>洛谷题库</category>
        <category>CF</category>
      </categories>
  </entry>
  <entry>
    <title>题解 CF1391A 【Suborrays】</title>
    <url>/2020/08/10/%E9%A2%98%E8%A7%A3-CF1391A-%E3%80%90Suborrays%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/CF1391A" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-cf1391a" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<p>这道题乍一看无从下手，实际上我们想一想，或运算是只要这 $2$ 个数有一个这个 $2$ 进制位为 $1$，结果的这位二进制为就为 $1$。</p>
<p>所以，我们不难推出这样的式子：$x \text{OR} y \geq x$</p>
<p>我们发现，对于第 $i$ 位为 $i$ 的置换，一定是合法的。</p>
<p>因为 $i \text{OR} j \geq i$ 且 $i \geq i-j+1$，</p>
<p>所以 $i \text{OR} j \geq i-j+1$。</p>
<p>证毕。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">work</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n;read(n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>洛谷题库</category>
        <category>CF</category>
      </categories>
      <tags>
        <tag>数论，数学</tag>
      </tags>
  </entry>
  <entry>
    <title>2020-8-9CF反思</title>
    <url>/2020/08/10/2020-8-9CF%E5%8F%8D%E6%80%9D/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1052" target="_blank" rel="noopener">CSDN同步</a></p>
<a id="more"></a>
<p>这场比赛总体还是可圈可点的，还是正序开题，A题迅速读完，$4$ 分钟A了，创纪录了，是我最快切A的一次。</p>
<p>然后B题读完之后不用想就会了，快速写完，此时只过去了 $10$ 分钟。</p>
<p>C题并不难，推了推就找到了性质，切了，此时过去了 $21$ 分钟。</p>
<p>我又大把的时间冲最后 $2$ 题，于是，我就把 $D$ 题开了，我在 $50$ 分钟的时候过了样例，然后我高高兴兴地去交，结果发现 $\text{WA}$。</p>
<p>我瞎改乱改，一直到比赛快结束时都没有调出来，我有点失去了信心，问了问包某怎么虐场的，然后这时，我突然发现我数组开小了/jk，数据范围 $1\leq n\leq m\leq 10^6$，结果我开了个 $10^5$，把数组开大就过了，此时距离比赛结束仅剩 $4$ 分钟。</p>
<p>比赛结束后发现，其实我的 $D$ 题做出来对我的改变并不大，仅仅只让我多得了 $672$ 分，排名也仅仅提高了 $96$ 名。</p>
<p>关于为什么我 $D$ 题只得了 $672$ 分：我 $\text{WA}$ 了 $8$ 次/kk</p>
]]></content>
      <categories>
        <category>反思</category>
      </categories>
      <tags>
        <tag>反思</tag>
      </tags>
  </entry>
  <entry>
    <title>2020-7-30CF反思</title>
    <url>/2020/07/30/2020-7-30CF%E5%8F%8D%E6%80%9D/</url>
    <content><![CDATA[<p><a href="https://blog.csdn.net/qq_46230164/article/details/107694887" target="_blank" rel="noopener">CSDN同步</a></p>
<a id="more"></a>
<p>CF比赛基本都在深夜，能打的比赛不多，所以每场比赛都要好好总结，学到点东西。昨天 $10:35\sim 00:35$ 打了一场，虽然很累但很高兴还是有所收获的。</p>
<p>我这次比赛比得并不尽如人意，一道英语题面的题我大概要读上 $7 \sim 8$ 分钟才能读懂这道题，而纵观CF的榜，排在前面的那个不是 $5$ 分钟切 $A$ 的？排名榜上 $5$ 分钟以内切 $A$ 的数不胜数，向 $\color{black}{\texttt{j}}\color{red}{\texttt{iangly}}$ 这样的巨佬甚至都是 $1$ 分钟切 $A$。</p>
<p>英语是硬伤，我觉得<a href="http://fanyi.baidu.com" target="_blank" rel="noopener">百度翻译</a>是真的看不懂，我只能逐个单词看过去，词汇量的缺失使我不停的双击单词，让拓展告诉我这个单词什么意思。</p>
<p>虽然英语固然是有所缺失，但其他的缺失也是挺大的。$7\sim8$ 分钟看完题面，比赛时感觉人都慌了，尤其是看到自己 $A$ 完 $A$ 题后排名 $8000+$ 当时真的是急。</p>
<p>$B$ 题的错误是真的不能原谅，刚开始我还算比较正常，推了个 $dp$ 这没有问题，可写了 $7\sim8$ 分钟看到程序样例 $WA$ 掉的时候，愚蠢至极的选择上演了——我选择了删掉这个程序，重新写了 $2$ 个<strong>完全、显然的错误</strong>贪心，等我意识到这一点是这场比赛 $40$ 分钟已经过去，我告诉自己冷静，重新按照第 $1$ 遍思路写了一遍后发现自己终于 $A$ 了。</p>
<p>做完 $B$ 题后我做了 $C$ 题，当时主要是急，发现不少人 $A$ 了 $C$ 时就以为 $C$ 是简单题（事实上是的），结果我鲁莽地 $WA$ 了 $2$ 把，第 $3$ 次才过。</p>
<p>留给我做 $D$ 的时间不多了，到比赛结束我也没能做出 $D$。</p>
<p>$\color{black}{\texttt{E}}\color{red}{\texttt{ven_bao}}$ 这场比赛 $A$ 了 $A$、$B$、$C$、$E$，比我多 $A$ 一道 $E$，赛后发现 $E$ 比 $D$ 简单。</p>
<p>以后打 $codeforces$ 要做的：</p>
<ol>
<li>在任何时候保持冷静的头脑；</li>
</ol>
<ul>
<li>不要受别人的干扰，不要看排名，专心做自己的题；</li>
<li>多多做题，多多积累英文单词。</li>
</ul>
]]></content>
      <categories>
        <category>反思</category>
      </categories>
      <tags>
        <tag>反思</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 CF1389C 【Good String】</title>
    <url>/2020/07/30/%E9%A2%98%E8%A7%A3-CF1389C-%E3%80%90Good-String%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/CF1389C" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-cf1389C" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<p>简要题意：</p>
<blockquote>
<p>对于一个字符串 $t_1,t_2,\cdots,t_n$，</p>
<p>我们定义它的右移为 $t_n,t_1,\cdots,t_{n-1}$；</p>
<p>我们定义它的左移为 $t_2,t_3,\cdots,t_{1}$。</p>
<p>现在请问对于给出的一个字符串，最少删掉多少个字符才能是这个字符串的左移和右移完全相同？</p>
</blockquote>
<p>我们来分析一下性质，比较一下右移和左移</p>
<p>右移：$t_n,t_1,\cdots,t_{n-1}$</p>
<p>左移：$t_2,t_3,\cdots,t_{1}$</p>
<p>要使这 $2$ 个东西相同就必须使得 $t_2=t_n,t_1=t_3,\cdots,t_{n-1}=t_1$</p>
<p>我们举个具体的例子，假设 $n=8$。</p>
<p>右移：$t_8,t_1,t_2,t_3,t_4,t_5,t_6,t_7$</p>
<p>左移：$t_2,t_3,t_4,t_5,t_6,t_7,t_8,t_1$</p>
<p>显然，$t_2=t_4=t_6=t_8$，$t_1=t_3=t_5=t_7$。</p>
<p>可以证明当 $n$ 为偶数时，这个字符串的循环节必须为 $2$。</p>
<p>我再来试试 $n=7$。</p>
<p>右移：$t_7,t_1,t_2,t_3,t_4,t_5,t_6$</p>
<p>左移：$t_2,t_3,t_4,t_5,t_6,t_7,t_1$</p>
<p>显然，$t_1=t_3=t_5=t_7=t_2=t_4=t_6$\</p>
<p>可以证明当 $n$ 为奇数时，这个字符串的循环节必须为 $1$。</p>
<p>这 $2$ 个东西笔者都试着证明了一下，有些麻烦，这里就不放了。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Problem: C. Good String</span></span><br><span class="line"><span class="comment">// Contest: Codeforces - Educational Codeforces Round 92 (Rated for Div. 2)</span></span><br><span class="line"><span class="comment">// URL: https://codeforc.es/contest/1389/problem/C</span></span><br><span class="line"><span class="comment">// Memory Limit: 256 MB</span></span><br><span class="line"><span class="comment">// Time Limit: 2000 ms</span></span><br><span class="line"><span class="comment">// Powered by CP Editor (https://github.com/cpeditor/cpeditor)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">2e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> s[<span class="number">11</span>][<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">work</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">memset</span>(s,<span class="number">0</span>,<span class="keyword">sizeof</span>(s));</span><br><span class="line">	<span class="built_in">string</span> st;<span class="built_in">cin</span>&gt;&gt;st;</span><br><span class="line">	<span class="keyword">int</span> n=st.size(),ans=n;</span><br><span class="line">	st=<span class="string">' '</span>+st;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">9</span>;i++)&#123;</span><br><span class="line">		<span class="keyword">int</span> s=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">			<span class="keyword">if</span>(st[j]!=<span class="keyword">char</span>(i+<span class="number">48</span>))s++;</span><br><span class="line">		ans=min(ans,s);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">9</span>;i++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=<span class="number">9</span>;j++)&#123;</span><br><span class="line">			<span class="keyword">int</span> s=<span class="number">0</span>;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=n;k++)&#123;</span><br><span class="line">				<span class="keyword">if</span>(s%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">					<span class="keyword">if</span>(st[k]==<span class="keyword">char</span>(i+<span class="number">48</span>))s++;</span><br><span class="line">				&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">					<span class="keyword">if</span>(st[k]==<span class="keyword">char</span>(j+<span class="number">48</span>))s++;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(s%<span class="number">2</span>==<span class="number">1</span>)s--;</span><br><span class="line">			ans=min(ans,n-s);</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> T;read(T);</span><br><span class="line">	<span class="keyword">while</span>(T--)&#123;</span><br><span class="line">		<span class="comment">//memset</span></span><br><span class="line">		work();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>洛谷题库</category>
        <category>CF</category>
      </categories>
  </entry>
  <entry>
    <title>题解 P6201 【[USACO07OPEN]Fliptile S】</title>
    <url>/2020/07/20/%E9%A2%98%E8%A7%A3-P6201-%E3%80%90-USACO07OPEN-Fliptile-S%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P6201" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p6201" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<h2 id="讲讲我的做法"><a href="#讲讲我的做法" class="headerlink" title="讲讲我的做法"></a>讲讲我的做法</h2><p>刚开始做这道题的时候，看到 $n&lt;=15$，我这个 $6$ 年级的蒟蒻的第1反应是状压 $dp$。貌似不好做。然而，等到我在省中集训的时候，老师的一席话，让我豁然开朗。今天我准备来分享一下。<br><strong>老师的话是：除了第1行，其他格子要不要翻是由上一行决定的。</strong><br>听到这里，我想应该跟那时的我一样——豁然开朗了。</p>
<p>用 $dfs$ 或用二进制来枚举第1行要不要翻（推荐用 $dfs$，不容易 $WA$，并且时间充裕的很），然后去模拟后面的格子，最后再看最后一行是否全好了。</p>
<p>我们先来看看 $dfs$ 该怎么写</p>
<p>$code$：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(x==m+<span class="number">1</span>)&#123;</span><br><span class="line">		check();<span class="comment">//打擂法</span></span><br><span class="line">		<span class="keyword">return</span>;<span class="comment">//不要再做下去了，已经是终点了</span></span><br><span class="line">	&#125;</span><br><span class="line">	f[x]=<span class="number">0</span>;<span class="comment">//先试0的情况</span></span><br><span class="line">	dfs(x+<span class="number">1</span>);<span class="comment">//递归下去</span></span><br><span class="line">	f[x]=<span class="number">1</span>;<span class="comment">//再试1的情况</span></span><br><span class="line">	dfs(x+<span class="number">1</span>);<span class="comment">//递归下去</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>我也放一下二进制的代码吧<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(<span class="number">1</span>&lt;&lt;m);i++)&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m;j++)f[j+<span class="number">1</span>]=(i&gt;&gt;j)&amp;<span class="number">1</span>;</span><br><span class="line">	check();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>大家发现我这个 $check$ 竟然没有用$bool$，是因为我们第 $1$ 次找到的答案不一定就是最优解，最终的答案我们是通过打擂法求出来的。</p>
<p>给大家看一看 $check$ 函数的实现过程</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">	c[x][y]=<span class="number">1</span>-c[x][y];</span><br><span class="line">	c[x<span class="number">-1</span>][y]=<span class="number">1</span>-c[x<span class="number">-1</span>][y];</span><br><span class="line">	c[x+<span class="number">1</span>][y]=<span class="number">1</span>-c[x+<span class="number">1</span>][y];</span><br><span class="line">	c[x][y<span class="number">-1</span>]=<span class="number">1</span>-c[x][y<span class="number">-1</span>];</span><br><span class="line">	c[x][y+<span class="number">1</span>]=<span class="number">1</span>-c[x][y+<span class="number">1</span>];</span><br><span class="line">&#125;<span class="comment">//这里为了方便写了个函数来模拟翻格子</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">check</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(b,<span class="number">0</span>,<span class="keyword">sizeof</span>(b));</span><br><span class="line">    <span class="keyword">int</span> s=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            c[i][j]=a[i][j];<span class="comment">//初始化</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">        <span class="keyword">if</span>(f[i])&#123;</span><br><span class="line">            work(<span class="number">1</span>,i);<span class="comment">//模拟出第一行的反转情况</span></span><br><span class="line">            b[<span class="number">1</span>][i]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            <span class="keyword">if</span>(c[i<span class="number">-1</span>][j])b[i][j]=<span class="number">1</span>,work(i,j);<span class="comment">//跟据老师的那句话，去模拟</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">        <span class="keyword">if</span>(c[n][i])<span class="keyword">return</span>;<span class="comment">//如果是1直接结束</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            <span class="keyword">if</span>(b[i][j]==<span class="number">1</span>)s++;<span class="comment">//计算值</span></span><br><span class="line">    <span class="keyword">if</span>(s&lt;ans)&#123;<span class="comment">//打擂</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">                d[i][j]=b[i][j];</span><br><span class="line">        ans=s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>应该没有什么问题</p>
<p>我们来看一看完整的代码吧</p>
<p>$dfs:$<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> s=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f*=<span class="number">-1</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))s=(s&lt;&lt;<span class="number">1</span>)+(s&lt;&lt;<span class="number">3</span>)+(ch^<span class="number">48</span>),ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> s*f;</span><br><span class="line">&#125;<span class="comment">//快读</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">25</span>][<span class="number">25</span>],f[<span class="number">25</span>],n,m,b[<span class="number">25</span>][<span class="number">25</span>],c[<span class="number">25</span>][<span class="number">25</span>],ans=INT_MAX,d[<span class="number">25</span>][<span class="number">25</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">	c[x][y]=<span class="number">1</span>-c[x][y];</span><br><span class="line">	c[x<span class="number">-1</span>][y]=<span class="number">1</span>-c[x<span class="number">-1</span>][y];</span><br><span class="line">	c[x+<span class="number">1</span>][y]=<span class="number">1</span>-c[x+<span class="number">1</span>][y];</span><br><span class="line">	c[x][y<span class="number">-1</span>]=<span class="number">1</span>-c[x][y<span class="number">-1</span>];</span><br><span class="line">	c[x][y+<span class="number">1</span>]=<span class="number">1</span>-c[x][y+<span class="number">1</span>];</span><br><span class="line">&#125;<span class="comment">//这里为了方便写了个函数来模拟翻格子</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">check</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(b,<span class="number">0</span>,<span class="keyword">sizeof</span>(b));</span><br><span class="line">    <span class="keyword">int</span> s=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            c[i][j]=a[i][j];<span class="comment">//初始化</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">        <span class="keyword">if</span>(f[i])&#123;</span><br><span class="line">            work(<span class="number">1</span>,i);<span class="comment">//模拟出第一行的反转情况</span></span><br><span class="line">            b[<span class="number">1</span>][i]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            <span class="keyword">if</span>(c[i<span class="number">-1</span>][j])b[i][j]=<span class="number">1</span>,work(i,j);<span class="comment">//跟据老师的那句话，去模拟</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">        <span class="keyword">if</span>(c[n][i])<span class="keyword">return</span>;<span class="comment">//如果是1直接结束</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            <span class="keyword">if</span>(b[i][j]==<span class="number">1</span>)s++;<span class="comment">//计算值</span></span><br><span class="line">    <span class="keyword">if</span>(s&lt;ans)&#123;<span class="comment">//打擂</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">                d[i][j]=b[i][j];<span class="comment">//更新值</span></span><br><span class="line">        ans=s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x==m+<span class="number">1</span>)&#123;</span><br><span class="line">        check();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    f[x]=<span class="number">0</span>;</span><br><span class="line">    dfs(x+<span class="number">1</span>);</span><br><span class="line">    f[x]=<span class="number">1</span>;</span><br><span class="line">    dfs(x+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    n=read(),m=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            a[i][j]=read();<span class="comment">//读入</span></span><br><span class="line">    dfs(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(ans==INT_MAX)<span class="built_in">puts</span>(<span class="string">"IMPOSSIBLE"</span>);</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)<span class="built_in">cout</span>&lt;&lt;d[i][j]&lt;&lt;<span class="string">' '</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>二进制：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> s=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f*=<span class="number">-1</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))s=(s&lt;&lt;<span class="number">1</span>)+(s&lt;&lt;<span class="number">3</span>)+(ch^<span class="number">48</span>),ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> s*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">	<span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">25</span>][<span class="number">25</span>],f[<span class="number">25</span>],n,m,b[<span class="number">25</span>][<span class="number">25</span>],c[<span class="number">25</span>][<span class="number">25</span>],ans=INT_MAX,d[<span class="number">25</span>][<span class="number">25</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    c[x][y]=<span class="number">1</span>-c[x][y];</span><br><span class="line">    c[x<span class="number">-1</span>][y]=<span class="number">1</span>-c[x<span class="number">-1</span>][y];</span><br><span class="line">    c[x+<span class="number">1</span>][y]=<span class="number">1</span>-c[x+<span class="number">1</span>][y];</span><br><span class="line">    c[x][y<span class="number">-1</span>]=<span class="number">1</span>-c[x][y<span class="number">-1</span>];</span><br><span class="line">    c[x][y+<span class="number">1</span>]=<span class="number">1</span>-c[x][y+<span class="number">1</span>];</span><br><span class="line">&#125;<span class="comment">//这里为了方便写了个函数来模拟翻格子</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">check</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(b,<span class="number">0</span>,<span class="keyword">sizeof</span>(b));</span><br><span class="line">    <span class="keyword">int</span> s=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            c[i][j]=a[i][j];<span class="comment">//初始化</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">        <span class="keyword">if</span>(f[i])&#123;</span><br><span class="line">            work(<span class="number">1</span>,i);<span class="comment">//模拟出第一行的反转情况</span></span><br><span class="line">            b[<span class="number">1</span>][i]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            <span class="keyword">if</span>(c[i<span class="number">-1</span>][j])b[i][j]=<span class="number">1</span>,work(i,j);<span class="comment">//跟据老师的那句话，去模拟</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">        <span class="keyword">if</span>(c[n][i])<span class="keyword">return</span>;<span class="comment">//如果是1直接结束</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            <span class="keyword">if</span>(b[i][j]==<span class="number">1</span>)s++;<span class="comment">//计算值</span></span><br><span class="line">    <span class="keyword">if</span>(s&lt;ans)&#123;<span class="comment">//打擂</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">                d[i][j]=b[i][j];</span><br><span class="line">        ans=s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	n=read(),m=read();</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">			a[i][j]=read();</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(<span class="number">1</span>&lt;&lt;m);i++)&#123;</span><br><span class="line">	    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m;j++)f[j+<span class="number">1</span>]=(i&gt;&gt;j)&amp;<span class="number">1</span>;</span><br><span class="line">	    check();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(ans==INT_MAX)<span class="built_in">puts</span>(<span class="string">"IMPOSSIBLE"</span>);</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)<span class="built_in">cout</span>&lt;&lt;d[i][j]&lt;&lt;<span class="string">' '</span>;</span><br><span class="line">			<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>衷心感谢省中集训的那位老师<del>让我AC了一道蓝题</del>。。</p>
<p>如果我的这篇题解对你有所帮助请点个赞，谢谢。。</p>
<p>有任何问题，请评论或私信我这个$6$年级的蒟蒻，谢谢。</p>
]]></content>
      <categories>
        <category>洛谷题库</category>
        <category>usaco</category>
      </categories>
      <tags>
        <tag>搜索</tag>
        <tag>状压</tag>
      </tags>
  </entry>
  <entry>
    <title>毕业考试游记</title>
    <url>/2020/07/11/%E6%AF%95%E4%B8%9A%E8%80%83%E8%AF%95%E6%B8%B8%E8%AE%B0/</url>
    <content><![CDATA[<p><a href="https://blog.csdn.net/qq_46230164/article/details/107280154" target="_blank" rel="noopener">CSDN同步</a></p>
<a id="more"></a>
<p>咕了好几天了，今天打算来写这篇文章，也算是忙里偷闲吧。</p>
<h1 id="Day"><a href="#Day" class="headerlink" title="$Day -?$"></a>$Day -?$</h1><p>丝毫没有感觉到毕业考的压力，一方面是因为只公布等第，另外一方面是我小升初确乎是凉凉了。</p>
<h1 id="Day-0"><a href="#Day-0" class="headerlink" title="$Day 0$"></a>$Day 0$</h1><p>去考场演习，然后走时凳子没塞，被老师教育了，好不开心。</p>
<p><del>小学，果然是你。</del></p>
<p>老师扯了些话，然后感觉有点吓人。。。</p>
<p>据说 $30$ 年后，我们可以会母校觅小看我们的毕业考卷和其他材料，我似乎还有点高兴。</p>
<p>回家问妈妈，她有没有回她小学看过，回答：“我们小学已经变成了现在的武进吾悦。”</p>
<p>回家问妈妈，她有没有回她中学看过，回答：“我们中学已经变成了现在的一所小学。”</p>
<p>回家问妈妈，她回没有会她高学看过，回答：“我们高学已经搬迁了，搬到了西太湖。”</p>
<p>然后我有点绝望，是啊，$30$ 年后的觅小说不定都没了呢。$CZ$ 市中心学校密度确实很大，觅小周边就有局小、博小这些在常州市的好小学。可人家的学校都建得很大呢，教学楼也很漂亮，再看看觅小，确乎有些寒酸。觅小是挺小的，占地大约 $8900$ 多平方米，可一个年级 $13 \sim 14$ 个班呢，据说新一届的一年级 $18$ 个班呢。觅小前面是秋白纪念馆——国家级保护的，左边、右边和后面是狭窄到不能再狭窄的马路，与觅小隔马路对面的就是高耸入云的小区。觅小不能扩建，许多年后，恐怕也难逃拆或迁的命运，就像门前的那几棵大树一样……</p>
<p><del>说了这么多，显示出考前我一点都不紧张</del></p>
<p>$8:30$ 就睡了，很快就睡着了。</p>
<p>RP++</p>
<h1 id="Day-1"><a href="#Day-1" class="headerlink" title="$Day 1$"></a>$Day 1$</h1><p>考试开始了，数学顺利做；英语顺利做；语文顺利做。没了，这么说的目的是因为考试并没有想像中的可怕。</p>
<h2 id="数学"><a href="#数学" class="headerlink" title="数学"></a>数学</h2><p>阅卷是发现大概是眼睫毛上面有几根毛线，然后影响阅读。我怎么柔眼睛都无济于事，尝试放弃，所以说脸还是要认真洗。</p>
<p>基本上没什么坑，考完抓紧对答案，因为对答案被英语老师看到就惨了。回教室的路上都在对答案，一直对到快回到教室。然后发现我好像没错，带着压力考这场试的谢某宸<sup><a href="#fn_1" id="reffn_1">1</a></sup>已经扣了 $3$ 分（不过他还是稳了的呢CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCOrz）</p>
<h2 id="英语"><a href="#英语" class="headerlink" title="英语"></a>英语</h2><p>数学考完上了厕所，英语考完又去上了厕所，然后毒瘤的英语老师就【数据删除】。</p>
<p>英语比平时考卷简单了不少，判断题有点难，还有点模棱两可，但是我还是全对的，开心！</p>
<h2 id="语文"><a href="#语文" class="headerlink" title="语文"></a>语文</h2><p>语文算是比较恶心的一门吧，作文实属恐怖——《相遇》。</p>
<p>然后，我就举了个我写了 $n$ 遍的例子，然后将上了抒情，将以毕业来讲的，记得好像读过一篇作文，结尾好像是这样写的：我们在相遇中长大，在离别中成长。貌似跟这个题目联系密切，然后直接放了上去。</p>
<p>处考场就慌了，旁边的奚某辰开始装<del>弱</del>：“完了，又写成半叙半散了。”不是同一个境界的。。。众人惊呼：膜拜大佬！</p>
<h1 id="Day-2"><a href="#Day-2" class="headerlink" title="$Day 2$"></a>$Day 2$</h1><p>考完结束了，开始happy。只不过从考后的第 $2$ 天就开始忙碌了。</p>
<p>这个考试我也没什么压力，反正我保送同济<sup><a href="#fn_2" id="reffn_2">2</a></sup>。</p>
<hr>
<script type="math/tex; mode=display">End</script><blockquote id="fn_1">
<sup>1</sup>. 他考到 $290$ 分就能进清潭教改班。<a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_2">
<sup>2</sup>. 我家学区同济中学。<a href="#reffn_2" title="Jump back to footnote [2] in the text."> &#8617;</a>
</blockquote>
]]></content>
      <categories>
        <category>游记</category>
      </categories>
      <tags>
        <tag>游记</tag>
      </tags>
  </entry>
  <entry>
    <title>启智树游记&amp;题解——逆境中的奇迹</title>
    <url>/2020/06/26/post%E5%90%AF%E6%99%BA%E6%A0%91%E6%B8%B8%E8%AE%B0-%E9%A2%98%E8%A7%A3%E2%80%94%E2%80%94%E9%80%86%E5%A2%83%E4%B8%AD%E7%9A%84%E5%A5%87%E8%BF%B9/</url>
    <content><![CDATA[<p><a href="https://blog.csdn.net/qq_46230164/article/details/106963322" target="_blank" rel="noopener">CSDN同步</a></p>
<a id="more"></a>
<p>首先是 <a href="https://www.qizhishu.com/" target="_blank" rel="noopener">广告</a> （启智树官网）</p>
<p>诶，炸了就得自己承担，吸取经验下次不要再犯才是最重要的（自我安慰。。。）</p>
<h1 id="Day"><a href="#Day" class="headerlink" title="$Day -?$"></a>$Day -?$</h1><p>得知了有这场比赛，名肯定是要报的，但是真的有点不情愿——这场比赛主要是小学生的，所以，对于我来说不拿第 $1$ ，第 $2$ 显然是说不过去。。。</p>
<p>但愿不会出意外吧……</p>
<h1 id="Day-1"><a href="#Day-1" class="headerlink" title="$Day -1$"></a>$Day -1$</h1><p>知道了规则，感觉挺意外的——还要开摄像头和麦克风。当然，这是好事，不让某某某这样的同学误入作弊的歧途</p>
<h1 id="Day-0"><a href="#Day-0" class="headerlink" title="$Day 0$"></a>$Day 0$</h1><p>作业多多多，睡前都在做作业，怕不好明天考试还会去做作业（<del>直播写作业我怕不是要翻车，原形毕露了</del>~</p>
<h1 id="Day-1-1"><a href="#Day-1-1" class="headerlink" title="$Day 1$"></a>$Day 1$</h1><p>可惜出题人没给我留下机会/kk</p>
<h2 id="T-1"><a href="#T-1" class="headerlink" title="$T_1$"></a>$T_1$</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><blockquote>
<p>2020年春节，新型冠状病毒(后文简称新冠病毒)肆虐，居民必须佩戴口罩方能出门，一时之间口罩成为紧缺物资，各地政府为了避免出现哄抢现象，纷纷出台各种措施，限制购买口罩的数量。淘淘所在社区就规定必须持身份证到指定药房排队购买一次性口罩，并且每户每天只能派出一人购买，每次限购k(k&gt;1)只。每次出门采购一次性口罩，将消耗家里原有一次性口罩1只。由于药房每天能够供应的一次性口罩是有限的，并不能保证排队的人都能买到，也就是说买到了就赚到k-1只，买不到就亏1只。已知淘淘家里原有一次性口罩n只，出门若干次之后，家里的一次性口罩变成了t只，请问淘淘至少出门了几次？</p>
</blockquote>
<h3 id="做法-amp-想法"><a href="#做法-amp-想法" class="headerlink" title="做法&amp;想法"></a>做法&amp;想法</h3><p>做得挺顺利，应该不大会翻车。</p>
<p>我们显然有个贪心，显然有一种策略——我们绝对不会先去赚 $k-1$ 只，在去亏 $k-1$ 只，因为题目求的是最少出门次数。</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n,t,k,ans=<span class="number">0</span>;read(n);read(k);read(t);k--;</span><br><span class="line">	<span class="keyword">if</span>(n&gt;=t)<span class="keyword">return</span> <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,n-t),<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> x=t-n;</span><br><span class="line">	<span class="keyword">if</span>(x%k==<span class="number">0</span>)ans+=x/k;</span><br><span class="line">	<span class="keyword">else</span> ans+=x/k+<span class="number">1</span>;</span><br><span class="line">	n+=ans*k;</span><br><span class="line">	ans+=n-t;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="T-2"><a href="#T-2" class="headerlink" title="$T_2$"></a>$T_2$</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><blockquote>
<p>新冠病毒把每个人的生活节奏都打乱了，搞得大家都不能出门，更别提上幼儿园了，可把淘淘的小妹妹蓝蓝憋坏了，小家伙在家老是缠着妈妈讲故事，每当此时妈妈会讲一些“从前有座山，山里有座庙，庙里有个老和尚给小和尚讲故事，讲的什么呢？从前有座山……”这样循环的故事，一直讲到蓝蓝睡着或不想听为止。元宵节过后妈妈要上班了，为了满足蓝蓝听妈妈讲故事的需求，妈妈要淘淘把她讲的故事录音后用复读机循环播放给蓝蓝听，淘淘觉得整个故事有点长，全录下来没有必要，如果一个故事本身是周期性的，那么只要找出它的最小周期，将开头一段长度等于最小周期的内容录下来用复读机循环播放就行了。如故事内容为“abcabcabcabc”，它的最小周期长度为3，内容为“abc”，只需将“abc”录下来循环播放就行了。淘淘很忙，他把这个任务交给了你，要求写一个程序，找出一个字符串的最小周期的长度。</p>
</blockquote>
<h3 id="做法-amp-想法-1"><a href="#做法-amp-想法-1" class="headerlink" title="做法&amp;想法"></a>做法&amp;想法</h3><p>我们可以枚举答案，然后 $O(n)$ 判断（最坏情况）</p>
<p>显然是个枚举的方法，感觉跑不满，应该还行吧。</p>
<p>中间题目改了！差评！！！</p>
<p>由于之前的输入格式没有字符个数 $n$，所以我是直接 </p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,ch);</span><br><span class="line">n=<span class="built_in">strlen</span>(ch);</span><br></pre></td></tr></table></figure>
<p>结果，读入 $n$ 后，我的代码就变成了</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">read(n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">cin</span>&gt;&gt;ch[i];</span><br></pre></td></tr></table></figure>
<p>可以注意到，最开始是从 $0$ 开始编号的写法，后一种是从 $1$ 开始编号的写法，结果我以为没问题，改了之后样例都不测就交了（这个行为可以说是愚蠢至极！哎~）</p>
<h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">char</span> ch[<span class="number">100010</span>];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=x;i&lt;n;i++)</span><br><span class="line">		<span class="keyword">if</span>(ch[i]!=ch[i%x])<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	read(n);<span class="built_in">scanf</span>(<span class="string">"%s"</span>,ch);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">		<span class="keyword">if</span>(check(i))&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,i);</span><br><span class="line">			<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;n;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="T-3"><a href="#T-3" class="headerlink" title="$T_3$"></a>$T_3$</h2><h3 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h3><blockquote>
<p>处理完复读机的事，淘淘正想放松一下，口袋里的手机响了，接通后传来了青少年科技中心可人老师的亲切声音，可人老师要求淘淘出一道既能测出选手智力同时又不超出小学数学知识范围的题，这让淘淘犯难了，出什么好呢？淘淘在脑海中将历年的NOIP复赛题想了一遍，突然灵机一动，想到了Hankson的趣味题，淘淘觉得可以将它简化改编一下，变成一道考验小学生的智力问题，改编后的问题如下：给你两个正整数X和Z，其中Z一定是X的倍数，要你求出满足下列两个条件的正整数Y</p>
<ul>
<li>条件1：Z是X和Y的最小公倍数</li>
<li>条件2：在满足条件1的前提下要求Y最小</li>
</ul>
<p>淘淘考虑到小朋友们能来参加本次比赛都不容易，每个人都是各区的精锐之师，因此他在设计测试数据时手下留情了，使得每个小朋友都有大把的分数可拿，当然了，越是聪明的小朋友能拿的分越多！</p>
</blockquote>
<h3 id="做法-amp-想法-2"><a href="#做法-amp-想法-2" class="headerlink" title="做法&amp;想法"></a>做法&amp;想法</h3><p>PS：这题折腾了半个多小时，有难度的。</p>
<p>首先，我们将 $X$、$Y$ 和 $Z$ 用数论的形式表示一下。</p>
<script type="math/tex; mode=display">X=\prod\limits_{p_i\in prime}p_i^{a_i}</script><script type="math/tex; mode=display">Y=\prod\limits_{p_i\in prime}p_i^{b_i}</script><script type="math/tex; mode=display">Z=\prod\limits_{p_i\in prime}p_i^{\max(a_i,b_i)}</script><p>那么， $Z\div X$ 就等于</p>
<script type="math/tex; mode=display">\prod\limits_{p_i\in prime}p_i^{f(a_i,b_i)\times (b_i-a_i)}</script><p>其中，$f$ 函数的定义如下：</p>
<p>当 $f(x,y)$ 中，$x&gt;y$ 时，$f(x,y)$ 为 $0$；反之 $x \leq y$ 时，$f(x,y)$ 为 $1$。</p>
<p><strong>因为我们要 $Y$ 尽量小，所以，当 $a_i\geq b_i$ 时，我们需要让 $b_i=0$</strong></p>
<p>所以，$Y$ 就等于</p>
<script type="math/tex; mode=display">\prod\limits_{p_i\in prime}p_i^{k(b_i,\max(a_i,b_i))\times (b_i-a_i)}</script><p>其中，$k$ 函数的定义如下：</p>
<p>当 $k(x,y)$ 中，$x=y$ 时，$k(x,y)$ 为 $1$；反之 $x \neq y$ 时，$k(x,y)$ 为 $0$。</p>
<p>我们考虑实际意义，上述式子 $Z\div X$ 就是 $Y$ 比 $X$ 多的因子。</p>
<p>举个例子：$X=24,Z=360$</p>
<p>$Z\div X=360\div 24=15=3^1\times 5^1$</p>
<p>$X=24=2^3\times 3^1=2^3\times 3^1\times 5^0$</p>
<p>所以 $Y=3^{1+1}\times 5^{0+1}=3^2\times 5^1=45$</p>
<p>当然，$b_i-a_i$ 并不一定 $&gt;$ $a_i$，所以，我们要用 $while$ 来搞。</p>
<h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll x,ll y)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(x%y==<span class="number">0</span>)<span class="keyword">return</span> y;</span><br><span class="line">	<span class="keyword">return</span> gcd(y,x%y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	ll x,y,z;read(x);read(z);</span><br><span class="line">	y=z/x;</span><br><span class="line">	<span class="keyword">while</span>(gcd(x,y)!=<span class="number">1</span>)&#123;</span><br><span class="line">		<span class="keyword">int</span> a=gcd(x,y);</span><br><span class="line">		y*=a;x/=a;</span><br><span class="line">	&#125;<span class="built_in">cout</span>&lt;&lt;y;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="T-4"><a href="#T-4" class="headerlink" title="$T_4$"></a>$T_4$</h2><h3 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h3><blockquote>
<p>2022世界杯马上就要开始了，经过一番激烈角逐，全球32支球队获得了出线资格。世界杯的比赛分为两个阶段，分别为小组赛阶段和淘汰赛阶段，在小组赛阶段32支球队将分成8个小组，每个小组<strong>4支球队进行循环比赛，即每两支球队比赛一次</strong>，每支球队会进行3场比赛，胜得3分，平得1分，输得0分。陶陶和蓝蓝都是足球迷，蓝蓝预测了几次2022世界杯小组赛各个队伍的得分，陶陶想知道这些得分情况是否可能出现？</p>
</blockquote>
<h3 id="做法-amp-想法-3"><a href="#做法-amp-想法-3" class="headerlink" title="做法&amp;想法"></a>做法&amp;想法</h3><p>我们可以穷举出所有可能的结果，打表。</p>
<h3 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h3><p>代码就不放了</p>
<h2 id="T-5"><a href="#T-5" class="headerlink" title="$T_5$"></a>$T_5$</h2><h3 id="题目描述-4"><a href="#题目描述-4" class="headerlink" title="题目描述"></a>题目描述</h3><blockquote>
<p>淘淘和蓝蓝在星际旅行时来到了瓦尔登星，他们们遇到了这里的原住精灵，意外地发现他们喜欢吃桃子，于是决定将飞船里的桃子分给他们一些。<br>    精灵一共有N只，编号为1到N，第i只精灵需要吃Ai个桃子。现在每只精灵会按1到N的顺序领取桃子，每只精灵可选择淘淘和蓝蓝中的一个人，并向他讨要桃子。但精灵们也会有情绪，假设前面和自己选了同一个人的精灵讨要到的桃子的最大个数是x&#44;如果x大于自己的需求Ai&#44;那么这个精灵会产生x-Ai的不开心值；如果x不大于自己的需求Ai&#44;那么这个精灵不会产生不开心值。<br>    淘淘和蓝蓝想让所有精灵的不开心值总和最小，他们想问你这个总和的最小值是多少？</p>
</blockquote>
<h3 id="做法-amp-想法-4"><a href="#做法-amp-想法-4" class="headerlink" title="做法&amp;想法"></a>做法&amp;想法</h3><p>我们可以枚举全排列</p>
<h3 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h3><p>我代码还是需要放一下，这个是枚举 $0/1$ 的全排列，我们可以使用<strong>二进制</strong>的方法，就像状压 $dp$。</p>
<p>我认为这种写法比较稳，不会出现爆栈之类的情况。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,a[<span class="number">100010</span>],v1,v2,ans=INT_MAX;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	read(n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)read(a[i]);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(<span class="number">1</span>&lt;&lt;n);i++)&#123;</span><br><span class="line">		v1=<span class="number">0</span>;v2=<span class="number">0</span>;<span class="keyword">int</span> s=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">			<span class="keyword">if</span>(i&amp;(<span class="number">1</span>&lt;&lt;(j<span class="number">-1</span>)))&#123;</span><br><span class="line">				v1=max(v1,a[j]);</span><br><span class="line">				<span class="keyword">if</span>(v1!=a[j])s+=v1-a[j];</span><br><span class="line">			&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">				v2=max(v2,a[j]);</span><br><span class="line">				<span class="keyword">if</span>(v2!=a[j])s+=v2-a[j];</span><br><span class="line">			&#125;</span><br><span class="line">		ans=min(ans,s);</span><br><span class="line">	&#125;<span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>当然 $dfs$ 也是可以的。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,a[<span class="number">100010</span>],v1,v2,ans=INT_MAX,f[<span class="number">100010</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(x==n+<span class="number">1</span>)&#123;</span><br><span class="line">		v1=<span class="number">0</span>;v2=<span class="number">0</span>;<span class="keyword">int</span> s=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">			<span class="keyword">if</span>(f[i]==<span class="number">0</span>)&#123;</span><br><span class="line">				v1=max(v1,a[i]);</span><br><span class="line">				<span class="keyword">if</span>(v1!=a[i])s+=v1-a[i];</span><br><span class="line">			&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">				v2=max(v2,a[i]);</span><br><span class="line">				<span class="keyword">if</span>(v2!=a[i])s+=v2-a[i];</span><br><span class="line">			&#125;</span><br><span class="line">		ans=min(s,ans);</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	f[x]=<span class="number">0</span>;dfs(x+<span class="number">1</span>);</span><br><span class="line">    f[x]=<span class="number">1</span>;dfs(x+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    read(n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)read(a[i]);</span><br><span class="line">	dfs(<span class="number">1</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>有一说一，$2$ 种写法的代码相似度还是很高的。</p>
<h2 id="T-6"><a href="#T-6" class="headerlink" title="$T_6$"></a>$T_6$</h2><h3 id="题目描述-5"><a href="#题目描述-5" class="headerlink" title="题目描述"></a>题目描述</h3><blockquote>
<p>淘淘来到了一座城市，&nbsp;这座城市有N个景点，共有N - 1条道路连接着彼此，每个景点到另外一个景点有且仅有一条通路，并且一些道路正在维修，是无法经过的。淘淘开始时可以在任意一个景点，他决定在接下来的K-1天中，每天从当前所在的景点不经过正在维修的道路前往另一个景点<span>(他也可以选择逗留在原来的景点，也可以去别的景点，并且不限于相邻的景点，详见样例2解释)&nbsp;</span>，淘淘希望你求出有多少种不同的旅行方案。<br>    方案数可能很大，因此他要求你求出答案对20200621取模的结果，也就是说，如果你求出了答案Ans&#44;请输出Ans % 20200621。</p>
</blockquote>
<h3 id="做法-amp-想法-5"><a href="#做法-amp-想法-5" class="headerlink" title="做法&amp;想法"></a>做法&amp;想法</h3><p>首先是 $80$ 分的做法，我们考虑 $dp$。</p>
<p>$f_{i,j}$ 表示第 $j$ 天到底第 $i$ 个点的方案数，我们还可以使用滚的数组，来滚动掉。</p>
<p>我们发现，这个题目需要我们维护连通块，自然考虑并查集。</p>
<p>我们可以发现，由于每天可以走许多路，所以，$f_{i,j}=size(i)^{j-1}$</p>
<p>其中，$size$ 函数的定义如下：</p>
<p>$size(x)$ 表示 $x$ 所在的连通块节点个数。</p>
<h3 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h3><p>$80pts$</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD=<span class="number">20200621</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;v[<span class="number">100010</span>];</span><br><span class="line">ll n,k,f[<span class="number">100010</span>][<span class="number">2</span>],fa[<span class="number">100010</span>],ans;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(fa[x]==x)<span class="keyword">return</span> x;</span><br><span class="line">	<span class="keyword">return</span> fa[x]=find(fa[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	read(n);read(k);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)fa[i]=i;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">		<span class="keyword">int</span> x,y,z;read(x);read(y);read(z);</span><br><span class="line">		<span class="keyword">if</span>(z)fa[find(x)]=find(y);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)v[find(i)].push_back(i);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)f[i][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">2</span>;j&lt;=k;j++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">			f[i][(j%<span class="number">2</span>)]=<span class="number">0</span>;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">auto</span> k:v[find(i)])</span><br><span class="line">				f[i][j%<span class="number">2</span>]=(f[i][j%<span class="number">2</span>]+f[k][(j<span class="number">-1</span>)%<span class="number">2</span>])%MOD;</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)ans=(ans+f[i][k%<span class="number">2</span>])%MOD;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>$100pts$</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD=<span class="number">20200621</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;v[<span class="number">100010</span>];</span><br><span class="line">ll n,k,f[<span class="number">100010</span>][<span class="number">2</span>],fa[<span class="number">100010</span>],ans,size[<span class="number">100010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(fa[x]==x)<span class="keyword">return</span> x;</span><br><span class="line">	<span class="keyword">return</span> fa[x]=find(fa[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">pw</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;y;y&gt;&gt;=<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(y&amp;<span class="number">1</span>)ans=<span class="number">1l</span>l*ans*x%MOD;</span><br><span class="line">        x=<span class="number">1l</span>l*x*x%MOD;</span><br><span class="line">    &#125;<span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	read(n);read(k);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)fa[i]=i,size[i]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">		<span class="keyword">int</span> x,y,z;read(x);read(y);read(z);</span><br><span class="line">		<span class="keyword">if</span>(z)&#123;</span><br><span class="line">            size[find(x)]+=size[find(y)];</span><br><span class="line">            size[find(y)]=<span class="number">0</span>;</span><br><span class="line">            fa[find(y)]=find(x);</span><br><span class="line">        &#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)ans=(ans+pw(size[find(i)],k<span class="number">-1</span>))%MOD;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="T-7"><a href="#T-7" class="headerlink" title="$T_7$"></a>$T_7$</h2><h3 id="题目描述-6"><a href="#题目描述-6" class="headerlink" title="题目描述"></a>题目描述</h3><blockquote>
<p>淘淘和蓝蓝在玩一款神奇的游戏——主地斗！规则如下：<br>两位玩家使用一副扑克牌（一张大王，一张小王，其他牌各四张，共54张）中的一些牌参加游戏，每人开始有4张手牌，其余的牌被放在牌堆之中。<strong>所有的手牌和牌堆里牌的顺序和点数都被玩家知晓</strong>。规定扑克牌的点数大小为 <strong>大王=小王</strong>&gt;2&gt;A&gt;K&gt;Q&gt;J&gt;10&gt;9&gt;8&gt;7&gt;6&gt;5&gt;4&gt;3。每局游戏有数轮。每轮先手会在桌面上放置至少一张，至多不超过后手手牌数量的牌（大王和小王除外），后手可以用点数更大的牌叠在桌面上的牌上（也可以选择不叠）。若所有桌面上的牌被叠到，则后手获得此轮胜利，桌面上的牌全部移出游戏，下一轮游戏先手变为后手，后手变为先手。否则先手获得此轮胜利，桌面上的牌全部进入后手的手牌（无视手牌上限），下一轮游戏先手与后手不变。<br>轮与轮之间，若上一轮的先手的手牌不足4张，将从牌堆顶部拿牌直到手牌为4张或者牌堆被摸空。<br>若一轮游戏开始前。一名玩家没有手牌而另一名玩家有手牌，那么没有手牌的玩家获得这局游戏的胜利。如果两名玩家都有手牌，但是先手玩家只有大王和小王导致他无法放牌，那么后手玩家获胜。<br>因为总是赢不了淘淘所以淘气的蓝蓝准备出老千。<br>他有以下两种出千方式:</p>
<ol>
<li><p>海底捞月：无视手牌上限从牌堆底部摸一张牌。</p>
</li>
<li><p>偷天换日：将淘淘的任意一张手牌与自己的任意一张牌对调。</p>
</li>
</ol>
<p>出千可以在这局游戏游戏开始前进行，并且为了不被发现，一局游戏只能出千一次。已知两名玩家都会按最优策略（即希望获得本局游戏胜利，下同）出牌，蓝蓝会按最优策略出千。（若不出千便能取得胜利，蓝蓝一定不会出千。若必须出千且两种方式均能取胜，则优先出海底捞月千）</p>
<p>现在蓝蓝想问你是否能取得胜利。若取得胜利，是否需要出千，出什么千。    </p>
</blockquote>
<h3 id="做法-amp-想法-6"><a href="#做法-amp-想法-6" class="headerlink" title="做法&amp;想法"></a>做法&amp;想法</h3><p>如此长的题面当然要骗分啦</p>
<h3 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h3><p>骗分（$60pts$ 的好成绩）</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a,b;read(a);read(b);</span><br><span class="line">	<span class="keyword">if</span>(a==<span class="number">8</span>&amp;&amp;b==<span class="number">0</span>)&#123;<span class="built_in">puts</span>(<span class="string">"Win"</span>);<span class="built_in">puts</span>(<span class="string">"No"</span>);<span class="keyword">return</span> <span class="number">0</span>;&#125;</span><br><span class="line">	<span class="keyword">if</span>(a==<span class="number">9</span>&amp;&amp;b==<span class="number">1</span>)&#123;<span class="built_in">puts</span>(<span class="string">"Win"</span>);<span class="built_in">puts</span>(<span class="string">"Yes"</span>);<span class="built_in">puts</span>(<span class="string">"2"</span>);<span class="keyword">return</span> <span class="number">0</span>;&#125;</span><br><span class="line">	<span class="built_in">puts</span>(<span class="string">"Win"</span>);</span><br><span class="line">	<span class="built_in">puts</span>(<span class="string">"No"</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>$100pts$</p>
<p>略（逃</p>
<h2 id="T-8"><a href="#T-8" class="headerlink" title="$T_8$"></a>$T_8$</h2><h3 id="题目描述-7"><a href="#题目描述-7" class="headerlink" title="题目描述"></a>题目描述</h3><blockquote>
<p>淘淘和蓝蓝喜欢“归整”的序列。长度为N的非负整数序列A是“归整”的，当且仅当A的任意连续K个元素的和都是S。</p>
<p>我们可以通过修改一些元素来使一个序列变成“归整”的。可以把A的任意元素修改成0到S之间(包含0和S)的任意整数。淘淘和蓝蓝想知道至少修改多少个元素才能使序列A变成“归整”的，于是找到你来帮助他们。</p>
</blockquote>
<h3 id="做法-amp-想法-7"><a href="#做法-amp-想法-7" class="headerlink" title="做法&amp;想法"></a>做法&amp;想法</h3><p>先考虑一个性质：</p>
<p>$a_i=a_{i\bmod k}$</p>
<p>为什么？</p>
<p>首先，$a_i+a_{i+1}\cdots +a_{i+k-1}=a_{i+1}\cdots +a_{i+k-1}+a_{i+k}-S$</p>
<p>所以，$a_i=a_{i+k}$</p>
<p>之后我们就可以开心的 $dp$ 了，我们 $f_{i,j}$ 表示前 $i$ 个数和为 $j$ 的方案数。</p>
<p>我们可以枚举第 $i$ 个数，假设它是 $k$，那么 $f_{i,j}=f_{i-1.j-k}+h_{i,k}$</p>
<p>其中，$h$ 函数的定义如下：</p>
<p>$h_{i,j}$ 表示下标和 $i$ 在模 $k$ 意义下同余的数中不为 $k$ 的数的个数。</p>
<p>这东西我们可以 $O(n^2)$ 预处理出来。</p>
<h3 id="代码-7"><a href="#代码-7" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">310</span>],ans,f[<span class="number">310</span>][<span class="number">310</span>],h[<span class="number">310</span>][<span class="number">310</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">memset</span>(f,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line">	<span class="keyword">int</span> n,k,s;</span><br><span class="line">	read(n);read(k);read(s);ans=n;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)read(a[i]);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=s;i++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">			h[(j<span class="number">-1</span>)%k+<span class="number">1</span>][i]+=(a[j]!=i);</span><br><span class="line">	f[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=s;j++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;=j;k++)</span><br><span class="line">				f[i][j]=min(f[i][j],f[i<span class="number">-1</span>][j-k]+h[i][k]);</span><br><span class="line"> 	<span class="built_in">cout</span>&lt;&lt;f[k][s];</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="Day-2"><a href="#Day-2" class="headerlink" title="$Day 2$"></a>$Day 2$</h1><p>哎，发现自己炸了，$T_2$ 挂成 $10pts$，$T_4$ 挂成 $30pts$，$T_8$ 代码中的第 $23$ 行 <code>h[i][k]</code> 手滑打成 <code>h[i][j]</code> 关键是还能过样例！气死我也……</p>
<p>$3$ 小时的时间是真的短，最后只拍了拍感觉最不稳的 $2$ 题（结果都没发现错误）</p>
<p>哎，$8$ 题挂了 $3$ 题，我拍题怎么就没拍到这 $3$ 题中的一题呢？</p>
<p>我也不知道。。。</p>
<p>放一放对拍的代码留作纪念吧。。。</p>
<p>桃子的对拍</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,a[<span class="number">100010</span>],v1,v2,ans=INT_MAX,f[<span class="number">100010</span>],ans1=INT_MAX;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(x==n+<span class="number">1</span>)&#123;</span><br><span class="line">		v1=<span class="number">0</span>;v2=<span class="number">0</span>;<span class="keyword">int</span> s=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">			<span class="keyword">if</span>(f[i]==<span class="number">0</span>)&#123;</span><br><span class="line">				v1=max(v1,a[i]);</span><br><span class="line">				<span class="keyword">if</span>(v1!=a[i])s+=v1-a[i];</span><br><span class="line">			&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">				v2=max(v2,a[i]);</span><br><span class="line">				<span class="keyword">if</span>(v2!=a[i])s+=v2-a[i];</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		ans1=min(s,ans1);</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	f[x]=<span class="number">0</span>;</span><br><span class="line">	dfs(x+<span class="number">1</span>);</span><br><span class="line">	f[x]=<span class="number">1</span>;</span><br><span class="line">	dfs(x+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;<span class="keyword">int</span> s=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span>(<span class="number">1</span>)&#123;n=<span class="number">8</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)a[i]=rand()%<span class="number">100</span>+<span class="number">1</span>;</span><br><span class="line">	dfs(<span class="number">1</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(<span class="number">1</span>&lt;&lt;n);i++)&#123;</span><br><span class="line">		v1=<span class="number">0</span>;v2=<span class="number">0</span>;<span class="keyword">int</span> s=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">			<span class="keyword">if</span>(i&amp;(<span class="number">1</span>&lt;&lt;(j<span class="number">-1</span>)))&#123;</span><br><span class="line">				v1=max(v1,a[j]);</span><br><span class="line">				<span class="keyword">if</span>(v1!=a[j])s+=v1-a[j];</span><br><span class="line">			&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">				v2=max(v2,a[j]);</span><br><span class="line">				<span class="keyword">if</span>(v2!=a[j])s+=v2-a[j];</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		ans=min(ans,s);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(ans1!=ans)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">cout</span>&lt;&lt;a[i];</span><br><span class="line">			<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,++s);</span><br><span class="line">&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>复读机的对拍：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll x,ll y)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(x%y==<span class="number">0</span>)<span class="keyword">return</span> y;</span><br><span class="line">	<span class="keyword">return</span> gcd(y,x%y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">ans1</span><span class="params">(ll x,ll z)</span></span>&#123;</span><br><span class="line">	ll y=z/x;</span><br><span class="line">	<span class="keyword">while</span>(gcd(x,y)!=<span class="number">1</span>)&#123;</span><br><span class="line">		<span class="keyword">int</span> a=gcd(x,y);</span><br><span class="line">		y*=a;x/=a;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">ans2</span><span class="params">(ll x,ll z)</span></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=z;i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(x*i/gcd(i,x)==z)<span class="keyword">return</span> i;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> s=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">		ll x,y,z;x=rand()%<span class="number">100</span>+<span class="number">1</span>;z=(rand()%<span class="number">100</span>+<span class="number">1</span>)*x;</span><br><span class="line">		<span class="comment">// cout&lt;&lt;x&lt;&lt;" "&lt;&lt;z&lt;&lt;" "&lt;&lt;ans2(x,z)&lt;&lt;endl;</span></span><br><span class="line">		<span class="keyword">if</span>(ans1(x,z)!=ans2(x,z))&#123;</span><br><span class="line">			<span class="built_in">cout</span>&lt;&lt;x&lt;&lt;<span class="string">" "</span>&lt;&lt;z&lt;&lt;<span class="string">" "</span>&lt;&lt;ans2(x,z)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">			<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		&#125;<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,++s);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="Day-1"><a href="#Day-1" class="headerlink" title="$Day ?$"></a>$Day ?$</h1><p>惊喜地发现自己炸成这样还有 $RK2$！真是奇迹，看来我还是不错的QAQ</p>
]]></content>
      <categories>
        <category>游记</category>
      </categories>
      <tags>
        <tag>游记</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 P1558 【色板游戏】</title>
    <url>/2020/06/14/%E8%A7%A3-P1558-%E3%80%90%E8%89%B2%E6%9D%BF%E6%B8%B8%E6%88%8F%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1558" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p1558" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<p><a href="https://www.luogu.com.cn/problem/P1558" target="_blank" rel="noopener">题面</a></p>
<blockquote>
<p>色板长度为 $L$，$L$ 是一个正整数，所以我们可以均匀地将它划分成 $L$ 块 $1$ 厘米长的小方格。并从左到右标记为 $1, 2, … L$。</p>
<p>现在色板上只有一个颜色，老师告诉阿宝在色板上只能做两件事：</p>
<ol>
<li><p>“C A B C” 指在 $A$ 到 $B$ 号方格中涂上颜色 <code>C</code>。</p>
</li>
<li><p>“P A B” 指老师的提问：$A$ 到 $B$ 号方格中有几种颜色。</p>
</li>
</ol>
<p>学校的颜料盒中一共有 $T$ 种颜料。为简便起见，我们把他们标记为 $1, 2, … T$. 开始时色板上原有的颜色就为 $1$ 号色。 面对如此复杂的问题，阿宝向你求助，你能帮助他吗？</p>
</blockquote>
<p>这道题目，我们发现 $1\leq t\leq 30$，$t$ 的值非常小。</p>
<p>考虑建 $t$ 棵线段树，每颗线段树维护是否有这种颜色，需要区间全部清零和区间全部赋值。</p>
<p>我使用的是封装数据结构，注释写的很清楚了</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls num&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs num&lt;&lt;1|1</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[MAXN];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Line_Tree</span>&#123;</span></span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">Tree</span>&#123;</span></span><br><span class="line">		<span class="keyword">int</span> l,r,lazy;<span class="comment">//lazy:1为区间赋值，2为区间清零</span></span><br><span class="line">		<span class="keyword">bool</span> f;</span><br><span class="line">	&#125;t[MAXN&lt;&lt;<span class="number">2</span>];</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> num)</span></span>&#123;</span><br><span class="line">		t[num].f=(t[ls].f||t[rs].f);<span class="comment">//只要有一个部分有这种颜色，就说明这个区间有这种颜色。</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> num)</span></span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(t[num].lazy)&#123;</span><br><span class="line">			t[ls].lazy=t[rs].lazy=t[num].lazy;<span class="comment">//lazy的传递，由于是区间覆盖，所以直接赋值</span></span><br><span class="line">			t[ls].f=t[rs].f=(t[num].lazy==<span class="number">1</span>);<span class="comment">//1为区间赋值，2为区间清零</span></span><br><span class="line">			t[num].lazy=<span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> num,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">		t[num].l=l;t[num].r=r;t[num].lazy=<span class="literal">false</span>;</span><br><span class="line">		<span class="keyword">if</span>(l==r)&#123;</span><br><span class="line">			t[num].f=(a[l]==x);<span class="comment">//显然QAQ</span></span><br><span class="line">			<span class="keyword">return</span>;<span class="comment">//直接return</span></span><br><span class="line">		&#125;<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">		build(ls,l,mid,x);</span><br><span class="line">		build(rs,mid+<span class="number">1</span>,r,x);</span><br><span class="line">		pushup(num);<span class="comment">//注意pushup</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">change1</span><span class="params">(<span class="keyword">int</span> num,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(t[num].l&gt;=l&amp;&amp;t[num].r&lt;=r)&#123;</span><br><span class="line">			t[num].lazy=<span class="number">1</span>;<span class="comment">//打标记</span></span><br><span class="line">			t[num].f=<span class="literal">true</span>;<span class="comment">//直接操作</span></span><br><span class="line">			<span class="keyword">return</span>;<span class="comment">//直接return</span></span><br><span class="line">		&#125;pushdown(num);<span class="comment">//注意标记下传</span></span><br><span class="line">		<span class="keyword">if</span>(t[ls].r&gt;=l)change1(ls,l,r);</span><br><span class="line">		<span class="keyword">if</span>(t[rs].l&lt;=r)change1(rs,l,r);</span><br><span class="line">		pushup(num);<span class="comment">//注意pushup</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">change2</span><span class="params">(<span class="keyword">int</span> num,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(t[num].l&gt;=l&amp;&amp;t[num].r&lt;=r)&#123;</span><br><span class="line">			t[num].lazy=<span class="number">2</span>;<span class="comment">//打标记</span></span><br><span class="line">			t[num].f=<span class="literal">false</span>;<span class="comment">//直接操作</span></span><br><span class="line">			<span class="keyword">return</span>;<span class="comment">//直接return</span></span><br><span class="line">		&#125;pushdown(num);<span class="comment">//注意标记下传</span></span><br><span class="line">		<span class="keyword">if</span>(t[ls].r&gt;=l)change2(ls,l,r);</span><br><span class="line">		<span class="keyword">if</span>(t[rs].l&lt;=r)change2(rs,l,r);</span><br><span class="line">		pushup(num);<span class="comment">//注意pushup</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> num,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(t[num].l&gt;=l&amp;&amp;t[num].r&lt;=r)<span class="keyword">return</span> t[num].f;<span class="comment">//直接看</span></span><br><span class="line">		pushdown(num);<span class="comment">//注意标记下传</span></span><br><span class="line">		<span class="keyword">if</span>(t[ls].r&lt;l)<span class="keyword">return</span> query(rs,l,r);</span><br><span class="line">		<span class="keyword">if</span>(t[rs].l&gt;r)<span class="keyword">return</span> query(ls,l,r);</span><br><span class="line">		<span class="keyword">return</span> (query(ls,l,r)||query(rs,l,r));<span class="comment">//只要有一个是就是了</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;T[<span class="number">32</span>];<span class="comment">//线段树</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n,t,E;read(n);read(t);read(E);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)a[i]=<span class="number">1</span>;<span class="comment">//初始化</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=t;i++)T[i].build(<span class="number">1</span>,<span class="number">1</span>,n,i);<span class="comment">//初始化</span></span><br><span class="line">	<span class="keyword">while</span>(E--)&#123;</span><br><span class="line">		<span class="keyword">char</span> f=getchar();<span class="keyword">int</span> a,b,c;</span><br><span class="line">		<span class="keyword">for</span>(;f!=<span class="string">'C'</span>&amp;&amp;f!=<span class="string">'P'</span>;)f=getchar();</span><br><span class="line">		read(a);read(b);<span class="keyword">if</span>(a&gt;b)swap(a,b);</span><br><span class="line">		<span class="keyword">if</span>(f==<span class="string">'C'</span>)&#123;</span><br><span class="line">			read(c);</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=t;i++)<span class="comment">//枚举颜色</span></span><br><span class="line">				<span class="keyword">if</span>(i==c)T[i].change1(<span class="number">1</span>,a,b);<span class="comment">//区间赋值</span></span><br><span class="line">				<span class="keyword">else</span> T[i].change2(<span class="number">1</span>,a,b);<span class="comment">//区间清零</span></span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="keyword">int</span> s=<span class="number">0</span>;<span class="comment">//计数器</span></span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=t;i++)<span class="comment">//枚举颜色</span></span><br><span class="line">				<span class="keyword">if</span>(T[i].query(<span class="number">1</span>,a,b))s++;<span class="comment">//如果有这种颜色</span></span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,s);<span class="comment">//输出</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>洛谷题库</category>
      </categories>
      <tags>
        <tag>lazy_tag</tag>
        <tag>线段树</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 P6282 【[USACO20OPEN]Cereal S】</title>
    <url>/2020/05/30/%E9%A2%98%E8%A7%A3-P6282-%E3%80%90-USACO20OPEN-Cereal-S%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P6282" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p6282" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<p><a href="https://www.luogu.com.cn/problem/P6282" target="_blank" rel="noopener">题面</a></p>
<p>这道题我是用队列做的。我们想一想少掉 $1$ 头奶牛，整个奶牛队列会发生什么变化</p>
<p>首先，最前面的那头奶牛走了，就空出来了他最喜欢吃的那包麦片了。</p>
<p>这包麦片可能会造成如下反应：</p>
<ul>
<li>一头奶牛原来吃的是它第 $2$ 喜欢的麦片，现在它吃自己第 $1$ 喜欢的了，使得又空出了一包麦片。</li>
<li>一头奶牛原来没有东西吃，现在它吃到了它 第1/第2 喜欢的麦片。</li>
</ul>
<p>我们可以写一个队列来计算这个东西，由于队列是先进先出，正好符合排队的顺序。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,f[MAXN],s[MAXN],k[MAXN],sum[MAXN],x[MAXN],ans;</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;v[MAXN];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	read(n);read(m);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)read(f[i]),read(s[i]);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;<span class="comment">//x的值为1，表示吃它第1喜欢的麦片；x的值为2，表示它第2喜欢的麦片；x的值为3，表示他没吃到麦片</span></span><br><span class="line">		<span class="keyword">if</span>(!k[f[i]])k[f[i]]=<span class="number">1</span>,x[i]=<span class="number">1</span>,ans++;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(!k[s[i]])v[f[i]].push(i),k[s[i]]=<span class="number">1</span>,x[i]=<span class="number">2</span>,ans++;</span><br><span class="line">			<span class="keyword">else</span> v[f[i]].push(i),v[s[i]].push(i),x[i]=<span class="number">3</span>;</span><br><span class="line">	&#125;<span class="comment">//暴力求出所有奶牛的情况</span></span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">		<span class="keyword">int</span> xx=f[i];<span class="comment">//离开的那头奶牛最喜欢吃的麦片</span></span><br><span class="line">		ans--;</span><br><span class="line">		<span class="keyword">while</span>(v[xx].size())&#123;</span><br><span class="line">			<span class="keyword">int</span> q=v[xx].front();</span><br><span class="line">			v[xx].pop();</span><br><span class="line">			<span class="keyword">if</span>(x[q]==<span class="number">2</span>)&#123;</span><br><span class="line">				xx=s[q];</span><br><span class="line">				x[q]=<span class="number">1</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(x[q]==<span class="number">3</span>)&#123;</span><br><span class="line">				ans++;</span><br><span class="line">				<span class="keyword">if</span>(f[q]==xx)x[q]=<span class="number">1</span>;</span><br><span class="line">				<span class="keyword">else</span> x[q]=<span class="number">2</span>;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>复杂度分析：这个代码的复杂度其实是 $O(n)$ 的，因为我们最多队列里的每个元素访问 $1$ 次，然后队列里元素个数是 $2n$ 的。</p>
]]></content>
      <categories>
        <category>洛谷题库</category>
        <category>usaco</category>
      </categories>
      <tags>
        <tag>队列</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 P2787 【语文1（chin1）- 理理思维】</title>
    <url>/2020/05/30/%E9%A2%98%E8%A7%A3-P2787-%E3%80%90%E8%AF%AD%E6%96%871%EF%BC%88chin1%EF%BC%89-%E7%90%86%E7%90%86%E6%80%9D%E7%BB%B4%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2787" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p2787" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<p><a href="https://www.luogu.com.cn/problem/P2787" target="_blank" rel="noopener">题面</a></p>
<p>这道题我的做法是线段树，由于只有26个字母，所有我们可以建 $26$ 个线段树。</p>
<p>对于操作 <code>1</code></p>
<blockquote>
<p>我们维护一下区间和就可以了。</p>
</blockquote>
<p>对于操作 <code>2</code></p>
<blockquote>
<p>我们用 $lazy_tag$ 就可以了</p>
</blockquote>
<p>对于操作 <code>3</code></p>
<blockquote>
<p>我们发现就是操作 <code>1</code> 和操作 <code>2</code> 的结合</p>
</blockquote>
<p>值得一提的是，有一个剪枝优化能是程序快很多</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> num,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(t[num].sum==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//剪枝</span></span><br><span class="line">	<span class="keyword">if</span>(t[num].l&gt;=l&amp;&amp;t[num].r&lt;=r)<span class="keyword">return</span> t[num].sum;</span><br><span class="line">	pushdown(num);</span><br><span class="line">	<span class="keyword">if</span>(t[ls].r&lt;l)<span class="keyword">return</span> query(rs,l,r);</span><br><span class="line">	<span class="keyword">if</span>(t[rs].l&gt;r)<span class="keyword">return</span> query(ls,l,r);</span><br><span class="line">	<span class="keyword">return</span> query(ls,l,r)+query(rs,l,r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(<span class="keyword">int</span> num,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> f)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(t[num].tag==f)<span class="keyword">return</span>;<span class="comment">//剪枝</span></span><br><span class="line">	<span class="keyword">if</span>(t[num].l&gt;=l&amp;&amp;t[num].r&lt;=r)&#123;</span><br><span class="line">		dwn(num,f);</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;pushdown(num);</span><br><span class="line">	<span class="keyword">if</span>(t[ls].r&gt;=l)change(ls,l,r,f);</span><br><span class="line">	<span class="keyword">if</span>(t[rs].l&lt;=r)change(rs,l,r,f);</span><br><span class="line">	pushup(num);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这 $2$ 个剪枝虽然非常显然，但可以使程序快很多</p>
<p>代码:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls num&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs num&lt;&lt;1|1</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">namespace</span> io &#123;<span class="comment">//CYjian的快读模板</span></span><br><span class="line">	<span class="keyword">const</span> <span class="keyword">int</span> __SIZE = (<span class="number">1</span> &lt;&lt; <span class="number">21</span>) + <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">char</span> ibuf[__SIZE], *iS, *iT, obuf[__SIZE], *oS = obuf, *oT = oS + __SIZE - <span class="number">1</span>, __c, qu[<span class="number">55</span>]; <span class="keyword">int</span> __f, qr, _eof;</span><br><span class="line">	<span class="meta">#<span class="meta-keyword">define</span> Gc() (iS == iT ? (iT = (iS = ibuf) + fread (ibuf, 1, __SIZE, stdin), (iS == iT ? EOF : *iS ++)) : *iS ++)</span></span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">flush</span> <span class="params">()</span> </span>&#123; fwrite (obuf, <span class="number">1</span>, oS - obuf, <span class="built_in">stdout</span>), oS = obuf; &#125;</span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">gc</span> <span class="params">(<span class="keyword">char</span> &amp;x)</span> </span>&#123; x = Gc(); &#125;</span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">pc</span> <span class="params">(<span class="keyword">char</span> x)</span> </span>&#123; *oS ++ = x; <span class="keyword">if</span> (oS == oT) flush (); &#125;</span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">pstr</span> <span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *s)</span> </span>&#123; <span class="keyword">int</span> __len = <span class="built_in">strlen</span>(s); <span class="keyword">for</span> (__f = <span class="number">0</span>; __f &lt; __len; ++__f) pc (s[__f]); &#125;</span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">gstr</span> <span class="params">(<span class="keyword">char</span> *s)</span> </span>&#123; <span class="keyword">for</span>(__c = Gc(); __c &lt; <span class="number">32</span> || __c &gt; <span class="number">126</span> || __c == <span class="string">' '</span>;)  __c = Gc();</span><br><span class="line">		<span class="keyword">for</span>(; __c &gt; <span class="number">31</span> &amp;&amp; __c &lt; <span class="number">127</span> &amp;&amp; __c != <span class="string">' '</span>; ++s, __c = Gc()) *s = __c; *s = <span class="number">0</span>; &#125;</span><br><span class="line">	<span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">I</span>&gt; <span class="title">inline</span> <span class="title">bool</span> <span class="title">gi</span> (<span class="title">I</span> &amp;<span class="title">x</span>) &#123;</span> _eof = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span> (__f = <span class="number">1</span>, __c = Gc(); (__c &lt; <span class="string">'0'</span> || __c &gt; <span class="string">'9'</span>) &amp;&amp; !_eof; __c = Gc()) &#123; <span class="keyword">if</span> (__c == <span class="string">'-'</span>) __f = <span class="number">-1</span>; _eof |= __c == EOF; &#125;</span><br><span class="line">		<span class="keyword">for</span> (x = <span class="number">0</span>; __c &lt;= <span class="string">'9'</span> &amp;&amp; __c &gt;= <span class="string">'0'</span> &amp;&amp; !_eof; __c = Gc()) x = x * <span class="number">10</span> + (__c &amp; <span class="number">15</span>), _eof |= __c == EOF; x *= __f; <span class="keyword">return</span> !_eof; &#125;</span><br><span class="line">	<span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">I</span>&gt; <span class="title">inline</span> <span class="title">void</span> <span class="title">print</span> (<span class="title">I</span> <span class="title">x</span>) &#123;</span> <span class="keyword">if</span> (!x) pc (<span class="string">'0'</span>); <span class="keyword">if</span> (x &lt; <span class="number">0</span>) pc (<span class="string">'-'</span>), x = -x;</span><br><span class="line">		<span class="keyword">while</span> (x) qu[++ qr] = x % <span class="number">10</span> + <span class="string">'0'</span>,  x /= <span class="number">10</span>; <span class="keyword">while</span> (qr) pc (qu[qr --]); &#125;</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">Flusher_</span> &#123;</span>~Flusher_()&#123;flush();&#125;&#125;io_flusher_;</span><br><span class="line">&#125; <span class="keyword">using</span> io::pc; <span class="keyword">using</span> io::gc; <span class="keyword">using</span> io::pstr; <span class="keyword">using</span> io::gstr; <span class="keyword">using</span> io::gi; <span class="keyword">using</span> io::print;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">rech</span><span class="params">(<span class="keyword">char</span> &amp;ch)</span></span>&#123;</span><br><span class="line">	gc(ch);</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isupper</span>(ch)&amp;&amp;!<span class="built_in">islower</span>(ch);gc(ch));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,F[<span class="number">305</span>];</span><br><span class="line"><span class="keyword">char</span> a[N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">Tree</span>&#123;</span></span><br><span class="line">		<span class="keyword">int</span> l,r,sum,tag,len;</span><br><span class="line">	&#125;t[N&lt;&lt;<span class="number">2</span>];</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> num)</span></span>&#123;</span><br><span class="line">		t[num].sum=t[ls].sum+t[rs].sum;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">dwn</span><span class="params">(<span class="keyword">int</span> num,<span class="keyword">int</span> f)</span></span>&#123;</span><br><span class="line">		t[num].tag=f;</span><br><span class="line">		<span class="keyword">if</span>(t[num].tag==<span class="number">1</span>)t[num].sum=t[num].len;</span><br><span class="line">		<span class="keyword">if</span>(t[num].tag==<span class="number">2</span>)t[num].sum=<span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> num)</span></span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(t[num].tag==<span class="number">0</span>)<span class="keyword">return</span>;</span><br><span class="line">		dwn(ls,t[num].tag);</span><br><span class="line">		dwn(rs,t[num].tag);</span><br><span class="line">		t[num].tag=<span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> num,<span class="keyword">char</span> ch)</span></span>&#123;</span><br><span class="line">		t[num].tag=<span class="number">0</span>;</span><br><span class="line">		t[num].l=l;t[num].r=r;</span><br><span class="line">		t[num].len=r-l+<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">if</span>(l==r)&#123;</span><br><span class="line">			t[num].sum=a[l]==ch;</span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">		&#125;<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">		build(l,mid,ls,ch);</span><br><span class="line">		build(mid+<span class="number">1</span>,r,rs,ch);</span><br><span class="line">		pushup(num);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> num,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(t[num].sum==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//剪枝</span></span><br><span class="line">		<span class="keyword">if</span>(t[num].l&gt;=l&amp;&amp;t[num].r&lt;=r)<span class="keyword">return</span> t[num].sum;</span><br><span class="line">		pushdown(num);</span><br><span class="line">		<span class="keyword">if</span>(t[ls].r&lt;l)<span class="keyword">return</span> query(rs,l,r);</span><br><span class="line">		<span class="keyword">if</span>(t[rs].l&gt;r)<span class="keyword">return</span> query(ls,l,r);</span><br><span class="line">		<span class="keyword">return</span> query(ls,l,r)+query(rs,l,r);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(<span class="keyword">int</span> num,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> f)</span></span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(t[num].tag==f)<span class="keyword">return</span>;<span class="comment">//剪枝</span></span><br><span class="line">		<span class="keyword">if</span>(t[num].l&gt;=l&amp;&amp;t[num].r&lt;=r)&#123;</span><br><span class="line">			dwn(num,f);</span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">		&#125;pushdown(num);</span><br><span class="line">		<span class="keyword">if</span>(t[ls].r&gt;=l)change(ls,l,r,f);</span><br><span class="line">		<span class="keyword">if</span>(t[rs].l&lt;=r)change(rs,l,r,f);</span><br><span class="line">		pushup(num);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;T[<span class="number">110</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	gi(n);gi(m);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)rech(a[i]),a[i]=<span class="built_in">toupper</span>(a[i]);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">char</span> i=<span class="string">'A'</span>;i&lt;=<span class="string">'Z'</span>;i++)T[i].build(<span class="number">1</span>,n,<span class="number">1</span>,i);</span><br><span class="line">	<span class="keyword">while</span>(m--)&#123;</span><br><span class="line">		<span class="keyword">int</span> f,x,y;<span class="keyword">char</span> k;</span><br><span class="line">		gi(f);gi(x);gi(y);</span><br><span class="line">		<span class="keyword">if</span>(f==<span class="number">1</span>)&#123;</span><br><span class="line">			rech(k);</span><br><span class="line">			k=<span class="built_in">toupper</span>(k);</span><br><span class="line">			print(T[k].query(<span class="number">1</span>,x,y));</span><br><span class="line">			pstr(<span class="string">"\n"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(f==<span class="number">2</span>)&#123;</span><br><span class="line">			rech(k);</span><br><span class="line">			k=<span class="built_in">toupper</span>(k);</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">char</span> i=<span class="string">'A'</span>;i&lt;=<span class="string">'Z'</span>;i++)</span><br><span class="line">				<span class="keyword">if</span>(i==k)T[i].change(<span class="number">1</span>,x,y,<span class="number">1</span>);</span><br><span class="line">				<span class="keyword">else</span> T[i].change(<span class="number">1</span>,x,y,<span class="number">2</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(f==<span class="number">3</span>)&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">char</span> i=<span class="string">'A'</span>;i&lt;=<span class="string">'Z'</span>;i++)&#123;</span><br><span class="line">				F[i]=T[i].query(<span class="number">1</span>,x,y);</span><br><span class="line">				T[i].change(<span class="number">1</span>,x,y,<span class="number">2</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">char</span> i=<span class="string">'A'</span>;i&lt;=<span class="string">'Z'</span>;i++)</span><br><span class="line">				<span class="keyword">if</span>(F[i])T[i].change(<span class="number">1</span>,x,x+F[i]<span class="number">-1</span>,<span class="number">1</span>),x+=F[i];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>洛谷题库</category>
      </categories>
      <tags>
        <tag>线段树</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 P4147 【玉蟾宫】</title>
    <url>/2020/05/30/%E9%A2%98%E8%A7%A3-P4147-%E3%80%90%E7%8E%89%E8%9F%BE%E5%AE%AB%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1052" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p1052" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<p>这道题，我们可以想一下，矩形的面积跟 $2$ 条边有关。</p>
<p>对于每个点，我们算出 $3$ 个数，<code>lft</code>、<code>rgt</code>、<code>up</code>。</p>
<blockquote>
<p><code>lft</code>：即此点最多能向左延伸到哪一列。(初值为<code>j</code>)</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">		<span class="keyword">if</span>(a[i][j]&amp;&amp;a[i][j<span class="number">-1</span>])lft[i][j]=lft[i][j<span class="number">-1</span>];</span><br></pre></td></tr></table></figure>
<p><code>rgt</code>：即此点最多能向右延伸多少哪一列。(初值为<code>j</code>)</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=m;j&gt;=<span class="number">1</span>;j--)</span><br><span class="line">			<span class="keyword">if</span>(a[i][j]&amp;&amp;a[i][j+<span class="number">1</span>])rgt[i][j]=rgt[i][j+<span class="number">1</span>];</span><br></pre></td></tr></table></figure>
<p><code>up</code>：即此点最多能向上延伸多少个格子数。(初值为<code>1</code>)</p>
<p>边 $dp$ 边求。</p>
</blockquote>
<p>现在我们就说说 $dp$ 吧。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(a[i][j]&amp;&amp;a[i<span class="number">-1</span>][j])&#123;</span><br><span class="line">			lft[i][j]=max(lft[i<span class="number">-1</span>][j],lft[i][j]);<span class="comment">//在up最优的情况下，左端点的距离要更新</span></span><br><span class="line">			rgt[i][j]=min(rgt[i<span class="number">-1</span>][j],rgt[i][j]);<span class="comment">//在up最优的情况下，右端点的距离要更新</span></span><br><span class="line">			up[i][j]=up[i<span class="number">-1</span>][j]+<span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">int</span> x=rgt[i][j]-lft[i][j]+<span class="number">1</span>;</span><br><span class="line">		ans=max(ans,x*up[i][j]);</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
<p>其实就是找高度最高的矩形，为什么这样是正确的呢。</p>
<p>我们可以这样想一下。我们的算法本质就是，<strong>以 $i,j$  最多往上的长度做矩阵一条边</strong>，这个就是 $up_{i,j}$ 干的事情，然后 $lft_{i,j}$ 和 $rgt_{i,j}$ 则是要在 $up_{i,j}$ 最优的情况下，让另一条边也最优。</p>
<p>你可以再想一下，下面这张图，最大子矩阵是橙色方框圈起来的。我们可以发现，最大子矩阵的四条边，每条边要么是靠到边界，要么是靠到障碍物。也就是说，最大子矩阵的上边界一定会靠到障碍物或边界。我们的算法就相当于确定了下边界，然后用 $up$ 数组又确定了上边界。然后用 $lft$ 和 $rgt$ 确定左边界和右边界。<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjAvMDMvMjUvYXVXSzhVM2JHTEVNMVpwLnBuZw?x-oss-process=image/format,png" alt="在这里插入图片描述"></p>
<p>如果还是不懂的话，可以再想一下，我来模拟一下。</p>
<p>这就是我们 $up$ 做的事。</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjAvMDMvMjUvbEZpY0syYjVYR3U5c1JTLnBuZw?x-oss-process=image/format,png" alt="213.png"></p>
<p>然后呢，对于每条线，我们要让他们的上边界尽可能的长。</p>
<p><img src="https://i.loli.net/2020/03/25/z6ZwbUkCLTuRsPr.png" alt=""></p>
<p>再回来看看代码：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">	<span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">2010</span>][<span class="number">2010</span>],lft[<span class="number">2010</span>][<span class="number">2010</span>],rgt[<span class="number">2010</span>][<span class="number">2010</span>],up[<span class="number">2010</span>][<span class="number">2010</span>],ans;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n,m;</span><br><span class="line">	read(n);read(m);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">			<span class="keyword">char</span> ch;</span><br><span class="line">			<span class="built_in">cin</span>&gt;&gt;ch;</span><br><span class="line">			<span class="keyword">if</span>(ch==<span class="string">'F'</span>)a[i][j]=<span class="number">1</span>;</span><br><span class="line">			lft[i][j]=j;</span><br><span class="line">			rgt[i][j]=j;</span><br><span class="line">			up[i][j]=<span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">			<span class="keyword">if</span>(a[i][j]&amp;&amp;a[i][j<span class="number">-1</span>])lft[i][j]=lft[i][j<span class="number">-1</span>];</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=m;j&gt;=<span class="number">1</span>;j--)</span><br><span class="line">			<span class="keyword">if</span>(a[i][j]&amp;&amp;a[i][j+<span class="number">1</span>])rgt[i][j]=rgt[i][j+<span class="number">1</span>];</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">			<span class="keyword">if</span>(a[i][j]&amp;&amp;a[i<span class="number">-1</span>][j])&#123;</span><br><span class="line">				lft[i][j]=max(lft[i<span class="number">-1</span>][j],lft[i][j]);</span><br><span class="line">				rgt[i][j]=min(rgt[i<span class="number">-1</span>][j],rgt[i][j]);</span><br><span class="line">				up[i][j]=up[i<span class="number">-1</span>][j]+<span class="number">1</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">int</span> x=rgt[i][j]-lft[i][j]+<span class="number">1</span>;</span><br><span class="line">			ans=max(ans,x*up[i][j]);</span><br><span class="line">		&#125;</span><br><span class="line">	write(ans*<span class="number">3</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>是不是就懂了$qwq$。。。</p>
<p><del>我才不告诉你，这个其实就是单调队列</del></p>
]]></content>
      <categories>
        <category>洛谷题库</category>
      </categories>
      <tags>
        <tag>dp</tag>
      </tags>
  </entry>
  <entry>
    <title>NOI Online Round 2 TG 游记</title>
    <url>/2020/05/30/%E6%B8%B8%E8%AE%B0%E2%80%9D/</url>
    <content><![CDATA[<p>这篇总的题解蒟蒻写了 $3.5h s$！作为回报，你们是不是应该去<a href="https://zhaohaikun.blog.luogu.org/" target="_blank" rel="noopener">$ZHK$ 的洛谷博客</a>里给 $ZHK$ 的所有题解点赞呢！</p>
<a id="more"></a>
<h1 id="Day0"><a href="#Day0" class="headerlink" title="Day0"></a>Day0</h1><p>上午作业被老师喊去重做，全班被老师喊去抄书。<br>数学炸到 $97$，自闭了。<br>语文和英语默写没挂qwq。。。</p>
<h1 id="Day1上午"><a href="#Day1上午" class="headerlink" title="Day1上午"></a>Day1上午</h1><p>早上起来感觉要爆零qwq。。。<br>准备好晚上干作业qwq。。。<br>网站挺稳的，8:30就开题了</p>
<p>T1感觉挺可做的（最后还是挂了）<br>大概就是</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">ll m=gcd(x,y);</span><br><span class="line">x/=m;y/=m;z--;</span><br><span class="line"><span class="keyword">if</span>(x*z+<span class="number">1</span>&lt;y||y*z+<span class="number">1</span>&lt;x)<span class="built_in">puts</span>(<span class="string">"No"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br></pre></td></tr></table></figure>
<p>这个吧</p>
<p>期望 :$100$pts</p>
<p>T2感觉不会，用算贡献法，做了个 $n^2$ 的部分分，还是挺稳的。<br>正解不会，对于我这样的蒟蒻大概就是题题不写挂，题题有分就是目标的。</p>
<p>T3<del>不高兴看了</del>，概率题对我来说那是一眼的不可做qwq。。。</p>
<h1 id="Day1下午"><a href="#Day1下午" class="headerlink" title="Day1下午"></a>Day1下午</h1><p>测了把民间数据，发现T1炸了，没有特判 $k=1$ ，炸到 $20$ 分，但愿CCF良心一点，数据水一点qwq。。。</p>
<p>T2稳稳得 $50$ qwq。。。</p>
<p>CCF出<a href="https://www.luogu.com.cn/problem/CF1260C" target="_blank" rel="noopener">原题</a>！</p>
<p>最后：$80+50+0=130$</p>
<p>稳稳地没有前 $25\%$ qwq。。。</p>
]]></content>
      <categories>
        <category>游记</category>
      </categories>
      <tags>
        <tag>游记</tag>
      </tags>
  </entry>
  <entry>
    <title>NOI Online Round 2 PJ 游记</title>
    <url>/2020/05/30/%E6%B8%B8%E8%AE%B0%E2%80%9C/</url>
    <content><![CDATA[<p>这篇总的题解蒟蒻写了 $3.5h s$！作为回报，你们是不是应该去<a href="https://zhaohaikun.blog.luogu.org/" target="_blank" rel="noopener">$ZHK$ 的洛谷博客</a>里给 $ZHK$ 的所有题解点赞呢！</p>
<a id="more"></a>
<p>JR 上午考得太自闭了，我妈本想让我<del>找信心</del>然后就让我比了。</p>
<p>自然是自闭了。。。</p>
<p>T1 想了想很明显的单调性，当时想要不要离线做，最后还是觉得搞在线不容易错（？？？），然后就写了个二分。</p>
<p>T2 很明显的搜索对吧，写自闭了233，调了0.5h之久。</p>
<p>T3 没什么思路qwq，然后直接输一个 <code>0</code> 骗分eeee。。。</p>
<p>最后·$100+65+0=165$ ，蒟进了前 $25\%$ qwq。。。</p>
]]></content>
      <categories>
        <category>游记</category>
      </categories>
      <tags>
        <tag>游记</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 P2522 【[HAOI2011]Problem b】</title>
    <url>/2020/05/30/b%E3%80%91%E2%80%9D/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2522" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p2522" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<script type="math/tex; mode=display">\sum\limits_{i=a}^{b} \sum\limits_{j=c}^{d} [\gcd(i,j)=k]</script><p>设</p>
<p>函数 $f(x,y)$ 为：</p>
<script type="math/tex; mode=display">\sum\limits_{i=1}^{x} \sum\limits_{j=1}^{y} [\gcd(i,j)=k]</script><p>那么，运用容斥原理，原式就 $= f(b,d) - f(a,d) - f(b,c) + f(a,c)$</p>
<p>所以现在问题就转换为了求 $f$ 函数。</p>
<script type="math/tex; mode=display">\begin{aligned}&\sum\limits_{i=1}^{x} \sum\limits_{j=1}^{y} [\gcd(i,j)=k] \\=& \sum_{i=1}^{\lfloor\frac{n}{k}\rfloor}\sum_{j=1}^{\lfloor\frac{m}{k}\rfloor}[\gcd(i,j)=1]\\=& \sum_{i=1}^{\lfloor\frac{n}{k}\rfloor}\sum_{j=1}^{\lfloor\frac{m}{k}\rfloor}\varepsilon(\gcd(i,j))\\=& \sum_{i=1}^{\lfloor\frac{n}{k}\rfloor}\sum_{j=1}^{\lfloor\frac{m}{k}\rfloor}\sum_{d \mid \gcd(i,j) }\mu(d)\\=& \sum_{d=1 }\mu(d)\sum_{i=1}^{\lfloor\frac{n}{k}\rfloor}[d \mid i]\sum_{j=1}^{\lfloor\frac{m}{k}\rfloor}[d \mid j]\\=&\sum_{d=1}\mu(d)\lfloor\frac{n}{kd}\rfloor\lfloor\frac{m}{kd}\rfloor\end{aligned}</script><p>我们可以使用数论分块进行求解</p>
<p>代码：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">50010</span>;</span><br><span class="line"><span class="keyword">int</span> prim[N],mu[N],sum[N],cnt,k,T;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">	mu[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">2</span>;i&lt;N;i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(!vis[i])&#123;</span><br><span class="line">			mu[i]=<span class="number">-1</span>;</span><br><span class="line">			prim[++cnt]=i;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=cnt&amp;&amp;i*prim[j]&lt;N;j++)&#123;</span><br><span class="line">			vis[i*prim[j]]=<span class="number">1</span>;</span><br><span class="line">			<span class="keyword">if</span>(i%prim[j]==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">			mu[i*prim[j]]=-mu[i];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;N;i++)sum[i]=sum[i<span class="number">-1</span>]+mu[i];</span><br><span class="line">&#125;<span class="comment">//莫比乌斯反演的板子</span></span><br><span class="line"><span class="function">ll <span class="title">calc</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">	ll ans=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> l=<span class="number">1</span>,r;l&lt;=min(a,b);l=r+<span class="number">1</span>)&#123;</span><br><span class="line">		r=min(a/(a/l),b/(b/l));</span><br><span class="line">		ans+=(<span class="number">1l</span>l*a/l)*(<span class="number">1l</span>l*b/l)*(sum[r]-sum[l<span class="number">-1</span>]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	init();</span><br><span class="line">	<span class="keyword">for</span>(read(T);T--;)&#123;</span><br><span class="line">		<span class="keyword">int</span> a,b,c,d;</span><br><span class="line">		read(a);read(b);read(c);read(d);read(k);</span><br><span class="line">		a--;c--;a/=k;b/=k;c/=k;d/=k;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,calc(b,d)-calc(b,c)-calc(a,d)+calc(a,c));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>洛谷题库</category>
        <category>HA省选</category>
      </categories>
      <tags>
        <tag>数论，数学</tag>
        <tag>莫比乌斯反演</tag>
        <tag>数论分块</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 P2257 【YY的GCD】</title>
    <url>/2020/05/30/%E9%A2%98%E8%A7%A3-P2257-%E3%80%90YY%E7%9A%84GCD%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2257" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p2257" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<script type="math/tex; mode=display">\begin{aligned}&\sum_{p\in prim}\sum_{i=1}^{n}\sum_{j=1}^{m}[gcd(i,j)=p] \\=& \sum_{p\in prim}\sum_{i=1}^{\lfloor\frac{n}{p}\rfloor}\sum_{j=1}^{\lfloor\frac{m}{p}\rfloor}[\gcd(i,j)=1]\\=& \sum_{p\in prim}\sum_{i=1}^{\lfloor\frac{n}{p}\rfloor}\sum_{j=1}^{\lfloor\frac{m}{p}\rfloor}\varepsilon(\gcd(i,j)=1)\\=& \sum_{p\in prim}\sum_{i=1}^{\lfloor\frac{n}{p}\rfloor}\sum_{j=1}^{\lfloor\frac{m}{p}\rfloor}\varepsilon(\gcd(i,j))\\=& \sum_{p\in prim}\sum_{i=1}^{\lfloor\frac{n}{p}\rfloor}\sum_{j=1}^{\lfloor\frac{m}{p}\rfloor} \sum_{d\mid \gcd(i,j)} \mu(d)\\=&\sum_{p\in prim}\sum_{p\mid d} \mu(d)\sum_{i=1}^{\lfloor\frac{n}{p}\rfloor}[d\mid i]\sum_{j=1}^{\lfloor\frac{m}{p}\rfloor}[d\mid j]\\=&\sum_{p\in prim}\sum_{p\mid d} \mu(d) \lfloor \frac{n}{kd} \rfloor \frac{m}{kd} \rfloor\\\end{aligned}</script><p>设：</p>
<script type="math/tex; mode=display">f(p)=\sum\limits_{p\mid d} \mu(d)</script><p>则原式化为：</p>
<script type="math/tex; mode=display">
\begin{aligned}=&\sum_{p\in prim} f(p)\times \lfloor \frac{n}{kd} \rfloor \frac{m}{kd} \rfloor\\\end{aligned}</script><p>我们先去预处理 $f$ 函数</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;i++)</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j*prim[i]&lt;N;j++)</span><br><span class="line">		f[j*prim[i]]+=mu[j];</span><br></pre></td></tr></table></figure>
<p>就是这里的 $f$ 数组。</p>
<p>之后我们就可以求解了。</p>
<p>我们可以使用数论分块来写这题。</p>
<p>代码：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1e7</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> prim[N],mu[N],sum[N],cnt,k,T,f[N];</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">	mu[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">2</span>;i&lt;N;i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(!vis[i])&#123;</span><br><span class="line">			mu[i]=<span class="number">-1</span>;</span><br><span class="line">			prim[++cnt]=i;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=cnt&amp;&amp;i*prim[j]&lt;N;j++)&#123;</span><br><span class="line">			vis[i*prim[j]]=<span class="number">1</span>;</span><br><span class="line">			<span class="keyword">if</span>(i%prim[j]==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">			mu[i*prim[j]]=-mu[i];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;i++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j*prim[i]&lt;N;j++)</span><br><span class="line">			f[j*prim[i]]+=mu[j];</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;N;i++)sum[i]=sum[i<span class="number">-1</span>]+f[i];</span><br><span class="line">&#125;<span class="comment">//莫比乌斯反演的板子</span></span><br><span class="line"><span class="function">ll <span class="title">calc</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">	ll ans=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> l=<span class="number">1</span>,r;l&lt;=min(a,b);l=r+<span class="number">1</span>)&#123;</span><br><span class="line">		r=min(a/(a/l),b/(b/l));</span><br><span class="line">		ans+=(<span class="number">1l</span>l*a/l)*(<span class="number">1l</span>l*b/l)*(sum[r]-sum[l<span class="number">-1</span>]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	init();</span><br><span class="line">	<span class="keyword">for</span>(read(T);T--;)&#123;</span><br><span class="line">		<span class="keyword">int</span> x,y;</span><br><span class="line">		read(x);read(y);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,calc(x,y));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>洛谷题库</category>
      </categories>
      <tags>
        <tag>数论，数学</tag>
        <tag>莫比乌斯反演</tag>
        <tag>数论分块</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 P2812 【校园网络【[USACO]Network of Schools加强版】】</title>
    <url>/2020/05/30/%E9%A2%98%E8%A7%A3-P2812-%E3%80%90%E6%A0%A1%E5%9B%AD%E7%BD%91%E7%BB%9C%E3%80%90-USACO-Network-of-Schools%E5%8A%A0%E5%BC%BA%E7%89%88%E3%80%91%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2812" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p2812" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<h1 id="前置知识："><a href="#前置知识：" class="headerlink" title="前置知识："></a>前置知识：</h1><ul>
<li><a href="https://blog.csdn.net/qq_46230164/article/details/105406699" target="_blank" rel="noopener">强联通分量</a></li>
</ul>
<h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>这道题的话，我们先考虑缩点。</p>
<p>不会缩点的可以看一下我的<a href="https://blog.csdn.net/qq_46230164/article/details/105406699" target="_blank" rel="noopener">文章</a></p>
<p>既然我们缩好点了，那么整张图变成了一个 $DAG$（有向无环图）</p>
<p>这样就好处理了。</p>
<ul>
<li><p>对于问题 <code>A</code></p>
<p>  我们发现既然这整张图是 $DAG$，那么答案显然为入度为 $0$ 的点的个数</p>
</li>
<li><p>对于问题 <code>B</code><br>  我们发现这整张图是 $DAG$。我们要把它变成连通图。</p>
<p>  连通图需要满足：</p>
<ul>
<li>没有入度为 $0$ 的点</li>
<li><p>没有出度为 $0$ 的点</p>
<p>考虑入度为 $0$ 和 出度为 $0$ 的点两两匹配，则需要匹配 $\max\{ \texttt{入度为} 0 \texttt{的点},\texttt{入度为} 1 \texttt{的点}$ 次。</p>
</li>
</ul>
</li>
</ul>
<h1 id="一些细节"><a href="#一些细节" class="headerlink" title="一些细节"></a>一些细节</h1><p>注意缩点后只有一个点的情况，本身就是连通的，所以 问题 <code>B</code> 的答案为 $0$</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x=-x;</span><br><span class="line">	<span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">	<span class="built_in">putchar</span>(<span class="string">'0'</span>+x%<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">1e6</span>+<span class="number">10</span>,MAXM=<span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> s[MAXN],stop,dfn[MAXN],low[MAXN],scccnt,sccnum[MAXN],dfscnt,tot,he[MAXN],ne[MAXM&lt;&lt;<span class="number">1</span>],ed[MAXM&lt;&lt;<span class="number">1</span>],n,x,se,es,du[MAXN],ud[MAXN];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">	ed[++tot]=y;</span><br><span class="line">	ne[tot]=he[x];</span><br><span class="line">	he[x]=tot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">tarjan</span><span class="params">(<span class="keyword">int</span> now)</span></span>&#123;</span><br><span class="line">	dfn[now]=low[now]=++dfscnt;</span><br><span class="line">	s[stop++]=now;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=he[now];i;i=ne[i])&#123;</span><br><span class="line">		<span class="keyword">if</span>(!dfn[ed[i]])&#123;</span><br><span class="line">			tarjan(ed[i]);</span><br><span class="line">			low[now]=min(low[now],low[ed[i]]);</span><br><span class="line">		&#125;<span class="keyword">else</span> <span class="keyword">if</span>(!sccnum[ed[i]])&#123;</span><br><span class="line">			low[now]=min(low[now],dfn[ed[i]]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(dfn[now]==low[now])&#123;</span><br><span class="line">		scccnt++;</span><br><span class="line">		<span class="keyword">do</span>&#123;</span><br><span class="line">			sccnum[s[--stop]]=scccnt;</span><br><span class="line">		&#125;<span class="keyword">while</span>(s[stop]!=now);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;<span class="comment">//tarjin的板子</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	read(n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">		<span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;x&amp;&amp;x)add(i,x);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">		<span class="keyword">if</span>(!dfn[i])tarjan(i);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=he[i];j;j=ne[j])</span><br><span class="line">			<span class="keyword">if</span>(sccnum[i]!=sccnum[ed[j]])&#123;</span><br><span class="line">				du[sccnum[ed[j]]]++;<span class="comment">//统计</span></span><br><span class="line">				ud[sccnum[i]]++;<span class="comment">//统计</span></span><br><span class="line">			&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=scccnt;i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(!du[i])se++;<span class="comment">//入度为0的点</span></span><br><span class="line">		<span class="keyword">if</span>(!ud[i])es++;<span class="comment">//出度为0的点</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;se&lt;&lt;<span class="built_in">endl</span>&lt;&lt;(scccnt==<span class="number">1</span>?<span class="number">0</span>:max(se,es));<span class="comment">//小细节</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>洛谷题库</category>
        <category>usaco</category>
      </categories>
      <tags>
        <tag>强联通分量</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 P2746 【[USACO5.3]校园网Network of Schools】</title>
    <url>/2020/05/30/Schools%E3%80%91%E2%80%9D/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2746" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p2746" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<h1 id="前置知识："><a href="#前置知识：" class="headerlink" title="前置知识："></a>前置知识：</h1><ul>
<li><a href="https://blog.csdn.net/qq_46230164/article/details/105406699" target="_blank" rel="noopener">强联通分量</a></li>
</ul>
<h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>这道题的话，我们先考虑缩点。</p>
<p>不会缩点的可以看一下我的<a href="https://blog.csdn.net/qq_46230164/article/details/105406699" target="_blank" rel="noopener">文章</a></p>
<p>既然我们缩好点了，那么整张图变成了一个 $DAG$（有向无环图）</p>
<p>这样就好处理了。</p>
<ul>
<li><p>对于问题 <code>A</code></p>
<p>  我们发现既然这整张图是 $DAG$，那么答案显然为入度为 $0$ 的点的个数</p>
</li>
<li><p>对于问题 <code>B</code><br>  我们发现这整张图是 $DAG$。我们要把它变成连通图。</p>
<p>  连通图需要满足：</p>
<ul>
<li>没有入度为 $0$ 的点</li>
<li><p>没有出度为 $0$ 的点</p>
<p>考虑入度为 $0$ 和 出度为 $0$ 的点两两匹配，则需要匹配 $\max\{ \texttt{入度为} 0 \texttt{的点},\texttt{入度为} 1 \texttt{的点}$ 次。</p>
</li>
</ul>
</li>
</ul>
<h1 id="一些细节"><a href="#一些细节" class="headerlink" title="一些细节"></a>一些细节</h1><p>注意缩点后只有一个点的情况，本身就是连通的，所以 问题 <code>B</code> 的答案为 $0$</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x=-x;</span><br><span class="line">	<span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">	<span class="built_in">putchar</span>(<span class="string">'0'</span>+x%<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">1e6</span>+<span class="number">10</span>,MAXM=<span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> s[MAXN],stop,dfn[MAXN],low[MAXN],scccnt,sccnum[MAXN],dfscnt,tot,he[MAXN],ne[MAXM&lt;&lt;<span class="number">1</span>],ed[MAXM&lt;&lt;<span class="number">1</span>],n,x,se,es,du[MAXN],ud[MAXN];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">	ed[++tot]=y;</span><br><span class="line">	ne[tot]=he[x];</span><br><span class="line">	he[x]=tot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">tarjan</span><span class="params">(<span class="keyword">int</span> now)</span></span>&#123;</span><br><span class="line">	dfn[now]=low[now]=++dfscnt;</span><br><span class="line">	s[stop++]=now;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=he[now];i;i=ne[i])&#123;</span><br><span class="line">		<span class="keyword">if</span>(!dfn[ed[i]])&#123;</span><br><span class="line">			tarjan(ed[i]);</span><br><span class="line">			low[now]=min(low[now],low[ed[i]]);</span><br><span class="line">		&#125;<span class="keyword">else</span> <span class="keyword">if</span>(!sccnum[ed[i]])&#123;</span><br><span class="line">			low[now]=min(low[now],dfn[ed[i]]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(dfn[now]==low[now])&#123;</span><br><span class="line">		scccnt++;</span><br><span class="line">		<span class="keyword">do</span>&#123;</span><br><span class="line">			sccnum[s[--stop]]=scccnt;</span><br><span class="line">		&#125;<span class="keyword">while</span>(s[stop]!=now);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;<span class="comment">//tarjin的板子</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	read(n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">		<span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;x&amp;&amp;x)add(i,x);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">		<span class="keyword">if</span>(!dfn[i])tarjan(i);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=he[i];j;j=ne[j])</span><br><span class="line">			<span class="keyword">if</span>(sccnum[i]!=sccnum[ed[j]])&#123;</span><br><span class="line">				du[sccnum[ed[j]]]++;<span class="comment">//统计</span></span><br><span class="line">				ud[sccnum[i]]++;<span class="comment">//统计</span></span><br><span class="line">			&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=scccnt;i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(!du[i])se++;<span class="comment">//入度为0的点</span></span><br><span class="line">		<span class="keyword">if</span>(!ud[i])es++;<span class="comment">//出度为0的点</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;se&lt;&lt;<span class="built_in">endl</span>&lt;&lt;(scccnt==<span class="number">1</span>?<span class="number">0</span>:max(se,es));<span class="comment">//小细节</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>洛谷题库</category>
        <category>usaco</category>
      </categories>
      <tags>
        <tag>强联通分量</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 P4449 【于神之怒加强版】</title>
    <url>/2020/05/30/%E9%A2%98%E8%A7%A3-P4449-%E3%80%90%E4%BA%8E%E7%A5%9E%E4%B9%8B%E6%80%92%E5%8A%A0%E5%BC%BA%E7%89%88%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4449" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p4449" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<h1 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h1><ul>
<li><a href="https://blog.csdn.net/qq_46230164/article/details/105877706" target="_blank" rel="noopener">莫比乌斯反演</a></li>
<li><a href="https://blog.csdn.net/qq_46230164/article/details/105934495" target="_blank" rel="noopener">数论分块</a></li>
</ul>
<p>式子还是正常的推</p>
<p>首先，$ID_k(x)=x^k$</p>
<script type="math/tex; mode=display">\sum_{i=1}^{n} \sum_{j=1}^{m} ID_k(gcd(i,j))</script><script type="math/tex; mode=display">\sum_{d=1} ID_k(d)\sum_{i=1}^{n} \sum_{j=1}^{m} [\gcd(i,j) =d]</script><script type="math/tex; mode=display">\sum_{d=1} ID_k(d)\sum_{i=1}^{\lfloor\frac{n}{d}\rfloor}\sum_{j=1}^{\lfloor\frac{m}{d}\rfloor} [\gcd(i,j) =1]</script><script type="math/tex; mode=display">\sum_{d=1} ID_k(d)\sum_{i=1}^{\lfloor\frac{n}{d}\rfloor}\sum_{j=1}^{\lfloor\frac{m}{d}\rfloor} \sum_{D\mid \gcd(i,j)} \mu(D)</script><script type="math/tex; mode=display">\sum_{d=1}  ID_k(d)\sum_{D=1}^{\min(n,m)}\mu(D)\sum_{i=1}^{\lfloor\frac{n}{dD}\rfloor}\sum_{j=1}^{\lfloor\frac{m}{dD}\rfloor} 1</script><script type="math/tex; mode=display">\sum_{d=1}  ID_k(d)\sum_{D=1}^{\lfloor \frac{n}{d}\rfloor}\mu(D)\lfloor \frac{n}{dD} \rfloor \lfloor \frac{m}{dD} \rfloor</script><p>设 $T=dD$</p>
<script type="math/tex; mode=display">\sum_{T=1}\lfloor \frac{n}{T} \rfloor \lfloor \frac{m}{T} \rfloor \sum_{d|T} ID_k(d) \mu(\frac{T}{d})</script><p>我们发现后面这个东西就是狄利克雷卷积</p>
<p>我们管它叫 $f$ 函数</p>
<p>也就是说</p>
<script type="math/tex; mode=display">f=ID_k*\mu</script><p>由于积性函数卷积性函数还是积性函数</p>
<p>对于 $x\in prime$ $f(x)=x^k-1$ </p>
<p>这样子就直接在线性筛的时候算一下就好了</p>
<p>代码：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sieve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    f[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;MAXN;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!vis[i])&#123;</span><br><span class="line">            prime[++prime[<span class="number">0</span>]]=i;</span><br><span class="line">            f[i]=(pw(i,k)<span class="number">-1</span>+Mod)%Mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=prime[<span class="number">0</span>]&amp;&amp;i*prime[j]&lt;MAXN;j++)&#123;</span><br><span class="line">            vis[i*prime[j]]=<span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>)&#123;f[i*prime[j]]=f[i]*(f[prime[j]]+<span class="number">1</span>)%Mod;<span class="keyword">break</span>;&#125;</span><br><span class="line">            f[i*prime[j]]=f[i]*f[prime[j]]%Mod;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;MAXN;i++)s[i]=(s[i<span class="number">-1</span>]+f[i])%Mod;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>洛谷题库</category>
      </categories>
      <tags>
        <tag>数论，数学</tag>
        <tag>莫比乌斯反演</tag>
        <tag>数论分块</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 P2285 【[HNOI2004]打鼹鼠】</title>
    <url>/2020/05/30/%E9%A2%98%E8%A7%A3-P2285-%E3%80%90-HNOI2004-%E6%89%93%E9%BC%B9%E9%BC%A0%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2285" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p2285" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<p>首先，坐标为 $(x,y)$ 到坐标为 $(a,b)$ 的网格需要的时间为 $|x-a|+|y-b|$</p>
<p>由于题目已经自动帮我们按时间排好序了，所以，我们可以直接 $dp$</p>
<p>考虑背包</p>
<p>代码：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">	<span class="keyword">int</span> t,x,y;</span><br><span class="line">&#125;a[<span class="number">10010</span>];</span><br><span class="line">ll n,k,dp[<span class="number">10010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line">		ll x,y,z;<span class="built_in">cin</span>&gt;&gt;x&gt;&gt;y&gt;&gt;z;</span><br><span class="line">		a[i].t=x;a[i].x=y;a[i].y=z;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line">		dp[i]=<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;i;j++)&#123;</span><br><span class="line">			<span class="keyword">int</span> z=<span class="built_in">abs</span>(a[i].x-a[j].x)+<span class="built_in">abs</span>(a[i].y-a[j].y);</span><br><span class="line">			<span class="keyword">if</span>(a[j].t+z&lt;=a[i].t)dp[i]=max(dp[i],dp[j]+<span class="number">1</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;ll ans=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)ans=max(ans,dp[i]);</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>洛谷题库</category>
        <category>HN省选</category>
      </categories>
      <tags>
        <tag>dp</tag>
      </tags>
  </entry>
  <entry>
    <title>2020-5-16CF反思</title>
    <url>/2020/05/30/P22%E2%80%9C2020-5-16CF%E5%8F%8D%E6%80%9D%E2%80%9D/</url>
    <content><![CDATA[<p>这篇总的题解蒟蒻写了 $3.5h s$！作为回报，你们是不是应该去<a href="https://zhaohaikun.blog.luogu.org/" target="_blank" rel="noopener">$ZHK$ 的洛谷博客</a>里给 $ZHK$ 的所有题解点赞呢！</p>
<a id="more"></a>
<p>CF凉了是显然的，不然也不会写这篇反思了。</p>
<p>开题很快 $AC$ 了 $A$ 和 $B$。</p>
<p>到了 $C$ 的时候定睛一看</p>
<blockquote>
<p>Like any unknown mathematician, Yuri has favourite numbers: $A, B, C$ and $D$, where $A≤B≤C≤D$. Yuri also likes triangles and once he thought: how many non-degenerate triangles with integer sides $x, y$ and $z$ exist, such that $A≤x≤B≤y≤C≤z≤D$ holds?</p>
<p>Yuri is preparing problems for a new contest now, so he is very busy. That’s why he asked you to calculate the number of triangles with described property.</p>
<p>The triangle is called non-degenerate if and only if its vertices are not collinear.</p>
</blockquote>
<p>这段英文还是挺好懂的，就是说一个三角形三条边分别为 $x,y,z$，有如下限制</p>
<script type="math/tex; mode=display">A\le x \le B \le y\le C \le z\le D</script><p>显然等于</p>
<script type="math/tex; mode=display">
A \le x \leq B\\
B \le y \leq C\\
C \le z \leq D</script><p>我们知道三角形要满足 $2$ 边之和大于第 $3$ 边的。</p>
<p>所以 $x +y &gt;z$</p>
<p>我的做法是枚举 $x+y$，答案显然 $=$ $x,y$ 取值方案数 $\times$ $z$ 的取值方案数</p>
<p>对于 $x,y$ 的取值方案数</p>
<p>我猛然想到《组合数学》上的内容，那是不久前刚学的所以现在十分记忆犹新，这种东西，我之前只手算过，压根儿也没有想过有朝一日要用程序算出来。</p>
<p>回到题目</p>
<p>设 $x+y=k$</p>
<p>则</p>
<script type="math/tex; mode=display">
x+y=k\\
A\leq x\leq B\\
B\leq y\leq C</script><p>我们去化解</p>
<script type="math/tex; mode=display">
x+y=k-A-B\\
0\leq x\leq B-A\\
0\leq y\leq C-B</script><p>直接套无限多重集的多重集合的结论</p>
<p>设 $n=k-A-B,X=B-A,Y=C-B$</p>
<script type="math/tex; mode=display">
\begin{pmatrix} n+2-1 \\ n
\end{pmatrix}+
\begin{pmatrix} n-A-1+2-1 \\ n-A-1
\end{pmatrix}+
\begin{pmatrix} n-B-1+2-1 \\ n-B-1
\end{pmatrix}+
\begin{pmatrix} n-A-B-2+2-1 \\ n-A-B-2
\end{pmatrix}</script><p>我们来捋一捋</p>
<script type="math/tex; mode=display">
\begin{pmatrix} n+1 \\ n
\end{pmatrix}+
\begin{pmatrix} n-A \\ n-A-1
\end{pmatrix}+
\begin{pmatrix} n-B \\ n-B-1
\end{pmatrix}+
\begin{pmatrix} n-A-B-1 \\ n-A-B-2
\end{pmatrix}</script><p>然后这个东西巨难调，好不容易过了 $3$ 个样例自信满满地去交得到的确实 $WA$ 声一片。</p>
<p>这个题目的数据挺好造的，于是，我自信满满地打了个对拍，拍了几组发现了几个小问题逐一化解之后又交，又 $WA$。</p>
<p>时间就像哗啦啦的小溪总是在不经意间悄无声息地流走了。时间所剩无几，但我也一直在努力。</p>
<p>之后突然发现这 $4$ 个组合数可以直接求，于是有改了改代码，还是 $WA$。</p>
<p>最后时刻，我把暴力一交发现暴力也 $WA$ 了，我绝望了。</p>
<p>此时的我排名已来到了 $5000+$ 名，$D$、$E$ 和 $F$都没有碰过，但也不敢碰了，不停的死磕 $C$。</p>
<p>带到倒计时种那苍白而又孤独的 $00:00$ 的到来，无助的我也叹了叹气。</p>
<p>窗外一片黑灯瞎火，只有房间还闪烁着些许亮光，$\textsf{\textbf{\textcolor{black}{w}\textcolor{red}{33z8kqrqk8zzzx33}}}$ 怒切 $A$、$B$、$C$ 和 $E$，更给孤独的我的心头埋上了一片阴霾。</p>
<p>风扇还在不停地转动，我为什么就不能在继续呢？</p>
<p>我开始了艰难而又漫长地调题，我在静思中梳理，在思索中奋斗，在 May/16/2020 22:52 我 $AC$ 了，我的心犹如初生的旭日般明亮，$AC$ 的代码和比赛最后一次提交的代码仅仅有一处不同，而正是这一处让我的分数悄然无息而又微妙地发生了变化。</p>
<p>回首再去看看对拍的代码</p>
<p>代码：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span> </span>&#123;</span><br><span class="line">	T RR = <span class="number">1</span>; FF = <span class="number">0</span>; <span class="keyword">char</span> CH = getchar();</span><br><span class="line">	<span class="keyword">for</span> (; !<span class="built_in">isdigit</span>(CH); CH = getchar())<span class="keyword">if</span> (CH == <span class="string">'-'</span>)RR = <span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span> (; <span class="built_in">isdigit</span>(CH); CH = getchar())FF = (FF &lt;&lt; <span class="number">1</span>) + (FF &lt;&lt; <span class="number">3</span>) + (CH ^ <span class="number">48</span>);</span><br><span class="line">	FF *= RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(T FF)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (FF &lt; <span class="number">0</span>) &#123;</span><br><span class="line">		<span class="built_in">putchar</span>(<span class="string">'-'</span>);</span><br><span class="line">		FF *= <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (FF &gt; <span class="number">9</span>)write(FF / <span class="number">10</span>);</span><br><span class="line">	<span class="built_in">putchar</span>(FF % <span class="number">10</span> + <span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">writen</span><span class="params">(T FF)</span> </span>&#123;</span><br><span class="line">	write(FF);</span><br><span class="line">	<span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">C</span><span class="params">(ll m, ll n)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (n == <span class="number">0</span>)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">if</span> (m &lt;= <span class="number">0</span> || n &lt;= <span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	ll ans = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span> (ll i = <span class="number">0</span>; i &lt; n; i++)ans *= m - i;</span><br><span class="line">	<span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt;= n; i++)ans /= i;</span><br><span class="line">	<span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">work</span><span class="params">(ll i, ll l, ll r)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> min(i - l + <span class="number">1</span>, r - l + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">xxx</span><span class="params">(ll a,ll b,ll c,ll d)</span></span>&#123;</span><br><span class="line">	ll ans = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (ll i = c + <span class="number">1</span>; i &lt;= b + c; i++) &#123;</span><br><span class="line">		ll x = b - a, y = c - b;</span><br><span class="line">		ll m = i - a - b;</span><br><span class="line">		ll n = m + <span class="number">1</span> - max((m - x), (ll)<span class="number">0</span>) - max((m - y), (ll)<span class="number">0</span>) + max((m - x - y), (ll)<span class="number">0</span>);</span><br><span class="line">		ans += max(n, (ll)<span class="number">0</span>) * max((ll)<span class="number">0</span>, work(i - <span class="number">1</span>, c, d));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">xx</span><span class="params">(ll a,ll b,ll c,ll d)</span></span>&#123;</span><br><span class="line">	ll ans=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> x=a;x&lt;=b;x++)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> y=b;y&lt;=c;y++)&#123;</span><br><span class="line">			ans+=max((ll)<span class="number">0</span>,work(x+y<span class="number">-1</span>,c,d));</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;<span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	srand(time(<span class="literal">NULL</span>));</span><br><span class="line">	<span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">		ll a=<span class="number">1</span>+rand()%<span class="number">20</span>,b=a+rand()%<span class="number">20</span>,c=b+rand()%<span class="number">20</span>,d=c+rand()%<span class="number">20</span>;</span><br><span class="line">		<span class="keyword">if</span>(xx(a,b,c,d)!=xxx(a,b,c,d))&#123;</span><br><span class="line">			<span class="built_in">cout</span>&lt;&lt;a&lt;&lt;<span class="string">" "</span>&lt;&lt;b&lt;&lt;<span class="string">" "</span>&lt;&lt;c&lt;&lt;<span class="string">" "</span>&lt;&lt;d&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">			<span class="built_in">cout</span>&lt;&lt;xx(a,b,c,d)&lt;&lt;<span class="string">" "</span>&lt;&lt;xxx(a,b,c,d);</span><br><span class="line">			<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>悲楚也会变得快乐。</p>
<p>$\textsf{\textbf{\textcolor{black}{w}\textcolor{red}{33z8kqrqk8zzzx33}}}$ 的做法比我的做法简单的多，但我的方法就是我的方法。</p>
<p>$\textsf{\textbf{\textcolor{black}{h}\textcolor{red}{zw}}}$ 大佬说过：</p>
<blockquote>
<p>自己选择的路跪着也要走完</p>
</blockquote>
<p>OI比赛似乎注定是无情的，在坚强的意志品质的同时，几分理性同样是不可或缺的，$D$、$E$ 和 $F$ 我明天再调qwq</p>
]]></content>
      <categories>
        <category>反思</category>
      </categories>
      <tags>
        <tag>反思</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 P2052 【[NOI2011]道路修建】</title>
    <url>/2020/05/30/%E3%80%90-NOI2011-%E9%81%93%E8%B7%AF%E4%BF%AE%E5%BB%BA%E3%80%91%E2%80%9D/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2052" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p2052" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<p>首先对于一棵树，他肯定是一个<strong>连通图</strong>。</p>
<p>所以，对于一条边 $(x,y)$，$x$ 连的节点个数 $-$ $y$ 连的节点个数 $=$ $($ $n$ $-$ $y$ 连的节点个数 $)$ $-$ $y$ 连的节点个数</p>
<p>因为这张图是连通的，所以<strong>所有节点不在 $x$ 那端，就在 $y$ 那端</strong>。</p>
<p>我们回到树，我们可以 $O(n)$ 的时间遍历一遍树，并求出 $size$。</p>
<p>大家可以看看我的代码</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span> </span>&#123;</span><br><span class="line">	T RR = <span class="number">1</span>; FF = <span class="number">0</span>; <span class="keyword">char</span> CH = getchar();</span><br><span class="line">	<span class="keyword">for</span> (; !<span class="built_in">isdigit</span>(CH); CH = getchar())<span class="keyword">if</span> (CH == <span class="string">'-'</span>)RR = <span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span> (; <span class="built_in">isdigit</span>(CH); CH = getchar())FF = (FF &lt;&lt; <span class="number">1</span>) + (FF &lt;&lt; <span class="number">3</span>) + (CH ^ <span class="number">48</span>);</span><br><span class="line">	FF *= RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; &gt;v[N];</span><br><span class="line">ll sz[N], ans, n;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> fa)</span> </span>&#123;</span><br><span class="line">	sz[x] = <span class="number">1</span>;<span class="comment">//求size</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">auto</span> i : v[x]) &#123;</span><br><span class="line">		<span class="keyword">if</span> (i.first != fa) &#123;</span><br><span class="line">			dfs(i.first, x);</span><br><span class="line">			sz[x] += sz[i.first];</span><br><span class="line">			ans += <span class="number">1l</span>l * i.second * <span class="built_in">abs</span>(sz[i.first] - (n - sz[i.first]));<span class="comment">//上面的方法</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	read(n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">		<span class="keyword">int</span> x, y, z;</span><br><span class="line">		read(x); read(y); read(z);</span><br><span class="line">		v[x].push_back(make_pair(y, z));</span><br><span class="line">		v[y].push_back(make_pair(x, z));</span><br><span class="line">	&#125; dfs(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; ans;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>洛谷题库</category>
        <category>NOI</category>
      </categories>
      <tags>
        <tag>dp</tag>
        <tag>树</tag>
      </tags>
  </entry>
  <entry>
    <title>NOI Online Round 3 PJ 游记</title>
    <url>/2020/05/30/postNOI-Online-Round-3-PJ-%E6%B8%B8%E8%AE%B0/</url>
    <content><![CDATA[<p>这篇总的题解蒟蒻写了 $3.5h s$！作为回报，你们是不是应该去<a href="https://zhaohaikun.blog.luogu.org/" target="_blank" rel="noopener">$ZHK$ 的洛谷博客</a>里给 $ZHK$ 的所有题解点赞呢！</p>
<a id="more"></a>
<h1 id="Day-21"><a href="#Day-21" class="headerlink" title="$Day -21$"></a>$Day -21$</h1><p>火速报名了 $NOI-Online$ <del>想成为 $\texttt{JS-00001}$ 啊</del>qwq。。。</p>
<p>实际：$JS-00383$</p>
<h1 id="Day-20-sim-1"><a href="#Day-20-sim-1" class="headerlink" title="$Day -20\sim -1$"></a>$Day -20\sim -1$</h1><p>自闭与于文化课。。。QAQ</p>
<h1 id="Day-0"><a href="#Day-0" class="headerlink" title="$Day 0$"></a>$Day 0$</h1><p>去打羽毛球了，所以试机咕咕咕了。。。</p>
<p>自己家的电脑，自己家的网，为什么要去登录啊！（登不上显然是CCF的问题哈）</p>
<p>打完羽毛球顺便做完了作业，明天全力 $NOI Online$ 了。</p>
<h1 id="Day-1"><a href="#Day-1" class="headerlink" title="$Day 1$"></a>$Day 1$</h1><p>考 $PJ$ 前就知道自己 $TG$ 已经没了，已经炸了。。。</p>
<p>但是，炸了都炸了又有什么办法呢？</p>
<p>或许……</p>
<p>啊！整个人都有点萎靡不振了，但是 $PJ$ 还要硬着头皮上啊！</p>
<p>开题直接看 $T1$，挺裸的诶，我会哈（事实证明比 $TG$ 的 $T1$ 难QAQ）</p>
<p>很快就开始做 $T2$ 了，简单的一个 $BFS$<del>BFW</del> 找联通块，似乎也并不难。。。</p>
<p>看 $T3$ ，<del>感觉这次 $PJ$ 前 $25\%$ 的分数先说不定需要达到 $300$ 分啊</del> 我谔谔。。。</p>
<p>至于 $T3$，我写了个二进制拆分。</p>
<p>写完就交了，样例过了也不拍了。。。（爆零的前奏。。。）</p>
<h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>成功完完。。。</p>
<p>$T1$ 数组开小了，$T3$ 变量写错了。。。</p>
<p>而这些毒瘤的样例都没能查出来。。。</p>
<p>自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了自闭了</p>
<p>哎，为什么我总是没啊！</p>
]]></content>
      <categories>
        <category>游记</category>
      </categories>
      <tags>
        <tag>游记</tag>
      </tags>
  </entry>
  <entry>
    <title>NOI Online Round 3 TG 游记</title>
    <url>/2020/05/30/postNOI-Online-Round-3-TG-%E6%B8%B8%E8%AE%B0/</url>
    <content><![CDATA[<p>这篇总的题解蒟蒻写了 $3.5h s$！作为回报，你们是不是应该去<a href="https://zhaohaikun.blog.luogu.org/" target="_blank" rel="noopener">$ZHK$ 的洛谷博客</a>里给 $ZHK$ 的所有题解点赞呢！</p>
<a id="more"></a>
<h1 id="Day-21"><a href="#Day-21" class="headerlink" title="$Day -21$"></a>$Day -21$</h1><p>火速报名了 $NOI-Online$ <del>想成为 $\texttt{JS-00001}$ 啊</del>qwq。。。</p>
<p>实际：$JS-00220$</p>
<h1 id="Day-20-sim-1"><a href="#Day-20-sim-1" class="headerlink" title="$Day -20\sim -1$"></a>$Day -20\sim -1$</h1><p>自闭与于文化课。。。QAQ</p>
<h1 id="Day-0"><a href="#Day-0" class="headerlink" title="$Day 0$"></a>$Day 0$</h1><p>去打羽毛球了，所以试机咕咕咕了。。。</p>
<p>自己家的电脑，自己家的网，为什么要去登录啊！（登不上显然是CCF的问题哈）</p>
<p>打完羽毛球顺便做完了作业，明天全力 $NOI Online$ 了。</p>
<h1 id="Day-1"><a href="#Day-1" class="headerlink" title="$Day 1$"></a>$Day 1$</h1><p>似乎 $CCF$ 晚了亿分钟，我 $8:27$ 才能访问网站。。。</p>
<p>$8:30$ 进入了考试，加油加油加油加油加油加油加油加油加油加油加油加油加油加油！</p>
<p>开题开题开题开题开题开题开题开题开题开题开题开题开题开题开题开题开题开题开题</p>
<p>先保存了 $pdf$ 防患未然。</p>
<p>看了看 $T1$，题目貌似好难啊！！！等等，这不是一道水题吗？？？</p>
<p>一个打擂法，直接用前缀和找出 <strong>长度为 $k+1$ 的区间和中的最大值。</strong></p>
<p>$2 minutes$ 打完，为了保险起见 $\texttt{long} \texttt{long}$ 也开了。</p>
<p>应该不会向上次那样坑一大堆吧qwq。。。</p>
<p>开 $T2$ ！</p>
<p>$T1$ 做的如此顺利，自然 $T2$ 将会做得很忐忑。。。</p>
<p>$T1$ 如此简单，自然 $T2$ 将会很难。。。</p>
<p>开题的情境如下：</p>
<p>这数据范围好像很倍增的样子诶。。。</p>
<p>等等，这题怎么倍增，跟其他数好像有关诶。。。</p>
<p>不急不急，先把递推式推出来，先把暴力写出来。。。</p>
<p>码码码。。。</p>
<p>等等，这题好像很矩阵快速幂的样子诶。。。</p>
<p>我上次写矩阵快速幂都是什么时候了。。。</p>
<p>众所周知，我是看着 $\textsf{sto}$ <a href="https://www.luogu.com.cn/user/108616" target="_blank" rel="noopener">$\textsf{\textbf{\textcolor{black}{a}\textcolor{red}{pocryphal}}}$</a> 大神的博客长大的，我搭矩阵快速幂也是跟着他打的。。。</p>
<p>不知怎么回事代码打好了（雾</p>
<p>手造了几个数据过了。</p>
<p>把那些数据放一下吧：</p>
<p>第 $1$ 组：</p>
<p>$In：$<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">8 12 3</span><br><span class="line">11 4 17 12 20 506 243 95</span><br><span class="line">1 4</span><br><span class="line">1 2</span><br><span class="line">2 4</span><br><span class="line">2 3</span><br><span class="line">3 4</span><br><span class="line">2 5</span><br><span class="line">5 4</span><br><span class="line">1 6</span><br><span class="line">6 5</span><br><span class="line">7 2</span><br><span class="line">7 4</span><br><span class="line">8 1</span><br><span class="line">10</span><br><span class="line">6</span><br><span class="line">8</span><br></pre></td></tr></table></figure><br>$out：$<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">31</span><br><span class="line">11</span><br><span class="line">28</span><br></pre></td></tr></table></figure></p>
<p>第 $2$ 组：</p>
<p>$in：$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">9 20 3</span><br><span class="line">11 4 147 12 201231 506 243 95 23141</span><br><span class="line">1 2</span><br><span class="line">2 4</span><br><span class="line">2 3</span><br><span class="line">2 5</span><br><span class="line">2 8</span><br><span class="line">8 5</span><br><span class="line">5 4</span><br><span class="line">1 6</span><br><span class="line">6 5</span><br><span class="line">7 2</span><br><span class="line">7 4</span><br><span class="line">8 1</span><br><span class="line">9 1</span><br><span class="line">9 2</span><br><span class="line">9 3</span><br><span class="line">9 4</span><br><span class="line">9 5</span><br><span class="line">9 6</span><br><span class="line">9 7</span><br><span class="line">9 8</span><br><span class="line">51</span><br><span class="line">11</span><br><span class="line">32</span><br></pre></td></tr></table></figure>
<p>$out：$</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">23464</span><br><span class="line">215307</span><br><span class="line">215547</span><br></pre></td></tr></table></figure>
<p>之后就去看 $T3$ 了，$T3$ 难的要死，不会不会。。。</p>
<h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>$2020-5-24 13:44$ 发现自己 $T2$ 炸了，没了。。。</p>
]]></content>
      <categories>
        <category>游记</category>
      </categories>
      <tags>
        <tag>游记</tag>
      </tags>
  </entry>
  <entry>
    <title>2020-5-9模拟赛题解</title>
    <url>/2020/05/30/2020-5-9%E6%A8%A1%E6%8B%9F%E8%B5%9B%E9%A2%98%E8%A7%A3/</url>
    <content><![CDATA[<p>这篇总的题解蒟蒻写了 $3.5h s$！作为回报，你们是不是应该去<a href="https://zhaohaikun.blog.luogu.org/" target="_blank" rel="noopener">$ZHK$ 的洛谷博客</a>里给 $ZHK$ 的所有题解点赞呢！</p>
<a id="more"></a>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>$6:30$ 开考，我大概 $8:00$ 把这套题拍好，充分吸取 $\texttt{NOI Online}$ 的教训，所以每题都拍上了。</p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="T1"><a href="#T1" class="headerlink" title="T1"></a>T1</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><blockquote>
<p>在一个网格图中，每次可以从 $(x,y)$ </p>
<ul>
<li>向上移动到 $(x-1,y)$；</li>
<li>向下移动到 $(x+1,y)$</li>
<li>向左移动到 $(x,y-1)$</li>
<li>向右移动到 $(x,y+1)$</li>
</ul>
<p>求从 $0,0$ 点出发，依此经过 $(x_1,y_1)\sim (x_n,y_n)$ 的最短距离</p>
</blockquote>
<h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>网格图中的最短距离 $=$ 曼哈顿距离</p>
<p>曼哈顿距离 $=$ 行的绝对值 $+$ 列的绝对值</p>
<h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,ans,x[<span class="number">100010</span>],y[<span class="number">100010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	read(n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)read(x[i]);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)read(y[i]);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		ans+=<span class="built_in">abs</span>(x[i]-x[i<span class="number">-1</span>])+<span class="built_in">abs</span>(y[i]-y[i<span class="number">-1</span>]);</span><br><span class="line">	&#125;<span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="T2"><a href="#T2" class="headerlink" title="T2"></a>T2</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><blockquote>
<p>给出 $n$ 个人的名字和他们的 $\texttt{Rating}$，求这 $n$ 个人的排名（第 $i$ 个人的排名定义为 $\texttt{Rating}$ 比第 $i$ 个人高的人数 $+1$）</p>
</blockquote>
<h3 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h3><p>这题的答案跟名字没有关系，而且数据范围很小。</p>
<p>这样的话，我们怎么做都可以。</p>
<p>我的话是对这个数组进行排序，然后暴力查找这个最早出现在第几个（因为排名 $=$ $\texttt{Rating}$ 比他高的人数 $+$ $1$）</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,a[<span class="number">100010</span>],b[<span class="number">100010</span>];</span><br><span class="line"><span class="built_in">string</span> st[<span class="number">100010</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a&gt;b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	read(n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">cin</span>&gt;&gt;st[i];</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)read(a[i]),b[i]=a[i];</span><br><span class="line">	sort(b+<span class="number">1</span>,b+n+<span class="number">1</span>,cmp);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)<span class="comment">//暴力查找</span></span><br><span class="line">			<span class="keyword">if</span>(b[j]==a[i])&#123;</span><br><span class="line">				a[i]=j;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">cout</span>&lt;&lt;a[i]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="T3"><a href="#T3" class="headerlink" title="T3"></a>T3</h2><h3 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h3><blockquote>
<p>有 $4$ 个人 $\texttt{A,B,C,D}$，每个人有一个实力值。分别为 $a,b,c,d$</p>
<p>你现在要把他们分成两个队伍，要求每个队伍里都得有人&#44;并且使两队实力值之和的差最小。</p>
</blockquote>
<h3 id="分析-2"><a href="#分析-2" class="headerlink" title="分析"></a>分析</h3><p>这题直接暴力找出所有方法就好了。</p>
<p>并没有什么技巧。</p>
<h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a,b,c,d;</span><br><span class="line">	read(a);read(b);read(c);read(d);</span><br><span class="line">	<span class="keyword">int</span> ans=INT_MAX;</span><br><span class="line">	ans=min(ans,<span class="built_in">abs</span>((a)-(b+c+d)));</span><br><span class="line">	ans=min(ans,<span class="built_in">abs</span>((b)-(a+c+d)));</span><br><span class="line">	ans=min(ans,<span class="built_in">abs</span>((c)-(a+b+d)));</span><br><span class="line">	ans=min(ans,<span class="built_in">abs</span>((d)-(a+b+c)));</span><br><span class="line">	ans=min(ans,<span class="built_in">abs</span>((a+b)-(c+d)));</span><br><span class="line">	ans=min(ans,<span class="built_in">abs</span>((a+c)-(b+d)));</span><br><span class="line">	ans=min(ans,<span class="built_in">abs</span>((a+d)-(b+c)));</span><br><span class="line">	ans=min(ans,<span class="built_in">abs</span>((b+c)-(a+d)));</span><br><span class="line">	ans=min(ans,<span class="built_in">abs</span>((b+d)-(a+c)));</span><br><span class="line">	ans=min(ans,<span class="built_in">abs</span>((c+d)-(a+b)));</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="T4"><a href="#T4" class="headerlink" title="T4"></a>T4</h2><h3 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h3><blockquote>
<p>一个序列，你可以用一个单位的时间从头部或尾部拿走一个数字，并得到这个数的值。你拿走这个数后，其他没有被拿走的数字就会全部 $-1$。</p>
</blockquote>
<h3 id="分析-3"><a href="#分析-3" class="headerlink" title="分析"></a>分析</h3><p>这题的话很显然有一个结论，那就是<strong>吃的顺序不会影响到答案。</strong></p>
<p>这样就简单了，我们求遍和，再把该减的减去就行了。</p>
<h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,x,s;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	read(n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		read(x);</span><br><span class="line">		s+=x;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;s-(n<span class="number">-1</span>)*n/<span class="number">2</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="T5"><a href="#T5" class="headerlink" title="T5"></a>T5</h2><h3 id="题目描述-4"><a href="#题目描述-4" class="headerlink" title="题目描述"></a>题目描述</h3><blockquote>
<p>子序列的定义：序列 $\texttt{a}$ 是 $\texttt{b}$ 的子序列，当且仅当从 $\texttt{b}$ 中删除若干个元素能得到 $\texttt{a}$。<br>小 $\texttt{R}$ 有两个序列 $\texttt{a}$，$\texttt{b}$,<br>要求你找到一个最长的序列c,满足以下条件中的任何一个:</p>
<ol>
<li><p>c是a的子序列但不是b的子序列；</p>
</li>
<li><p>c是b的子序列但不是a的子序列；</p>
</li>
</ol>
<p>因为出题人不会写 <code>spj</code>，所以就只要你输出c的最长长度即可.<br>如果找不到,就输出0.</p>
</blockquote>
<h3 id="分析-4"><a href="#分析-4" class="headerlink" title="分析"></a>分析</h3><p>这题其实并不复杂。</p>
<ul>
<li>如果两个序列不完全相同，显然答案 $=$ $\max\{$ 第 $1$ 个序列的长度，第 $2$ 个序列的长度 $\}$</li>
<li>如果两个序列完全相同，答案自然是 $0$。</li>
</ul>
<h3 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100010</span>],b[<span class="number">100010</span>];<span class="comment">//见到 105 我就害怕</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n,m;</span><br><span class="line">	read(n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)read(a[i]);</span><br><span class="line">	read(m);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)read(b[i]);</span><br><span class="line">	<span class="keyword">if</span>(n!=m)<span class="built_in">cout</span>&lt;&lt;max(n,m);</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">			<span class="keyword">if</span>(a[i]!=b[i])&#123;</span><br><span class="line">				<span class="built_in">cout</span>&lt;&lt;n;</span><br><span class="line">				<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		<span class="built_in">cout</span>&lt;&lt;<span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="T6"><a href="#T6" class="headerlink" title="T6"></a>T6</h2><h3 id="题目描述-5"><a href="#题目描述-5" class="headerlink" title="题目描述"></a>题目描述</h3><blockquote>
<p>有 $n$ 个石头,第 $i$ 个石头的坐标为 $a_i$，不保证 $a_i$ 有序。<br>你只能往前跳，并且你必须从 $0$ 开始，中途踩到所有的石头并最后跳到坐标为m的位置。<br>你有一个能力值 $G$，$G$ 不是定值在一次跳跃中不会变化，但在一次跳跃中你每次能跳跃的距离不能大于你的能力值 $G$。<br>有时候你可能跳不到石头上，这时候你就会落到河里.安全起见,你只能落水不超过 $k$ 次。<br>求出为了使落水不超过 $k$ 次，你至少需要的能力值。</p>
</blockquote>
<h3 id="分析-5"><a href="#分析-5" class="headerlink" title="分析"></a>分析</h3><p>这个直接二分 $G$，看落水次数是否 $\leq k$ 就行了。</p>
<h3 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100010</span>],n,m,k;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> z)</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> cishu=<span class="number">0</span>;<span class="comment">//拼音应该看的懂的吧</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="keyword">int</span> x=a[i]-a[i<span class="number">-1</span>]<span class="number">-1</span>;</span><br><span class="line">		cishu+=x/z;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> cishu&lt;=k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	read(n);read(m);read(k);</span><br><span class="line">	n++;<span class="comment">//a[1]=0;</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)read(a[i]);</span><br><span class="line">	a[++n]=m;<span class="comment">//一点点的小技巧</span></span><br><span class="line">	sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>);</span><br><span class="line">	<span class="keyword">int</span> l=<span class="number">-1</span>,r=INT_MAX;</span><br><span class="line">	<span class="keyword">while</span>(l+<span class="number">1</span>&lt;r)&#123;</span><br><span class="line">		<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">if</span>(check(mid))r=mid;</span><br><span class="line">		<span class="keyword">else</span> l=mid;</span><br><span class="line">	&#125;<span class="built_in">cout</span>&lt;&lt;r;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="T7"><a href="#T7" class="headerlink" title="T7"></a>T7</h2><h3 id="题目描述-6"><a href="#题目描述-6" class="headerlink" title="题目描述"></a>题目描述</h3><blockquote>
<p>有一个长为 $n$ 的序列 $a_1,a_2,\sim,a_n$。<br>记 $s(L,R) = \max\{a[L],a[L+1],…..,a[R]\}-\min\{a[L],a[L+1],…a[R]\} (L\leq R)$，即 $s(L,R)$ 为序列中第 $L$ 个数到第 $R$ 个数的最大值和最小值之差。<br>求出对于所有的满足 $1\leq L\leq R\leq n$ 的 $L,R$ 的 $s(L,R)$ 之和。</p>
</blockquote>
<h3 id="分析-6"><a href="#分析-6" class="headerlink" title="分析"></a>分析</h3><p>$\texttt{RMQ}$ 万岁！智商不够，数据结构来凑。</p>
<p>我的这种做法很不要动脑子，我暂时很没找到别的做法。</p>
<h4 id="texttt-RMQ-算法"><a href="#texttt-RMQ-算法" class="headerlink" title="$\texttt{RMQ}$ 算法"></a>$\texttt{RMQ}$ 算法</h4><p>简单讲讲 $\texttt{RMQ}$</p>
<p>$\texttt{RMQ}$ 又称 $\texttt{ST}$ 表，可以实现 $O(1)$ 静态区间查询最大或最小值，线段树的话会多一个 $\log$。并且这种算法初始化的时间复杂度也是非常优秀的—— $n\log_2 n$。</p>
<p>这个东西如何实现呢？这个东西本质上就是一个<strong>倍增</strong>。</p>
<p>定义 $F_{i,j}$ 表示第 $i\sim i+2^{j}$ 个数中最小的。</p>
<p>学过倍增的同学，这个递推式应该很简单就能推出来。</p>
<p>重点讲查找，其实上面的内容可能不足为奇，但是查找这部分确实有技术含量了。</p>
<p>首先，设一个数为 $2^x$</p>
<p>对于任意数，一定可以找到 $x$ 满足以下条件：</p>
<ul>
<li>$2^x \leq$  这个数</li>
<li>$2^x\times 2 \geq$ 这个数</li>
</ul>
<p>没有理解也没关系，我们来看这个算法到达是怎么实现的</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjAvMDUvMjkvOHA3TFhQUnNZQ1ZJa2puLnBuZw?x-oss-process=image/format,png" alt="在这里插入图片描述"></p>
<p>这个图应该还是满直观的</p>
<h3 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line">ll f1[<span class="number">17</span>][<span class="number">100010</span>],f2[<span class="number">17</span>][<span class="number">100010</span>],b[<span class="number">100010</span>],a[<span class="number">100010</span>],n,ans;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bulid</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">16</span>;j++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">			f1[j][i]=max(f1[j<span class="number">-1</span>][i],f1[j<span class="number">-1</span>][i+(<span class="number">1</span>&lt;&lt;(j<span class="number">-1</span>))]);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">16</span>;j++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">			f2[j][i]=min(f2[j<span class="number">-1</span>][i],f2[j<span class="number">-1</span>][i+(<span class="number">1</span>&lt;&lt;(j<span class="number">-1</span>))]);</span><br><span class="line">&#125;<span class="comment">//RMQ</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Max</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> len=r-l+<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">return</span> max(f1[b[len]][l],f1[b[len]][r+<span class="number">1</span>-(<span class="number">1</span>&lt;&lt;b[len])]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Min</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> len=r-l+<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">return</span> min(f2[b[len]][l],f2[b[len]][r+<span class="number">1</span>-(<span class="number">1</span>&lt;&lt;b[len])]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	read(n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)read(a[i]);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)f1[<span class="number">0</span>][i]=a[i];<span class="comment">//RMQ初始化</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)f2[<span class="number">0</span>][i]=a[i];<span class="comment">//RMQ初始化</span></span><br><span class="line">	bulid();</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">16</span>;i++)b[<span class="number">1</span>&lt;&lt;i]++;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)b[i]+=b[i<span class="number">-1</span>];</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">			ans+=Max(i,j)-Min(i,j);</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="T8"><a href="#T8" class="headerlink" title="T8"></a>T8</h2><h3 id="题目描述-7"><a href="#题目描述-7" class="headerlink" title="题目描述"></a>题目描述</h3><blockquote>
<p>有一个长为 $n$ 的序列 $a_1 \sim a_n$，保证序列里的数字都是 $0$ 或 $1$。<br>记 $z(x)$ 为关于整数 $x$ 的函数。</p>
<ul>
<li>当 $x$ 为奇数时 $z(x) = 1$；</li>
<li>当 $x$ 为偶数时 $z(x) = 0$。</li>
</ul>
<p>记 $f(L,R) = z(a[L]+a[L+1]+…+a[R])$。<br>记 $s(L,R) = z$（所有满足 $L\leq i\leq j\leq R$ 的 $f(i,j)$ 之和）<br>有 $q$ 次询问，每次给你一个 $L,R$，要你求出 $s(L,R)$ 的值。</p>
</blockquote>
<h3 id="分析-7"><a href="#分析-7" class="headerlink" title="分析"></a>分析</h3><h4 id="找规律"><a href="#找规律" class="headerlink" title="找规律"></a>找规律</h4><p>这道题我们先不要管 $\bmod 2$。</p>
<p>我们先来看看 $1\sim n$ 中每个数在所有 $1\leq L\leq R\leq n$ 中 $L\sim R$ 的区间中被计算了多少次。（本来其实是希望用差分序列找通项式的，结果有意外的惊喜）</p>
<p>先来写个程序</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,a[<span class="number">100010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	read(n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;=n;j++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;=j;k++)</span><br><span class="line">				a[k]++;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">cout</span>&lt;&lt;a[i]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>我们来试试不同 $n$ 的值会对计算次数产生什么影响。</p>
<ul>
<li>当 $n$ $=$ $1$ 时，程序中的 $a$ 序列为 <code>1</code>；</li>
<li>当 $n$ $=$ $2$ 时，程序中的 $a$ 序列为 <code>2 2</code>；</li>
<li>当 $n$ $=$ $3$ 时，程序中的 $a$ 序列为 <code>3 4 3</code>；</li>
<li>当 $n$ $=$ $4$ 时，程序中的 $a$ 序列为 <code>4 6 6 4</code>；</li>
<li>当 $n$ $=$ $5$ 时，程序中的 $a$ 序列为 <code>5 8 9 8 5</code>；</li>
<li>当 $n$ $=$ $6$ 时，程序中的 $a$ 序列为 <code>6 10 12 12 10 6</code>；</li>
<li>当 $n$ $=$ $7$ 时，程序中的 $a$ 序列为 <code>7 12 15 16 15 12 7</code>。</li>
</ul>
<p>这个时候我们再来关注一下 $\bmod 2$ 的余数</p>
<ul>
<li>当 $n$ $=$ $1$ 时，程序中的 $a$ 序列为 <code>1</code>；</li>
<li>当 $n$ $=$ $2$ 时，程序中的 $a$ 序列为 <code>0 0</code>；</li>
<li>当 $n$ $=$ $3$ 时，程序中的 $a$ 序列为 <code>1 0 1</code>；</li>
<li>当 $n$ $=$ $4$ 时，程序中的 $a$ 序列为 <code>0 0 0 0</code>；</li>
<li>当 $n$ $=$ $5$ 时，程序中的 $a$ 序列为 <code>1 0 1 0 1</code>；</li>
<li>当 $n$ $=$ $6$ 时，程序中的 $a$ 序列为 <code>0 0 0 0 0 0</code>；</li>
<li>当 $n$ $=$ $7$ 时，程序中的 $a$ 序列为 <code>1 0 1 0 1 0 1</code>。</li>
</ul>
<p>规律已经很明显了</p>
<ul>
<li>当 $n$ 为偶数的时候，全部都为 $0$；</li>
<li>当 $n$ 为奇数的时候，一个 $0$ 一个 $1$ 间隔开来的。</li>
</ul>
<p>所以</p>
<ul>
<li>当询问区间长度为偶数时，直接输出 $0$；</li>
<li>当询问区间长度为奇数是，答案为 $a_L,a_{L+2},a_{L+4} \ldots a_{R}$</li>
</ul>
<h4 id="前缀和"><a href="#前缀和" class="headerlink" title="前缀和"></a>前缀和</h4><p>如何求出 $a_L,a_{L+2},a_{L+4} \ldots a_{R}$ 呢？</p>
<p>我们可以用上<strong>前缀和</strong>。</p>
<p>我们这样求出</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)s[i]=s[i<span class="number">-2</span>]+a[i];<span class="comment">//似乎RE一点点没关系</span></span><br></pre></td></tr></table></figure>
<p>这样就好办了，我们直接去解决询问了。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span>(T--)&#123;</span><br><span class="line">    <span class="keyword">int</span> l,r;</span><br><span class="line">    read(l);read(r);</span><br><span class="line">    <span class="keyword">if</span>((r-l+<span class="number">1</span>)%<span class="number">2</span>==<span class="number">0</span>)<span class="built_in">puts</span>(<span class="string">"0"</span>);<span class="comment">//区间的长度为偶数</span></span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">int</span> ans=(s[r]-s[l<span class="number">-2</span>])%<span class="number">2</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100010</span>],s[<span class="number">100010</span>],n,T;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	read(n);read(T);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)read(a[i]);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)s[i]=s[i<span class="number">-2</span>]+a[i];</span><br><span class="line">	<span class="keyword">while</span>(T--)&#123;</span><br><span class="line">		<span class="keyword">int</span> l,r;</span><br><span class="line">		read(l);read(r);</span><br><span class="line">		<span class="keyword">if</span>((r-l+<span class="number">1</span>)%<span class="number">2</span>==<span class="number">0</span>)<span class="built_in">puts</span>(<span class="string">"0"</span>);<span class="comment">//区间的长度为偶数</span></span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="keyword">int</span> ans=(s[r]-s[l<span class="number">-2</span>])%<span class="number">2</span>;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>这场比赛也正是检查的好，只有有这个习惯，才能保证该有的分数能全部拿到。</p>
<p>到目前为止，还有一点点的遗憾，$T8$ 我确乎不会对那个规律进行证明，继续思考吧！</p>
]]></content>
      <categories>
        <category>模拟赛</category>
      </categories>
      <tags>
        <tag>二分</tag>
        <tag>模拟</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 P6281 【[USACO20OPEN]Social Distancing S】</title>
    <url>/2020/04/05/%E9%A2%98%E8%A7%A3-P6281-%E3%80%90-USACO20OPEN-Social-Distancing-S%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P6281" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p6281" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<p>这道题是一个二分的模板，先讲一下二分。</p>
<p>二分是确定一个答案然后对其分析，而答案常常有这样一种情况：</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjAvMDIvMjMvMW9nTFVyN09JVHhTVjhSLnBuZw?x-oss-process=image/format,png" alt=""></p>
<p>或</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjAvMDIvMjMveTFGTmhVYVRLSUFRQkNvLnBuZw?x-oss-process=image/format,png" alt=""></p>
<p>题目通常会让我们找符合条件的最大值或最小值。</p>
<p>以这道题为例，就是要在可行的社交距离中找到最大值。</p>
<p>我们发现，社交距离比最优解大的都可以，不最优解小的都不可以。</p>
<p>这个我们叫左闭右开。</p>
<p>二分顾名思义，就是二分。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> l=<span class="number">0</span>,r=INT_MAX/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">while</span>(l+<span class="number">1</span>&lt;r)&#123;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(check(mid))l=mid;<span class="comment">//这里不同</span></span><br><span class="line">    <span class="keyword">else</span> r=mid;<span class="comment">//这里不同</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>我们可以去写一下 <code>check</code>:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">	ll l=<span class="number">0</span>,ans=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">		l=max(l,a[i].a);<span class="comment">//左端点</span></span><br><span class="line">		<span class="keyword">if</span>(a[i].b&gt;=l)&#123;<span class="comment">//a[i].r是右端点</span></span><br><span class="line">			ll X=(a[i].b-l)/x+<span class="number">1</span>;<span class="comment">//站的牛的数量</span></span><br><span class="line">			ans=ans+X;<span class="comment">//奶牛数量+X</span></span><br><span class="line">			l=l+X*x;<span class="comment">//更新左端点</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans&gt;=n;<span class="comment">//是否可行</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>总代码：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long<span class="comment">//注意开long long</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXM=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">	<span class="keyword">int</span> a,b;</span><br><span class="line">&#125;a[MAXM];</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> l=<span class="number">0</span>,ans=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">		l=max(l,a[i].a);</span><br><span class="line">		<span class="keyword">if</span>(a[i].b&gt;=l)&#123;</span><br><span class="line">			<span class="keyword">int</span> X=(a[i].b-l)/x+<span class="number">1</span>;</span><br><span class="line">			ans=ans+X;</span><br><span class="line">			l=l+X*x;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans&gt;=n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a.a&lt;b.a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	read(n);read(m);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)read(a[i].a),read(a[i].b);</span><br><span class="line">	sort(a+<span class="number">1</span>,a+m+<span class="number">1</span>,cmp);<span class="comment">//排序</span></span><br><span class="line">	<span class="keyword">int</span> l=<span class="number">1</span>,r=INT_MAX;</span><br><span class="line">	<span class="keyword">while</span>(l+<span class="number">1</span>&lt;r)&#123;</span><br><span class="line">		<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">if</span>(check(mid))l=mid;</span><br><span class="line">		<span class="keyword">else</span> r=mid;</span><br><span class="line">	&#125;<span class="built_in">cout</span>&lt;&lt;l;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>洛谷题库</category>
        <category>usaco</category>
      </categories>
      <tags>
        <tag>二分</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 P2821 【变幻数】</title>
    <url>/2020/03/29/%E9%A2%98%E8%A7%A3-P2821-%E3%80%90%E5%8F%98%E5%B9%BB%E6%95%B0%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2821" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p2821" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这道题还真是一道好题。</p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>首先，我们想一想，一个子变幻数要满足什么条件。</p>
<p><strong>有最大质因子不能超过 $9$ 中的。</strong></p>
<p>然后，发现 $k$ 的父变幻数最小就 $k$ 从 $9$ 到 $2$ 去分解 $k$，然后存起来，最后再反着输出。</p>
<p>为什么？</p>
<ol>
<li><p>为了 $k$ 的父变幻数最小，我们第 $1$ 个要保证位数尽量的少。</p>
</li>
<li><p>在位数尽量少的前提下，我们要让数尽量小、</p>
</li>
</ol>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> x=<span class="number">9</span>,a[<span class="number">1010</span>],len,l=<span class="number">1</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;v;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">char</span> ch=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(ch);ch=getchar());</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(ch);ch=getchar())a[++len]=ch-<span class="string">'0'</span>;<span class="comment">//读入</span></span><br><span class="line">	<span class="keyword">while</span>(x&gt;=<span class="number">2</span>)&#123;</span><br><span class="line">		<span class="keyword">int</span> y=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len;i++)&#123;</span><br><span class="line">			y=y*<span class="number">10</span>+a[i];</span><br><span class="line">			y%=x;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(y)x--;<span class="comment">//如果不能整除</span></span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			v.push_back(x);<span class="comment">//存入</span></span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len;i++)&#123;</span><br><span class="line">				y=y*<span class="number">10</span>+a[i];</span><br><span class="line">				a[i]=y/x;y%=x;<span class="comment">//除</span></span><br><span class="line">			&#125;<span class="keyword">if</span>(a[l]==<span class="number">0</span>)l++;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;<span class="keyword">if</span>(len!=l)<span class="built_in">puts</span>(<span class="string">"There is no such number!"</span>);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">for</span>(<span class="keyword">int</span> i=v.size()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)<span class="built_in">cout</span>&lt;&lt;v[i];<span class="comment">//反着输出</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>如果有问题，大家可以在评论区写下来，让这篇题解更加完善。</p>
]]></content>
      <categories>
        <category>洛谷题库</category>
      </categories>
      <tags>
        <tag>贪心</tag>
        <tag>高精</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 P6249 【神帖】</title>
    <url>/2020/03/29/%E9%A2%98%E8%A7%A3-P6249-%E3%80%90%E7%A5%9E%E5%B8%96%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P6249" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p6249" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<p>这道题目我一看到就想起了经典题——<a href="https://www.luogu.com.cn/problem/P1220" target="_blank" rel="noopener">关路灯</a></p>
<p>但是时间好像不太好搞啊！</p>
<p>我们可以枚举时间qwq</p>
<p>考虑 $4$ 维 $dp$ $f_{i,j,t,0/1}$ 表示 $zrl$ 看了第 $i$ 页到第 $j$ 页，此时时间为 $t$。</p>
<p>最后一维</p>
<ul>
<li><p>如果是 $0$ 就是在第 $i$ 页。</p>
</li>
<li><p>如果是 $1$ 就是在第 $j$ 页。</p>
</li>
</ul>
<p>为什么这样是对的？</p>
<p>我们会发现，首先为了最优 $zrl$ 绝对不会刻意地去浪费时间，像这样</p>
<p><img src="https://i.loli.net/2020/03/29/7CFxNZ5Td934PfQ.jpg" alt="360截图18430707839661.jpg"></p>
<p><strong>要往左走，一定会超过之前走到最左的点</strong></p>
<p><strong>要往右走，一定会超过之前走到最右的点</strong></p>
<p>所以，我们可以开始转移了。</p>
<ul>
<li><p>按照上面的结论 $f_{i,j,t,1}$ 有 $2$ 种可能</p>
<ul>
<li><p>一种是 $f_{i+1,j,t-(a_{i+1}-a_i),0}$</p>
<p><img src="https://i.loli.net/2020/03/29/8y6AYmiXVOZE3eC.jpg" alt="360截图17411024463469.jpg"></p>
</li>
<li><p>一种是 $f_{i+1,j,t-(a_j-a_i),1}$</p>
<p><img src="https://i.loli.net/2020/03/29/3pXduqao6vD8kcW.jpg" alt="360截图178606015699100.jpg"></p>
</li>
</ul>
</li>
<li><p>按照上面的结论 $f_{i,j,t,0}$ 有 $2$ 种可能</p>
<ul>
<li><p>一种是 $f_{i,j-1,t-(a_j-a_{j-1}),1}$</p>
<p><img src="https://i.loli.net/2020/03/29/D2pEfsChBbWP65N.jpg" alt="360截图17860531464236.jpg"></p>
</li>
<li><p>一种是 $f_{i,j-1,t-(a_j-a_i),0}$</p>
<p><img src="https://i.loli.net/2020/03/29/8y6AYmiXVOZE3eC.jpg" alt="360截图17411024463469.jpg"></p>
</li>
</ul>
</li>
</ul>
<p>代码就很好写了：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">	<span class="keyword">int</span> x,v,t;</span><br><span class="line">&#125;a[<span class="number">210</span>];</span><br><span class="line">ll f[<span class="number">210</span>][<span class="number">210</span>][<span class="number">510</span>][<span class="number">2</span>],n,ans;<span class="comment">//不开long long见祖宗！</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a.x&lt;b.x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">work</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;<span class="comment">//算能否get到快乐值</span></span><br><span class="line">	<span class="keyword">if</span>(a[y].t&gt;=x)<span class="keyword">return</span> a[y].v;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">cin</span>&gt;&gt;a[i].x&gt;&gt;a[i].v&gt;&gt;a[i].t;</span><br><span class="line">	n++;<span class="comment">//这里的话，我来解释一下，首先有可能所有帖子的页面都&gt;0或&lt;0，zrl也可能只向左走或只向又走。</span></span><br><span class="line">	sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> len=<span class="number">1</span>;len&lt;=n;len++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i+len&lt;=n;i++)&#123;</span><br><span class="line">			<span class="keyword">int</span> j=i+len;</span><br><span class="line">			<span class="keyword">if</span>(a[i].x&gt;<span class="number">0</span>||a[j].x&lt;<span class="number">0</span>)<span class="keyword">continue</span>;</span><br><span class="line">			<span class="keyword">int</span> x=min(<span class="built_in">abs</span>(a[i].x),<span class="built_in">abs</span>(a[j].x))+a[j].x-a[i].x;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> t=x;t&lt;=<span class="number">500</span>;t++)&#123;</span><br><span class="line">				f[i][j][t][<span class="number">0</span>]=max(f[i+<span class="number">1</span>][j][max(t-(a[i+<span class="number">1</span>].x-a[i].x),<span class="number">0</span>)][<span class="number">0</span>],f[i+<span class="number">1</span>][j][max(t-(a[j].x-a[i].x),<span class="number">0</span>)][<span class="number">1</span>] )+work(t,i);<span class="comment">//优美的转态转移方程。</span></span><br><span class="line">				f[i][j][t][<span class="number">1</span>]=max(f[i][j<span class="number">-1</span>][max(t-(a[j].x-a[i].x),<span class="number">0</span>)][<span class="number">0</span>],f[i][j<span class="number">-1</span>][max(t-(a[j].x-a[j<span class="number">-1</span>].x),<span class="number">0</span>)][<span class="number">1</span>] )+work(t,j);</span><br><span class="line">				ans=max(ans,max(f[i][j][t][<span class="number">0</span>],f[i][j][t][<span class="number">1</span>]));<span class="comment">//优美的转态转移方程。</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;ans;<span class="comment">//输出</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>洛谷题库</category>
        <category>SS出题组</category>
      </categories>
      <tags>
        <tag>排序</tag>
        <tag>dp</tag>
        <tag>区间dp</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 P4344 【[SHOI2015]脑洞治疗仪】</title>
    <url>/2020/03/27/%E8%A7%A3-P4344-%E3%80%90-SHOI2015-%E8%84%91%E6%B4%9E%E6%B2%BB%E7%96%97%E4%BB%AA%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4344" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p4344" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这道题目呢，看上去很难，实际上我们可以用线段树解决这道题目。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>我们维护 <code>sum</code>、<code>len</code>、<code>tag</code>、<code>lmax</code>、<code>rmax</code>、<code>ans</code>。</p>
<p><code>sum</code> 就是这段区间非脑洞的个数</p>
<p><code>len</code> 就是这段区间的长度</p>
<p><code>tag</code> 就是我们的 <code>lazy_tag</code></p>
<p><code>lmax</code> 就是从左开始的连续脑洞个数</p>
<p><code>rmax</code> 就是从右开始的连续脑洞个数</p>
<p><code>ans</code> 就是这段区间最大的连续脑洞</p>
<h3 id="建树"><a href="#建树" class="headerlink" title="建树"></a>建树</h3><p>由于 <code>len</code> 是不变的，所以我们可以建树的时候就求出 <code>len</code></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">t[num].len=r-l+<span class="number">1</span>;</span><br></pre></td></tr></table></figure>
<h3 id="pushup"><a href="#pushup" class="headerlink" title="pushup"></a><code>pushup</code></h3><h4 id="sum"><a href="#sum" class="headerlink" title="sum"></a><code>sum</code></h4><p><code>sum</code> 就是左子树和右子树的 <code>sum</code> 的和。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">t[num].sum=t[ls].sum+t[rs].sum;</span><br></pre></td></tr></table></figure>
<h4 id="lmax"><a href="#lmax" class="headerlink" title="lmax"></a><code>lmax</code></h4><p><code>lmax</code> 的话有两种情况</p>
<h5 id="第-1-种情况"><a href="#第-1-种情况" class="headerlink" title="第 $1$ 种情况"></a>第 $1$ 种情况</h5><p><img src="https://i.loli.net/2020/03/27/oNTSrnHFZu6XAJk.png" alt="aaasajdfhiujhkja.png"></p>
<p><code>lmax</code>=左子树的 <code>lmax</code></p>
<h5 id="第-2-中情况"><a href="#第-2-中情况" class="headerlink" title="第 $2$ 中情况"></a>第 $2$ 中情况</h5><p><img src="https://i.loli.net/2020/03/27/LTaj5UisqMS3eP8.png" alt="asdssssajdfhiujhkja.png"></p>
<p><code>lmax</code>=左子树的 <code>len</code> + 右子树的 <code>lmax</code></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(t[ls].lmax==t[ls].len)t[num].lmax=t[ls].len+t[rs].lmax;</span><br><span class="line"><span class="keyword">else</span> t[num].lmax=t[ls].lmax;</span><br></pre></td></tr></table></figure>
<h4 id="rmax"><a href="#rmax" class="headerlink" title="rmax"></a><code>rmax</code></h4><p><code>rmax</code> 的话也两种情况</p>
<h5 id="第-1-种情况-1"><a href="#第-1-种情况-1" class="headerlink" title="第 $1$ 种情况"></a>第 $1$ 种情况</h5><p><img src="https://i.loli.net/2020/03/27/FNKtdnUw6rpACl1.png" alt="kja.png"></p>
<p><code>rmax</code>=右子树的 <code>rmax</code></p>
<p><img src="https://i.loli.net/2020/03/27/3h7ZYsAqWMrK2EG.png" alt="df.png"></p>
<p><code>lmax</code>=右子树的 <code>len</code> + 左子树的 <code>rmax</code></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(t[rs].rmax==t[rs].len)t[num].rmax=t[rs].len+t[ls].rmax;</span><br><span class="line"><span class="keyword">else</span> t[num].rmax=t[rs].rmax;</span><br></pre></td></tr></table></figure>
<h4 id="ans"><a href="#ans" class="headerlink" title="ans"></a><code>ans</code></h4><p><code>ans</code> 的话有 $3$ 种情况</p>
<h5 id="第-1-种情况-2"><a href="#第-1-种情况-2" class="headerlink" title="第 $1$ 种情况"></a>第 $1$ 种情况</h5><p><img src="https://i.loli.net/2020/03/27/wjYa8XCmQEtOe6S.png" alt="asdsajdfhiujhkja.png"></p>
<p><code>ans</code>=左子树的 <code>ans</code></p>
<h5 id="第-2-种情况"><a href="#第-2-种情况" class="headerlink" title="第 $2$ 种情况"></a>第 $2$ 种情况</h5><p><img src="https://i.loli.net/2020/03/27/cVXrQhiG9YbxwIW.png" alt="asdasajdfhiujhkja.png"></p>
<p><code>ans</code>=右子树的 <code>ans</code></p>
<h5 id="第-3-种情况"><a href="#第-3-种情况" class="headerlink" title="第 $3$ 种情况"></a>第 $3$ 种情况</h5><p><img src="https://i.loli.net/2020/03/27/kVchXdzs7QT5BnL.png" alt="aasdasajdfhiujhkja.png"></p>
<p><code>ans</code>=左子树的 <code>rmax</code>+右子树的 <code>lmax</code></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">t[num].ans=<span class="built_in">max</span>(<span class="built_in">max</span>(t[ls].ans,t[rs].ans),t[ls].rmax+t[rs].lmax);</span><br></pre></td></tr></table></figure>
<h3 id="pushdown"><a href="#pushdown" class="headerlink" title="pushdown"></a><code>pushdown</code></h3><h4 id="tag"><a href="#tag" class="headerlink" title="tag"></a><code>tag</code></h4><p>我们的 <code>tag</code> 有 <code>3</code> 种值，分别为 <code>0</code>，<code>1</code>，<code>2</code></p>
<p><code>0</code> 表示什么都没有</p>
<p><code>1</code> 表示全部为脑洞</p>
<p><code>2</code> 表示全部不为脑洞</p>
<h5 id="0"><a href="#0" class="headerlink" title="0"></a><code>0</code></h5><p><code>0</code> 的话，代表没有任何操作，不要管。</p>
<h5 id="1"><a href="#1" class="headerlink" title="1"></a><code>1</code></h5><p>我们对照上面的发现：</p>
<p><code>ans</code>、<code>lmax</code>、<code>rmax</code> 都为 <code>len</code>。</p>
<p>而 <code>sum</code> 则为 <code>0</code>。</p>
<p><code>tag</code> 的标记当然要打啦。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">down1</span><span class="params">(<span class="keyword">int</span> num)</span></span>&#123;</span><br><span class="line">	t[num].ans=t[num].lmax=t[num].rmax=t[num].len;</span><br><span class="line">	t[num].sum=<span class="number">0</span>;</span><br><span class="line">	t[num].tag=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="2"><a href="#2" class="headerlink" title="2"></a><code>2</code></h5><p>我们对照上面的发现：</p>
<p><code>ans</code>、<code>lmax</code>、<code>rmax</code> 都为 <code>0</code>。</p>
<p>而 <code>sum</code> 则为 <code>len</code>。</p>
<p><code>tag</code> 的标记当然要打啦。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">down2</span><span class="params">(<span class="keyword">int</span> num)</span></span>&#123;</span><br><span class="line">	t[num].ans=t[num].lmax=t[num].rmax=<span class="number">0</span>;</span><br><span class="line">	t[num].sum=t[num].len;</span><br><span class="line">	t[num].tag=<span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="二分"><a href="#二分" class="headerlink" title="二分"></a>二分</h3><p>我们可以发现，操作 <code>2</code> 就是先统计一遍 $[l0,r0]$ 中非脑洞的个数。</p>
<p>然后把 $[l0,r0]$ 这段区间全部变成脑洞，再去在 $[l1,r1]$ 这段区间里找到从 $l0$ 开始算起最右边脑洞个数 $\leq[l0,r0]$ 中脑洞的个数。</p>
<p>我们发现脑洞个数是单调递增的，所以我们可以二分。</p>
<p>我采用的写法是左闭右开。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> x=query0(<span class="number">1</span>,l0,r0);<span class="comment">//统计</span></span><br><span class="line">	<span class="keyword">if</span>(x==<span class="number">0</span>)<span class="keyword">return</span>;<span class="comment">//这里要注意，否则我们的边界就是错的</span></span><br><span class="line">	change(<span class="number">1</span>,l0,r0,<span class="number">1</span>);<span class="comment">//全部变成脑洞</span></span><br><span class="line">	<span class="keyword">int</span> l=l1,r=r1+<span class="number">1</span>;<span class="comment">//二分的边界</span></span><br><span class="line">	<span class="keyword">while</span>(l+<span class="number">1</span>&lt;r)&#123;<span class="comment">//经典写法</span></span><br><span class="line">		<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;<span class="comment">//求mid</span></span><br><span class="line">		<span class="keyword">if</span>(query1(<span class="number">1</span>,l1,mid)&lt;=x)l=mid;<span class="comment">//小于等于</span></span><br><span class="line">		<span class="keyword">else</span> r=mid;</span><br><span class="line">	&#125;</span><br><span class="line">	change(<span class="number">1</span>,l1,l,<span class="number">2</span>);<span class="comment">//填上去</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls num&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs num&lt;&lt;1|1</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">if</span>(x&gt;<span class="number">9</span>)<span class="built_in">write</span>(x/<span class="number">10</span>);</span><br><span class="line">	<span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">writen</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">	<span class="built_in">write</span>(x);</span><br><span class="line">	<span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">2e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Tree</span>&#123;</span></span><br><span class="line">	<span class="keyword">int</span> l,r,lmax,rmax,sum,tag,len,ans;</span><br><span class="line">&#125;t[N&lt;&lt;<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> n,m,l0,r0,l1,r1,f;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> num)</span></span>&#123;</span><br><span class="line">	t[num].sum=t[ls].sum+t[rs].sum;</span><br><span class="line">	<span class="keyword">if</span>(t[ls].lmax==t[ls].len)t[num].lmax=t[ls].len+t[rs].lmax;</span><br><span class="line">	<span class="keyword">else</span> t[num].lmax=t[ls].lmax;</span><br><span class="line">	<span class="keyword">if</span>(t[rs].rmax==t[rs].len)t[num].rmax=t[rs].len+t[ls].rmax;</span><br><span class="line">	<span class="keyword">else</span> t[num].rmax=t[rs].rmax;</span><br><span class="line">	t[num].ans=<span class="built_in">max</span>(<span class="built_in">max</span>(t[ls].ans,t[rs].ans),t[ls].rmax+t[rs].lmax);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">down1</span><span class="params">(<span class="keyword">int</span> num)</span></span>&#123;</span><br><span class="line">	t[num].ans=t[num].lmax=t[num].rmax=t[num].len;</span><br><span class="line">	t[num].sum=<span class="number">0</span>;</span><br><span class="line">	t[num].tag=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">down2</span><span class="params">(<span class="keyword">int</span> num)</span></span>&#123;</span><br><span class="line">	t[num].ans=t[num].lmax=t[num].rmax=<span class="number">0</span>;</span><br><span class="line">	t[num].sum=t[num].len;</span><br><span class="line">	t[num].tag=<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> num)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(t[num].tag==<span class="number">1</span>)&#123;</span><br><span class="line">		down1(ls);down1(rs);</span><br><span class="line">		t[num].tag=<span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(t[num].tag==<span class="number">2</span>)&#123;</span><br><span class="line">		down2(ls);down2(rs);</span><br><span class="line">		t[num].tag=<span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> num,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">	t[num].tag=<span class="number">0</span>;</span><br><span class="line">	t[num].l=l;</span><br><span class="line">	t[num].r=r;</span><br><span class="line">	t[num].len=r-l+<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">if</span>(l==r)&#123;</span><br><span class="line">		t[num].sum=<span class="number">1</span>;</span><br><span class="line">		t[num].ans=t[num].lmax=t[num].rmax=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">	build(ls,l,mid);</span><br><span class="line">	build(rs,mid+<span class="number">1</span>,r);</span><br><span class="line">	pushup(num);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(<span class="keyword">int</span> num,<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> z)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(t[num].l&gt;=x&amp;&amp;t[num].r&lt;=y)&#123;</span><br><span class="line">		<span class="keyword">if</span>(z==<span class="number">1</span>)down1(num);</span><br><span class="line">		<span class="keyword">if</span>(z==<span class="number">2</span>)down2(num);</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	pushdown(num);</span><br><span class="line">	<span class="keyword">if</span>(t[ls].r&gt;=x)change(ls,x,y,z);</span><br><span class="line">	<span class="keyword">if</span>(t[rs].l&lt;=y)change(rs,x,y,z);</span><br><span class="line">	pushup(num);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query0</span><span class="params">(<span class="keyword">int</span> num,<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(t[num].l&gt;=x&amp;&amp;t[num].r&lt;=y)<span class="keyword">return</span> t[num].sum;</span><br><span class="line">	pushdown(num);</span><br><span class="line">	<span class="keyword">if</span>(t[ls].r&lt;x)<span class="keyword">return</span> query0(rs,x,y);</span><br><span class="line">	<span class="keyword">if</span>(t[rs].l&gt;y)<span class="keyword">return</span> query0(ls,x,y);</span><br><span class="line">	<span class="keyword">return</span> query0(ls,x,y)+query0(rs,x,y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query1</span><span class="params">(<span class="keyword">int</span> num,<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(t[num].l&gt;=x&amp;&amp;t[num].r&lt;=y)<span class="keyword">return</span> t[num].len-t[num].sum;</span><br><span class="line">	pushdown(num);</span><br><span class="line">	<span class="keyword">if</span>(t[ls].r&lt;x)<span class="keyword">return</span> query1(rs,x,y);</span><br><span class="line">	<span class="keyword">if</span>(t[rs].l&gt;y)<span class="keyword">return</span> query1(ls,x,y);</span><br><span class="line">	<span class="keyword">return</span> query1(ls,x,y)+query1(rs,x,y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">read</span>(l1);<span class="built_in">read</span>(r1);</span><br><span class="line">	<span class="keyword">int</span> x=query0(<span class="number">1</span>,l0,r0);</span><br><span class="line">	<span class="keyword">if</span>(x==<span class="number">0</span>)<span class="keyword">return</span>;</span><br><span class="line">	change(<span class="number">1</span>,l0,r0,<span class="number">1</span>);</span><br><span class="line">	<span class="keyword">int</span> l=l1,r=r1+<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(l+<span class="number">1</span>&lt;r)&#123;</span><br><span class="line">		<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">if</span>(query1(<span class="number">1</span>,l1,mid)&lt;=x)l=mid;</span><br><span class="line">		<span class="keyword">else</span> r=mid;</span><br><span class="line">	&#125;</span><br><span class="line">	change(<span class="number">1</span>,l1,l,<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query2</span><span class="params">(<span class="keyword">int</span> num,<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(t[num].l&gt;=x&amp;&amp;t[num].r&lt;=y)<span class="keyword">return</span> t[num].ans;</span><br><span class="line">	pushdown(num);</span><br><span class="line">	<span class="keyword">if</span>(t[ls].r&lt;x)<span class="keyword">return</span> query2(rs,x,y);</span><br><span class="line">	<span class="keyword">if</span>(t[rs].l&gt;y)<span class="keyword">return</span> query2(ls,x,y);</span><br><span class="line">	<span class="keyword">return</span> <span class="built_in">max</span>(<span class="built_in">max</span>(query2(ls,x,y),query2(rs,x,y)),<span class="built_in">min</span>(t[ls].rmax,t[rs].l-x)+<span class="built_in">min</span>(t[rs].lmax,y-t[ls].r));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">read</span>(n);<span class="built_in">read</span>(m);</span><br><span class="line">	build(<span class="number">1</span>,<span class="number">1</span>,n);</span><br><span class="line">	<span class="keyword">while</span>(m--)&#123;</span><br><span class="line">		<span class="built_in">read</span>(f);<span class="built_in">read</span>(l0);<span class="built_in">read</span>(r0);</span><br><span class="line">		<span class="keyword">switch</span>(f)&#123;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">0</span>:change(<span class="number">1</span>,l0,r0,<span class="number">1</span>);<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">1</span>:work();<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">2</span>:writen(query2(<span class="number">1</span>,l0,r0));<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>洛谷题库</category>
        <category>SH省选</category>
      </categories>
      <tags>
        <tag>二分</tag>
        <tag>lazy_tag</tag>
        <tag>线段树</tag>
      </tags>
  </entry>
  <entry>
    <title>2020-3-19模拟赛题解</title>
    <url>/2020/03/19/2020-3-19%E6%A8%A1%E6%8B%9F%E8%B5%9B/</url>
    <content><![CDATA[<p><code>2020-3-19</code>的模拟赛，考得不错，但仍有很大的进步空间，继续努力！</p>
<a id="more"></a>
<h1 id="T1"><a href="#T1" class="headerlink" title="T1"></a>T1</h1><p>这道题目应该，不用多说，直接上代码。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">if</span>(x&gt;<span class="number">9</span>)<span class="built_in">write</span>(x/<span class="number">10</span>);</span><br><span class="line">	<span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">writen</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">	<span class="built_in">write</span>(x);</span><br><span class="line">	<span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	ll n,ans=<span class="number">0</span>;ld len,a,s=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;len&gt;&gt;a;</span><br><span class="line">	ll x=((a*<span class="number">2</span>)/len);</span><br><span class="line">	<span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=x;i++)</span><br><span class="line">		<span class="keyword">if</span>(n%i==<span class="number">0</span>)&#123;</span><br><span class="line">			ans++;</span><br><span class="line">			s+=(i*<span class="number">1.0</span>)*len;</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">if</span>(ans==<span class="number">0</span>)&#123;</span><br><span class="line">		<span class="built_in">puts</span>(<span class="string">"poor Asuna."</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;fixed&lt;&lt;setprecision(<span class="number">6</span>)&lt;&lt;s;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="T2"><a href="#T2" class="headerlink" title="T2"></a>T2</h1><p>直接模拟。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">if</span>(x&gt;<span class="number">9</span>)<span class="built_in">write</span>(x/<span class="number">10</span>);</span><br><span class="line">	<span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">writen</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">	<span class="built_in">write</span>(x);</span><br><span class="line">	<span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">work</span><span class="params">(<span class="keyword">char</span> ch)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(ch==<span class="string">'A'</span>)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">	<span class="keyword">if</span>(ch==<span class="string">'C'</span>)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">	<span class="keyword">if</span>(ch==<span class="string">'G'</span>)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">	<span class="keyword">if</span>(ch==<span class="string">'U'</span>)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">char</span> s[<span class="number">1010</span>];</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">	<span class="built_in">string</span> a=<span class="string">""</span>,b=<span class="string">""</span>;</span><br><span class="line">	a=a+s[<span class="number">0</span>]+s[<span class="number">1</span>]+s[<span class="number">2</span>];</span><br><span class="line">	b=b+s[<span class="number">3</span>]+s[<span class="number">4</span>]+s[<span class="number">5</span>];</span><br><span class="line">	<span class="keyword">if</span>(!work(s[<span class="number">0</span>])||!work(s[<span class="number">1</span>])||!work(s[<span class="number">2</span>])||!work(s[<span class="number">3</span>])||!work(s[<span class="number">4</span>])||!work(s[<span class="number">5</span>]))&#123;</span><br><span class="line">		<span class="built_in">cout</span>&lt;&lt;<span class="string">"bad"</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(a==<span class="string">"UUU"</span>)<span class="built_in">cout</span>&lt;&lt;<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(a==b)<span class="built_in">cout</span>&lt;&lt;<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(b==<span class="string">"UUU"</span>)<span class="built_in">cout</span>&lt;&lt;<span class="number">1</span>;</span><br><span class="line">			<span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;<span class="number">2</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="T3"><a href="#T3" class="headerlink" title="T3"></a>T3</h1><p>依旧是比较简单的题。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">if</span>(x&gt;<span class="number">9</span>)<span class="built_in">write</span>(x/<span class="number">10</span>);</span><br><span class="line">	<span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">writen</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">	<span class="built_in">write</span>(x);</span><br><span class="line">	<span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	ll a,n;</span><br><span class="line">	<span class="built_in">read</span>(n);<span class="built_in">read</span>(a);</span><br><span class="line">	<span class="keyword">if</span>(a%n!=<span class="number">0</span>)<span class="built_in">puts</span>(<span class="string">"poor Asuna."</span>);</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		ll x=a/n,ans=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">while</span>(x)&#123;</span><br><span class="line">			<span class="keyword">if</span>(x&amp;<span class="number">1</span>)ans++;<span class="comment">//二进制的思想，找1的个数</span></span><br><span class="line">			x&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">		&#125;<span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="T4"><a href="#T4" class="headerlink" title="T4"></a>T4</h1><p>蒟蒻把 $30\%$ 的限制，当成了 $100 \%$ 的了$qwq$。。。</p>
<p>惨痛地丢了 $40pts$。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">if</span>(x&gt;<span class="number">9</span>)<span class="built_in">write</span>(x/<span class="number">10</span>);</span><br><span class="line">	<span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">writen</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">	<span class="built_in">write</span>(x);</span><br><span class="line">	<span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans[<span class="number">40</span>],s,a;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n;</span><br><span class="line">	<span class="built_in">read</span>(n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="keyword">int</span> x;</span><br><span class="line">		<span class="built_in">read</span>(x);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">5</span>;j++)ans[(x+j<span class="number">-2</span>)%<span class="number">24</span>+<span class="number">1</span>]++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">24</span>;i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(ans[i]==<span class="number">0</span>)s++;</span><br><span class="line">		a=<span class="built_in">max</span>(a,ans[i]);</span><br><span class="line">	&#125;<span class="built_in">cout</span>&lt;&lt;s&lt;&lt;<span class="string">" "</span>&lt;&lt;a;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="T5"><a href="#T5" class="headerlink" title="T5"></a>T5</h1><p>我们要贪心，要让攻者尽可能赢，也就是让攻者把防者的所有牌给打掉。</p>
<p>我们显然有一个贪心策略是这样的：</p>
<blockquote>
<p>每次拿 $2$ 队最强的牌<br>则有 $2$ 种情况</p>
<ul>
<li>如果攻者的牌 $\geq$ 防者的牌，就显然要让 $2$ 张牌同归于尽。</li>
<li>如果攻者的牌 $&lt;$ 防者的牌，就显然要让防者的牌 $-$ 攻者的牌的值。</li>
</ul>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">	<span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">writen</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">	write(x);</span><br><span class="line">	<span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line">ll T,n,m,a[<span class="number">300010</span>],b[<span class="number">300010</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(ll x,ll y)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> x&gt;y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">work</span><span class="params">()</span></span>&#123;</span><br><span class="line">	priority_queue&lt;ll&gt;q;</span><br><span class="line">	sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)q.push(b[i]);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		ll x=q.top();</span><br><span class="line">		q.pop();</span><br><span class="line">		<span class="keyword">if</span>(a[i]&lt;x)&#123;</span><br><span class="line">			x-=a[i];</span><br><span class="line">			q.push(x);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(q.empty())<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">	&#125;<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	read(T);</span><br><span class="line">	<span class="keyword">while</span>(T--)&#123;</span><br><span class="line">		read(n);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)read(a[i]);</span><br><span class="line">		read(m);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)read(b[i]);</span><br><span class="line">		<span class="keyword">if</span>(work())<span class="built_in">puts</span>(<span class="string">"Apollo"</span>);</span><br><span class="line">		<span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"Dionysus"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="T6"><a href="#T6" class="headerlink" title="T6"></a>T6</h1><p>这道题还是很有水平的。</p>
<p>有这样一个结论：可能的数字为<strong>所有素数的平方</strong>。</p>
<p>首先，$n+\left \lceil \left \vert \sqrt{n+1} \right \vert \right \rceil=n+ \lfloor \vert \sqrt{n} \vert\rfloor+1$</p>
<ol>
<li><p>对于平方数</p>
<ol>
<li><p>对于素数的平方：假设是 $x$ 的平方</p>
<p> $\therefore$ 约数和 $= x^2+x+1$，上面写的式子也是 $x^2+x+1$</p>
<p> $\because$ 可以。</p>
</li>
<li><p>对于约数的平方：假设是 $x$ 的平方。</p>
<p> $\therefore$ 约数和 $\geq x^2+1+x+\sum\limits_{i \mid x} x^2 \div i &gt; x^2+x+1$</p>
<p> $\because$ 不可以。</p>
</li>
</ol>
</li>
<li><p>那么非平方数，假设它为 $n$，$x=\sqrt{n}$。</p>
<ol>
<li><p>如果 $n$ 为素数：</p>
<p> $\therefore n$ 的约数和为：$n+1$，上面的式子为 $n+x+1$。</p>
<p> 又 $\therefore$ $x \geq 1$。</p>
<p> $\because$ 不可以。</p>
</li>
<li><p>如果 $n$ 为合数：</p>
<p> $\therefore$ $n$ 的约数和一定会大于 $&gt; x^2+x+1$。</p>
<p> $\because$ 不可以。</p>
</li>
</ol>
</li>
</ol>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">if</span>(x&gt;<span class="number">9</span>)<span class="built_in">write</span>(x/<span class="number">10</span>);</span><br><span class="line">	<span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">writen</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">	<span class="built_in">write</span>(x);</span><br><span class="line">	<span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line">ll f[<span class="number">300010</span>],g[<span class="number">300010</span>],x,s;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">2</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">2</span>;i*i&lt;=x;i++)</span><br><span class="line">        <span class="keyword">if</span>(x%i==<span class="number">0</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	ll n;</span><br><span class="line">	<span class="built_in">read</span>(n);</span><br><span class="line">	n*=<span class="number">3</span>;</span><br><span class="line">	<span class="keyword">for</span>(ll i=<span class="number">2</span>;i*i&lt;=n;i++)</span><br><span class="line">		<span class="keyword">if</span>(check(i))x+=i*i+i+<span class="number">1</span>;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;x;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="T7"><a href="#T7" class="headerlink" title="T7"></a>T7</h1><p>首先说明：</p>
<blockquote>
<p>异或运算满足交换律。</p>
</blockquote>
<p>大量模拟，不讲。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">	<span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">writen</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">	write(x);</span><br><span class="line">	<span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line">ll n,ans=INT_MIN,C,Len,p[<span class="number">1010</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">	ll a,b,c;</span><br><span class="line">&#125;a[<span class="number">1010</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a.c&lt;b.c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">work</span><span class="params">(<span class="keyword">double</span> x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> (ll)(<span class="built_in">sqrt</span>(x));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(ll x,ll s,ll y,ll minn,ll z)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(x==n+<span class="number">1</span>)&#123;</span><br><span class="line">		ans=max(ans,minn*(C-work(s))*(p[z%(Len)]));</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	dfs(x+<span class="number">1</span>,s,y,minn,z);</span><br><span class="line">	dfs(x+<span class="number">1</span>,s+y+a[x].c,y+a[x].c,min(minn,a[x].b),a[x].a^z);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	read(n);</span><br><span class="line">	<span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;i++)read(a[i].a);</span><br><span class="line">	<span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;i++)read(a[i].b);</span><br><span class="line">	<span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;i++)read(a[i].c);</span><br><span class="line">	read(Len);</span><br><span class="line">	<span class="keyword">for</span>(ll i=<span class="number">0</span>;i&lt;Len;i++)read(p[i]);</span><br><span class="line">	read(C);</span><br><span class="line">	sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp);</span><br><span class="line">	<span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;i++)dfs(i+<span class="number">1</span>,a[i].c,a[i].c,a[i].b,a[i].a);</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="T8"><a href="#T8" class="headerlink" title="T8"></a>T8</h1><p>我觉得也很简单，可是我<code>gcd</code>不开<code>long long</code>见祖宗。</p>
<p>有<code>1</code>的字串个数<code>=</code>总个数<code>-</code>不含<code>1</code>的字串个数。</p>
<p>不含<code>1</code>的字串个数<code>=</code>全为<code>0</code>的字串个数。</p>
<p>然后这题就水了。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">if</span>(x&gt;<span class="number">9</span>)<span class="built_in">write</span>(x/<span class="number">10</span>);</span><br><span class="line">	<span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">writen</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">	<span class="built_in">write</span>(x);</span><br><span class="line">	<span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line">ll n,t,s,ans,k;</span><br><span class="line"><span class="built_in">string</span> st;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll x,ll y)</span></span>&#123;<span class="comment">//这里开long long啊！</span></span><br><span class="line">	<span class="keyword">if</span>(!y)<span class="keyword">return</span> x;</span><br><span class="line">	<span class="keyword">return</span> gcd(y,x%y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;st&gt;&gt;t;</span><br><span class="line">	ans=n*(n+<span class="number">1</span>)/<span class="number">2</span>;k=ans;</span><br><span class="line">	st=st+<span class="string">'1'</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;st.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(st[i]==<span class="string">'0'</span>)s++;</span><br><span class="line">		<span class="keyword">else</span> ans-=s*(s+<span class="number">1</span>)/<span class="number">2</span>,s=<span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(t==<span class="number">0</span>)&#123;</span><br><span class="line">		<span class="keyword">double</span> x=(ans*<span class="number">1.0</span>)/(k*<span class="number">1.0</span>);</span><br><span class="line">		<span class="built_in">cout</span>&lt;&lt;fixed&lt;&lt;setprecision(<span class="number">3</span>)&lt;&lt;x;</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		ll x=gcd(ans,k);</span><br><span class="line">		ans/=x;</span><br><span class="line">		k/=x;</span><br><span class="line">		<span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="string">" "</span>&lt;&lt;k;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>模拟赛</category>
      </categories>
      <tags>
        <tag>模拟</tag>
        <tag>排序</tag>
        <tag>STL-priority_queue</tag>
        <tag>搜索</tag>
        <tag>枚举</tag>
        <tag>暴力</tag>
        <tag>贪心</tag>
        <tag>数论，数学</tag>
        <tag>位运算</tag>
        <tag>二进制</tag>
        <tag>分类讨论</tag>
      </tags>
  </entry>
  <entry>
    <title>增援前线</title>
    <url>/2020/03/18/%E6%8F%B4%E5%89%8D%E7%BA%BF/</url>
    <content><![CDATA[<p>模拟赛试题<br><a id="more"></a></p>
<h1 id="增援前线"><a href="#增援前线" class="headerlink" title="增援前线"></a>增援前线</h1><h2 id="20-分做法"><a href="#20-分做法" class="headerlink" title="$20$ 分做法"></a>$20$ 分做法</h2><p>考虑暴力。答案为$a_i$的和</p>
<h1 id="50-分做法"><a href="#50-分做法" class="headerlink" title="$50$ 分做法"></a>$50$ 分做法</h1><p>枚举全排列</p>
<h1 id="100-分做法"><a href="#100-分做法" class="headerlink" title="$100$ 分做法"></a>$100$ 分做法</h1><p>我们可以用二分法或贪心。</p>
<p>这里会用到一个性质。</p>
<p><strong>说人要尽量走得远一点。</strong>什么意思？为什么？</p>
<p>画一个图：</p>
<p><img src="https://i.loli.net/2020/03/18/onHP7jtcwqf6Rhx.jpg" alt="360截图175711156810982.jpg"></p>
<p>假设：$L=4$</p>
<p>比如说这个魂师，他有 $2$ 种选择，现在我们的结论是走最远的最优。</p>
<p>那么，我们看他走近的</p>
<p><img src="https://i.loli.net/2020/03/18/BM416JHTLzwDXtd.jpg" alt="360截图175711156810982.jpg"></p>
<p>都没路走了，只能还是走远端的那片叶子，所以相当于<strong>浪费了一片叶子。</strong></p>
<p>走远的</p>
<p><img src="https://i.loli.net/2020/03/18/g1lZcPYyL84evCT.jpg" alt="360截图175711156810982.jpg"></p>
<p>还能走，那么我想用这个例子说明什么呢？</p>
<p><strong>我们走得越远，选择越多。</strong></p>
<p>从贪心的角度来讲，要让所有魂师<strong>消耗的叶子数量尽量少。</strong></p>
<h2 id="二分"><a href="#二分" class="headerlink" title="二分"></a>二分</h2><p>利用刚刚所讲的性质，我们用二分来写。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">if</span>(x&gt;<span class="number">9</span>)<span class="built_in">write</span>(x/<span class="number">10</span>);</span><br><span class="line">	<span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">writen</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">	<span class="built_in">write</span>(x);</span><br><span class="line">	<span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> l,r=<span class="number">1</span>,a[<span class="number">100010</span>],b[<span class="number">100010</span>],L,n;<span class="comment">//左闭右开，r=1</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> mid)</span></span>&#123;</span><br><span class="line">	<span class="built_in">memset</span>(b,<span class="number">0</span>,<span class="keyword">sizeof</span>(b));<span class="comment">//a[i]表示的是每个格子的上限，b[i]表示的是每个格子现有的数量</span></span><br><span class="line">	b[<span class="number">0</span>]=mid;a[n]=mid;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="built_in">min</span>(i+L,n);j&gt;=i+<span class="number">1</span>;j--)<span class="comment">//从远的开始试</span></span><br><span class="line">			<span class="keyword">if</span>(b[j]&lt;a[j])&#123;</span><br><span class="line">				<span class="keyword">if</span>(b[j]+b[i]&lt;=a[j])&#123;<span class="comment">//全部都能去，那么就全部都去</span></span><br><span class="line">					b[j]+=b[i];<span class="comment">//移走</span></span><br><span class="line">					b[i]=<span class="number">0</span>;<span class="comment">//变成零</span></span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">					b[i]-=a[j]-b[j];<span class="comment">//能塞，尽量塞</span></span><br><span class="line">					b[j]=a[j];<span class="comment">//塞满</span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		<span class="keyword">if</span>(b[i]!=<span class="number">0</span>)<span class="keyword">return</span> <span class="literal">false</span>;<span class="comment">//有人没去处，就代表不可能</span></span><br><span class="line">	&#125;<span class="keyword">return</span> <span class="literal">true</span>;<span class="comment">//可能</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">read</span>(n);<span class="built_in">read</span>(L);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">		<span class="built_in">read</span>(a[i]);</span><br><span class="line">		r+=a[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(l+<span class="number">1</span>&lt;r)&#123;</span><br><span class="line">		<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">if</span>(check(mid))l=mid;</span><br><span class="line">		<span class="keyword">else</span> r=mid;</span><br><span class="line">	&#125;<span class="built_in">cout</span>&lt;&lt;l;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="贪心"><a href="#贪心" class="headerlink" title="贪心"></a>贪心</h1><p>我们发现，上面的二分似乎没什么用，知道答案也未必更好算。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">	T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">	<span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">	FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">if</span>(x&gt;<span class="number">9</span>)<span class="built_in">write</span>(x/<span class="number">10</span>);</span><br><span class="line">	<span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">writen</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">	<span class="built_in">write</span>(x);</span><br><span class="line">	<span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100010</span>],b[<span class="number">100010</span>],L,n,s;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">read</span>(n);<span class="built_in">read</span>(L);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">		<span class="built_in">read</span>(a[i]);</span><br><span class="line">		s+=a[i];<span class="comment">//一样的道理</span></span><br><span class="line">	&#125;</span><br><span class="line">	b[<span class="number">0</span>]=s;a[n]=s;<span class="comment">//拿边界</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="built_in">min</span>(i+L,n);j&gt;=i+<span class="number">1</span>;j--)<span class="comment">//从远的开始试</span></span><br><span class="line">			<span class="keyword">if</span>(b[j]&lt;a[j])&#123;</span><br><span class="line">				<span class="keyword">if</span>(b[j]+b[i]&lt;=a[j])&#123;<span class="comment">//全部都能去，那么就全部都去</span></span><br><span class="line">					b[j]+=b[i];<span class="comment">//移走</span></span><br><span class="line">					b[i]=<span class="number">0</span>;<span class="comment">//变成零</span></span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">					b[i]-=a[j]-b[j];<span class="comment">//能塞，尽量塞</span></span><br><span class="line">					b[j]=a[j];<span class="comment">//塞满</span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">	&#125;<span class="built_in">cout</span>&lt;&lt;b[n];</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>模拟赛</category>
      </categories>
      <tags>
        <tag>二分</tag>
        <tag>贪心</tag>
      </tags>
  </entry>
  <entry>
    <title>核心法阵</title>
    <url>/2020/03/18/%E5%BF%83%E6%B3%95%E9%98%B5/</url>
    <content><![CDATA[<p>模拟赛试题</p>
<a id="more"></a>
<h1 id="核心法阵"><a href="#核心法阵" class="headerlink" title="核心法阵"></a>核心法阵</h1><p>其实就是一道很简单的题目，我们先枚举全排列。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">work</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> maxn=INT_MIN,minn=INT_MAX;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=r;i++)maxn=<span class="built_in">max</span>(maxn,f[i]),minn=<span class="built_in">min</span>(minn,f[i]);</span><br><span class="line">    <span class="keyword">return</span> maxn-minn==r-l;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>学过  $STL$ 的一个都知道。之后，我们来看<strong>如何写 $check$</strong>呢</p>
<blockquote>
<p>我的做法比较暴力，$1$ 到 $n$ 得去扫，每个点去找最大的以它结尾最长的连续段。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        ……</span><br><span class="line">    &#125;<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如何找呢，我的做法比较有技巧</p>
<p>如下</p>
<blockquote>
<p>我们已经确定了右端点，然后，我暴力枚举左端点，现在问题就转换成了，如何判断连续段。</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> ans;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=i;j++)</span><br><span class="line">            <span class="keyword">if</span>(work(j,i))&#123;</span><br><span class="line">                ans=i-j+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">if</span>(ans!=a[i])<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如何判断连续段呢，我的做法依然比较有技巧</p>
<p>如下</p>
<blockquote>
<p>因为这个序列是没有重复数字的，所以，我们去对这一段找最大值和最小值，看它们的差 $+1$ 是不是等于序列的长度，也就是 $r-l+1$。</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">work</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> maxn=INT_MIN,minn=INT_MAX;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=r;i++)maxn=<span class="built_in">max</span>(maxn,f[i]),minn=<span class="built_in">min</span>(minn,f[i]);</span><br><span class="line">    <span class="keyword">return</span> maxn-minn==r-l;<span class="comment">//等式两边都减1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>$code:$</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">15</span>;</span><br><span class="line"><span class="keyword">int</span> a[MAXN],f[MAXN],n,ans;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">work</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> maxn=INT_MIN,minn=INT_MAX;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=r;i++)maxn=<span class="built_in">max</span>(maxn,f[i]),minn=<span class="built_in">min</span>(minn,f[i]);</span><br><span class="line">    <span class="keyword">return</span> maxn-minn==r-l;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> ans;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=i;j++)</span><br><span class="line">            <span class="keyword">if</span>(work(j,i))&#123;</span><br><span class="line">                ans=i-j+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">if</span>(ans!=a[i])<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">read</span>(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">read</span>(a[i]),f[i]=i;</span><br><span class="line">    <span class="keyword">do</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(check())ans++;</span><br><span class="line">    &#125;<span class="keyword">while</span>(next_permutation(f+<span class="number">1</span>,f+n+<span class="number">1</span>));</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>模拟赛</category>
      </categories>
      <tags>
        <tag>搜索</tag>
        <tag>枚举</tag>
        <tag>暴力</tag>
      </tags>
  </entry>
  <entry>
    <title>2020-3-13模拟赛题解</title>
    <url>/2020/03/13/020-3-13%E6%A8%A1%E6%8B%9F%E8%B5%9B%E9%A2%98%E8%A7%A3/</url>
    <content><![CDATA[<p>这场模拟赛，一如既往地凉凉。白白丢了 $150$ 分。</p>
<a id="more"></a>
<h1 id="T1"><a href="#T1" class="headerlink" title="T1"></a>T1</h1><p>给定 $5$ 个实数，问 $<36.2$ 或 $>37.2$ 的数的个数是否 $\geq 2$</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">double</span> a)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a&gt;<span class="number">37.2</span>)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(a&lt;<span class="number">36.2</span>)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> s=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">double</span> a,b,c,d,e,f;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b&gt;&gt;c&gt;&gt;d&gt;&gt;e;</span><br><span class="line">    <span class="keyword">if</span>(check(a))s++;</span><br><span class="line">    <span class="keyword">if</span>(check(b))s++;</span><br><span class="line">    <span class="keyword">if</span>(check(c))s++;</span><br><span class="line">    <span class="keyword">if</span>(check(d))s++;</span><br><span class="line">    <span class="keyword">if</span>(check(e))s++;</span><br><span class="line">    <span class="keyword">if</span>(s&gt;=<span class="number">2</span>)<span class="built_in">puts</span>(<span class="string">"STOP"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"PASS"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="T2"><a href="#T2" class="headerlink" title="T2"></a>T2</h1><p>就是一个小模拟</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line">ll n,k,d,s=<span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    read(n);read(k);read(d);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        s*=k;</span><br><span class="line">        <span class="keyword">if</span>(s&gt;=d)s/=<span class="number">2</span>;</span><br><span class="line">    &#125;<span class="built_in">cout</span>&lt;&lt;s;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="T3"><a href="#T3" class="headerlink" title="T3"></a>T3</h1><p>乍一看挺难的，仔细想一想就是求平均值呀。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line">ll s1,s2;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    read(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        read(x);read(y);</span><br><span class="line">        s1+=x;</span><br><span class="line">        s2+=y;</span><br><span class="line">    &#125;</span><br><span class="line">    s1/=n;s2/=n;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;s1&lt;&lt;<span class="string">" "</span>&lt;&lt;s2;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="T4"><a href="#T4" class="headerlink" title="T4"></a>T4</h1><p>这道题目，随便想想就可以差不多猜到，其实质数不不多，所以区间过长的直接输 <code>Yes</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">bool</span> h[<span class="number">1000010</span>];</span><br><span class="line">ll s[<span class="number">1000010</span>],l,r,T;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">2</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">2</span>;i*i&lt;=x;i++)</span><br><span class="line">        <span class="keyword">if</span>(x%i==<span class="number">0</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">1000000</span>;i++)</span><br><span class="line">        <span class="keyword">if</span>(!h[i])</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i*<span class="number">2</span>;j&lt;=<span class="number">1000000</span>;j+=i)h[j]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">1000000</span>;i++)</span><br><span class="line">        <span class="keyword">if</span>(!h[i])s[i]=s[i<span class="number">-1</span>]+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> s[i]=s[i<span class="number">-1</span>];</span><br><span class="line">    read(T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        read(l);read(r);</span><br><span class="line">        <span class="keyword">if</span>(r&lt;=<span class="number">1000000</span>)&#123;</span><br><span class="line">            ll ans=s[r]-s[l<span class="number">-1</span>],x=r-l+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(ans*<span class="number">3</span>&gt;=x)<span class="built_in">puts</span>(<span class="string">"No"</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(r-l+<span class="number">1</span>&gt;<span class="number">200010</span>)<span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                ll ans=<span class="number">0</span>,x=r-l+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">for</span>(ll i=l;i&lt;=r;i++)</span><br><span class="line">                    <span class="keyword">if</span>(check(i))ans++;</span><br><span class="line">                <span class="keyword">if</span>(ans*<span class="number">3</span>&gt;=x)<span class="built_in">puts</span>(<span class="string">"No"</span>);</span><br><span class="line">                <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="T5"><a href="#T5" class="headerlink" title="T5"></a>T5</h1><p>用 $priority_queue$ 优化复杂度</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line">ll a[<span class="number">100010</span>];</span><br><span class="line"><span class="function">ll <span class="title">work</span><span class="params">(ll x,ll y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x+y+x*y;</span><br><span class="line">&#125;</span><br><span class="line">priority_queue&lt;ll&gt;q;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    read(n);read(k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)read(a[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)q.push(a[i]);</span><br><span class="line">    ll x=q.top();</span><br><span class="line">    q.pop();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;k;i++)&#123;</span><br><span class="line">        x=work(x,q.top());</span><br><span class="line">        q.pop();</span><br><span class="line">    &#125;<span class="built_in">cout</span>&lt;&lt;x;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>$sort$ 也行吧</p>
<h1 id="T6"><a href="#T6" class="headerlink" title="T6"></a>T6</h1><p>差分模板</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">100010</span>],n,m,x,y,z;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    read(n);read(m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        read(x);read(y);read(z);</span><br><span class="line">        f[x]+=z;</span><br><span class="line">        f[y+<span class="number">1</span>]-=z;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        f[i]=f[i<span class="number">-1</span>]+f[i];</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;f[i]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="T7"><a href="#T7" class="headerlink" title="T7"></a>T7</h1><p>数据这么小，显然是让你暴力的，枚举左右端点判断。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> n,k,a[<span class="number">1010</span>],f[<span class="number">1010</span>][<span class="number">1010</span>],ans;</span><br><span class="line"><span class="built_in">string</span> st,t[<span class="number">1010</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;a[x];i++)</span><br><span class="line">        <span class="keyword">if</span>(st[y+i]!=t[x][i])<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x=l;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line">        <span class="keyword">while</span>(!check(i,l)&amp;&amp;l+a[i]<span class="number">-1</span>&lt;=r)l++;</span><br><span class="line">        <span class="keyword">if</span>(l+a[i]<span class="number">-1</span>&gt;r)<span class="keyword">return</span>;</span><br><span class="line">        l+=a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    ans++;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;st;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)<span class="built_in">cin</span>&gt;&gt;a[i]&gt;&gt;t[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">0</span>;l&lt;n;l++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> r=l;r&lt;n;r++)</span><br><span class="line">            work(l,r);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="T8"><a href="#T8" class="headerlink" title="T8"></a>T8</h1><p>最后一题有意思了。</p>
<p>首先显然是二分。</p>
<p>然后，判断，目前才只搞出 $70$ 分，待完善。</p>
]]></content>
      <categories>
        <category>模拟赛</category>
      </categories>
      <tags>
        <tag>二分</tag>
        <tag>模拟</tag>
        <tag>排序</tag>
        <tag>STL-priority_queue</tag>
      </tags>
  </entry>
  <entry>
    <title>算法笔记——拓展欧几里得定理</title>
    <url>/2020/03/12/%E6%8B%93%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>这篇总的题解蒟蒻写了 $3.5h s$！作为回报，你们是不是应该去<a href="https://zhaohaikun.blog.luogu.org/" target="_blank" rel="noopener">$ZHK$ 的洛谷博客</a>里给 $ZHK$ 的所有题解点赞呢！</p>
<a id="more"></a>
<p>求 $ax_1+by_1=\gcd(a,b)$</p>
<p>设 $bx_2+(a\bmod b)y_2=\gcd(b,a \bmod b)$</p>
<p>$\therefore \gcd(a,b)=\gcd(b,a \bmod b)$</p>
<p>$\because ax_1+by_1=bx_2+(a\bmod b)y_2$</p>
<p>又 $\therefore a \bmod b=a-\lfloor\frac{a}{b}\rfloor\times b$</p>
<p>$\because ax_1+by_1=bx_2+(a-\lfloor\frac{a}{b}\rfloor\times b)y_2$</p>
<p>我们利用乘法分配律，把这个式子展开</p>
<p>$bx_2+(a-\lfloor\frac{a}{b}\rfloor\times b)y_2=bx_2+ay_2-\lfloor\frac{a}{b}\rfloor\times by_2$</p>
<p>然后，我们把 $b$ 提出来</p>
<p>$bx_2+ay_2-\lfloor\frac{a}{b}\rfloor\times by_2=ay_2-b(x_2-\lfloor\frac{a}{b}\rfloor \times y_2)$</p>
<p>然后，我们发现 $x_1=y_2,y_1=x_2-\lfloor\frac{a}{b}\rfloor \times y_2$</p>
<p>这样，代码就好写了。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">exgcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> &amp;x,<span class="keyword">int</span> &amp;y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!b)&#123;</span><br><span class="line">        x=<span class="number">1</span>;</span><br><span class="line">        y=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> d=exgcd(b,a%b,x,y);</span><br><span class="line">    <span class="keyword">int</span> t=x;</span><br><span class="line">    x=y;</span><br><span class="line">    y=t-a/b*y;</span><br><span class="line">    <span class="keyword">return</span> d;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>数论，数学</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 P6148 【[USACO20FEB]Swapity Swapity Swap S】</title>
    <url>/2020/03/05/%E8%A7%A3-P6148-%E3%80%90-USACO20FEB-Swapity-Swapity-Swap-S%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P6148" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p6148" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>考场上没想到用倍增，呜呜呜~，只写了个找循环节，然后就 $30$ 分。</p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>考虑用倍增，其实这道题和<a href="https://www.luogu.com.cn/problem/P3083" target="_blank" rel="noopener">这道题</a>是有异曲同工之处的。</p>
<p>我们 $f_{ij}$ 记录第 $j$ 个元素，经过 $2^i$ 次翻转后，这个元素的值。</p>
<h3 id="求-f-0-j"><a href="#求-f-0-j" class="headerlink" title="求 $f_{0,j}$"></a>求 $f_{0,j}$</h3><p>好，那么显然，我们要先求出 $f_{0,j}$。<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">read(n);read(m);read(k);<span class="comment">//读入</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)read(a[i]),read(b[i]);<span class="comment">//读入</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)c[i]=i;<span class="comment">//给c数组赋初值</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)reverse(c+a[i],c+b[i]+<span class="number">1</span>);<span class="comment">//模拟</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)f[<span class="number">0</span>][i]=c[i];<span class="comment">//经过1次翻转第i个元素的值为c[i]</span></span><br></pre></td></tr></table></figure></p>
<h3 id="写倍增"><a href="#写倍增" class="headerlink" title="写倍增"></a>写倍增</h3><p>因为 $2^i=2^{i-1}+2^{i-1}$</p>
<p>所以，$f_{i,j}=f_{i-1,f_{i-1,j}}$</p>
<p>给第 $j$ 个元素操作 $2^{i-1}$ 次，再操作 $2^{i-1}$ 次，就相当于直接操作 $2^i$ 次。</p>
<p>学过 $LCA$ 的应该都会。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">30</span>;i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">        f[i][j]=f[i<span class="number">-1</span>][f[i<span class="number">-1</span>][j]];<span class="comment">//就是之前的公式</span></span><br></pre></td></tr></table></figure>
<h3 id="得到答案"><a href="#得到答案" class="headerlink" title="得到答案"></a>得到答案</h3><p>我们知道，任何一个十进制整数都是可以转成二进制形式</p>
<p>这里的话，我们就拆分 $k$。这里的步骤也很像 $LCA$。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> x=i,m=k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">30</span>;j&gt;=<span class="number">0</span>;j--)</span><br><span class="line">        <span class="keyword">if</span>(m&gt;=(<span class="number">1l</span>l&lt;&lt;j))&#123;</span><br><span class="line">            m-=(<span class="number">1l</span>l&lt;&lt;j);<span class="comment">//拆</span></span><br><span class="line">            x=f[j][x];<span class="comment">//操作</span></span><br><span class="line">        &#125;</span><br><span class="line">    writen(x);<span class="comment">//输出</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="复杂度"><a href="#复杂度" class="headerlink" title="复杂度"></a>复杂度</h3><p>这个复杂度显然是 $O(n \log k)$ 是一个不错的复杂度。</p>
<h2 id="总代码"><a href="#总代码" class="headerlink" title="总代码"></a>总代码</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">writen</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    write(x);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXM=<span class="number">1e2</span>+<span class="number">10</span>,MAXN=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,k,a[MAXM],b[MAXM],c[MAXN],f[<span class="number">35</span>][MAXN];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    read(n);read(m);read(k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)read(a[i]),read(b[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)c[i]=i;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)reverse(c+a[i],c+b[i]+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)f[<span class="number">0</span>][i]=c[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">30</span>;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">            f[i][j]=f[i<span class="number">-1</span>][f[i<span class="number">-1</span>][j]];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x=i,m=k;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">30</span>;j&gt;=<span class="number">0</span>;j--)</span><br><span class="line">            <span class="keyword">if</span>(m&gt;=(<span class="number">1l</span>l&lt;&lt;j))&#123;</span><br><span class="line">                m-=(<span class="number">1l</span>l&lt;&lt;j);</span><br><span class="line">                x=f[j][x];</span><br><span class="line">            &#125;</span><br><span class="line">        writen(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>感谢 @LightningUZ 帮我调了这道题的代码，帮我调出了一个小错误。</p>
<p>如果题解有误，欢迎在下面评论或私信我，使得这篇题解更好。</p>
]]></content>
      <categories>
        <category>洛谷题库</category>
        <category>usaco</category>
      </categories>
      <tags>
        <tag>倍增</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 SP2916 【GSS5 - Can you answer these queries V】</title>
    <url>/2020/03/04/%E8%A7%A3-SP2916-%E3%80%90GSS5-Can-you-answer-these-queries-V%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/S2916" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p2916" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近沉迷于数据结构，感觉数据结构很有意思。</p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>先来分类讨论一下</p>
<h3 id="1-x2-lt-y1"><a href="#1-x2-lt-y1" class="headerlink" title="1. $x2&lt;y1$"></a>1. $x2&lt;y1$</h3><p><img src="https://i.loli.net/2020/03/04/y1Z4Y7XQADTWwM3.png" alt="afd.png"></p>
<p>如果 $y1&lt;x2$ 的话，答案 $=\max \limits_{ y1 \leq x \leq y2} \{ s_i \} - \min \limits_{x1 \leq x \leq x2} \{ s_i \}$</p>
<p>其中 $s_i$ 表示 $\sum\limits_{j=1}^{i} a_j$ ，就是俗称的前缀和</p>
<p><img src="https://i.loli.net/2020/03/04/E7g8BYwDZUQNypd.png" alt="afd.png"></p>
<p>这个东西可以用线段树维护。</p>
<h3 id="2-x2-gt-y1"><a href="#2-x2-gt-y1" class="headerlink" title="2. $x2&gt;=y1$"></a>2. $x2&gt;=y1$</h3><p><img src="https://i.loli.net/2020/03/04/5O18AXc39CQnliT.png" alt="afd.png"></p>
<p>这个怎么处理呢</p>
<p>答案 $=$ $\max \begin{cases}\max \limits_{ y1 \leq x \leq y2} \{ s_i \} - \min \limits_{x1 \leq x \leq y1} \{ s_i \}\ \max \limits_{ x2 \leq x \leq y2} \{ s_i \} - \min \limits_{x1 \leq x \leq x2} \{ s_i \}\ f(x,y)\end{cases}$</p>
<p>这里的 $f$ 函数就是最大子段和。</p>
<p>不会用线段树求最大子段和的可以看<a href="https://zhaohaikun.blog.luogu.org/solution-sp1716" target="_blank" rel="noopener">这里</a></p>
<p>最上面的 $2$ 个也是可以用线段树来维护的。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><strong>最后要注意的一点是前缀和</strong>，我们知道区间 $[i,j]$ 的和 $ = s_j-s_{i-1}$，而不是 $ = s_j-s_{i}$</p>
<p>这个怎么处理呢，我们发现我们的题目全部都是用 $Max$ 函数的答案减去 $Min$ 函数的答案，所以，我们可以把线段树维护的 $\min$ 全部减去 $a_{i}$</p>
<p>现在这份代码就能 $A$ 了</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls num&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs num&lt;&lt;1|1</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">writen</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    write(x);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">5e4</span>+<span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Tree</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l,r;</span><br><span class="line">    ll lans,rans,sum,ans,max,min;</span><br><span class="line">&#125;t[MAXN*<span class="number">4</span>];</span><br><span class="line"><span class="keyword">int</span> a[MAXN],x,y,n,T,T_,l1,r1,l2,r2;</span><br><span class="line">ll s[MAXN];</span><br><span class="line"><span class="function">Tree <span class="title">pushup</span><span class="params">(Tree L,Tree R)</span></span>&#123;</span><br><span class="line">    Tree z;</span><br><span class="line">    z.sum=L.sum+R.sum;</span><br><span class="line">    z.lans=max(L.lans,L.sum+R.lans);</span><br><span class="line">    z.rans=max(R.rans,R.sum+L.rans);</span><br><span class="line">    z.ans=max(max(L.ans,R.ans),L.rans+R.lans);</span><br><span class="line">    z.max=max(L.max,R.max);</span><br><span class="line">    z.min=min(L.min,R.min);</span><br><span class="line">    z.l=L.l;z.r=R.r;</span><br><span class="line">    <span class="keyword">return</span> z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> num)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l==r)&#123;</span><br><span class="line">        t[num].l=l;</span><br><span class="line">        t[num].r=r;</span><br><span class="line">        t[num].sum=a[l];</span><br><span class="line">        t[num].lans=a[l];</span><br><span class="line">        t[num].rans=a[l];</span><br><span class="line">        t[num].ans=a[l];</span><br><span class="line">        t[num].max=s[l];</span><br><span class="line">        t[num].min=s[l]-a[l];</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    build(l,mid,ls);</span><br><span class="line">    build(mid+<span class="number">1</span>,r,rs);</span><br><span class="line">    t[num]=pushup(t[ls],t[rs]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Tree <span class="title">query</span><span class="params">(<span class="keyword">int</span> num)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;=t[num].l&amp;&amp;t[num].r&lt;=y)<span class="keyword">return</span> t[num];</span><br><span class="line">    <span class="keyword">if</span>(t[rs].l&gt;y)<span class="keyword">return</span> query(ls);</span><br><span class="line">    <span class="keyword">if</span>(t[ls].r&lt;x)<span class="keyword">return</span> query(rs);</span><br><span class="line">    <span class="keyword">return</span> pushup(query(ls),query(rs));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">Max</span><span class="params">(<span class="keyword">int</span> num)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(t[num].l&gt;=x&amp;&amp;t[num].r&lt;=y)<span class="keyword">return</span> t[num].max;</span><br><span class="line">    <span class="keyword">if</span>(t[ls].r&lt;x)<span class="keyword">return</span> Max(rs);</span><br><span class="line">    <span class="keyword">if</span>(t[rs].l&gt;y)<span class="keyword">return</span> Max(ls);</span><br><span class="line">    <span class="keyword">return</span> max(Max(ls),Max(rs));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">Min</span><span class="params">(<span class="keyword">int</span> num)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(t[num].l&gt;=x&amp;&amp;t[num].r&lt;=y)<span class="keyword">return</span> t[num].min;</span><br><span class="line">    <span class="keyword">if</span>(t[ls].r&lt;x)<span class="keyword">return</span> Min(rs);</span><br><span class="line">    <span class="keyword">if</span>(t[rs].l&gt;y)<span class="keyword">return</span> Min(ls);</span><br><span class="line">    <span class="keyword">return</span> min(Min(ls),Min(rs));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">Mx</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    x=a;y=b;</span><br><span class="line">    <span class="keyword">return</span> Max(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">Mn</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    x=a;y=b;</span><br><span class="line">    <span class="keyword">return</span> Min(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">qy</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    x=a;y=b;</span><br><span class="line">    <span class="keyword">return</span> query(<span class="number">1</span>).ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    read(T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        read(n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)read(a[i]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)s[i]=s[i<span class="number">-1</span>]+a[i];</span><br><span class="line">        build(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">        read(T_);</span><br><span class="line">        <span class="keyword">while</span>(T_--)&#123;</span><br><span class="line">            read(l1);read(r1);read(l2);read(r2);</span><br><span class="line">            <span class="keyword">if</span>(r1&gt;l2)writen(max(qy(l2,r1),max(Mx(l2,r2)-Mn(l1,l2),Mx(r1,r2)-Mn(l1,r1))));</span><br><span class="line">            <span class="keyword">else</span> writen(Mx(l2,r2)-Mn(l1,r1));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>这篇题解如果有问题可以私信或评论，告诉我，一起完善</p>
]]></content>
      <categories>
        <category>洛谷题库</category>
        <category>SP题库</category>
      </categories>
      <tags>
        <tag>分类讨论</tag>
        <tag>线段树</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 SP1716 【GSS3 - Can you answer these queries III】</title>
    <url>/2020/03/03/%E8%A7%A3-SP1716-%E3%80%90GSS3-Can-you-answer-these-queries-III%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/SP1716" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p1716" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>首先说一下题意。就是每次给出 $x$ 和 $y$ 两个数，求 $x$ 到 $y$ 这个区间的最大子段和</p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>首先我们看这个数据范围，我们显然是要用线段树来做这道题。</p>
<p>我们考虑如何<code>pushup</code>。</p>
<h3 id="pushup的操作"><a href="#pushup的操作" class="headerlink" title="pushup的操作"></a><code>pushup</code>的操作</h3><p><img src="https://i.loli.net/2020/03/03/luVJw8qUL6gb1WT.png" alt="360截图17001020107151123.png"></p>
<h4 id="区间最大字段和"><a href="#区间最大字段和" class="headerlink" title="区间最大字段和"></a>区间最大字段和</h4><p>我们考虑一个区间的最大子段</p>
<p>我们分 $3$ 种情况讨论</p>
<h5 id="1-有可能是左边部分的最大子段和"><a href="#1-有可能是左边部分的最大子段和" class="headerlink" title="1. 有可能是左边部分的最大子段和"></a>1. 有可能是左边部分的最大子段和</h5><p><img src="https://i.loli.net/2020/03/03/MbQhGW7ruBJPYXk.png" alt="asdsajdfhiujhkja.png"></p>
<p>答案就是左边部分的最大子段和</p>
<h5 id="2-也有可能右边部分的最大子段和"><a href="#2-也有可能右边部分的最大子段和" class="headerlink" title="2. 也有可能右边部分的最大子段和"></a>2. 也有可能右边部分的最大子段和</h5><p><img src="https://i.loli.net/2020/03/03/EO9GtVwImgJ163u.png" alt="asdasajdfhiujhkja.png"></p>
<p>答案就是右边部分的最大子段和</p>
<h5 id="3-最大最大和有可能跨越了中间"><a href="#3-最大最大和有可能跨越了中间" class="headerlink" title="3. 最大最大和有可能跨越了中间"></a>3. 最大最大和有可能跨越了中间</h5><p><img src="https://i.loli.net/2020/03/03/fpndbVqamoOIXtK.png" alt="aasdasajdfhiujhkja.png"></p>
<p>答案就是左边部分右端点往左的最大子段和 $+$ 左端点往右的最大子段和</p>
<h4 id="发现"><a href="#发现" class="headerlink" title="发现"></a>发现</h4><p>所以，我们需要对于所有节点，还要维护它们以左端点往右的最大子段和、右端点往左的最大子段和。</p>
<p>我们再考虑如何维护一个区间以左端点往右的最大子段和、右端点往左的最大子段和。</p>
<h4 id="以左端点往右的最大子段和"><a href="#以左端点往右的最大子段和" class="headerlink" title="以左端点往右的最大子段和"></a>以左端点往右的最大子段和</h4><p>我们先考虑以左端点往右的最大子段和</p>
<p>我们分 $2$ 种情况讨论</p>
<h5 id="1-不跨越中间"><a href="#1-不跨越中间" class="headerlink" title="1. 不跨越中间"></a>1. 不跨越中间</h5><p><img src="https://i.loli.net/2020/03/03/b2BmrAucJ8jLdER.png" alt="aaasajdfhiujhkja.png"></p>
<p>答案就是左部分的以左端点往右的最大子段和</p>
<h5 id="2-跨越中间"><a href="#2-跨越中间" class="headerlink" title="2. 跨越中间"></a>2. 跨越中间</h5><p><img src="https://i.loli.net/2020/03/03/8TJ4RkfYzWdVSPX.png" alt="asdssssajdfhiujhkja.png"></p>
<p>答案就是左部分的和 $+$ 右部分以左端点往右的最大子段和</p>
<h4 id="以右端点往左的最大子段和"><a href="#以右端点往左的最大子段和" class="headerlink" title="以右端点往左的最大子段和"></a>以右端点往左的最大子段和</h4><p>我们先考虑以右端点往左的最大子段和</p>
<p>我们分 $2$ 种情况讨论</p>
<h5 id="1-不跨越中间-1"><a href="#1-不跨越中间-1" class="headerlink" title="1. 不跨越中间"></a>1. 不跨越中间</h5><p><img src="https://i.loli.net/2020/03/03/6Nv3yeZRlqLfo2C.png" alt="kja.png"></p>
<p>答案就是右部分的以左端点往右的最大子段和</p>
<h5 id="2-跨越中间-1"><a href="#2-跨越中间-1" class="headerlink" title="2. 跨越中间"></a>2. 跨越中间</h5><p><img src="https://i.loli.net/2020/03/03/ZuSvq8rM3mKwUsG.png" alt="df.png"></p>
<p>答案就是右部分的和 $+$ 左部分以右端点往左的最大子段和</p>
<h4 id="发现-1"><a href="#发现-1" class="headerlink" title="发现"></a>发现</h4><p>我们发现我们还需要维护区间和，这个问题很简单，不在讲解了。</p>
<p>所以我们现在总共要维护 $4$ 个东西</p>
<p>分别是</p>
<p>$lans$、$rans$、$ans$、$sum$</p>
<h4 id="边界情况——即整个区间是一个点"><a href="#边界情况——即整个区间是一个点" class="headerlink" title="边界情况——即整个区间是一个点"></a>边界情况——即整个区间是一个点</h4><p>我们可以发现</p>
<p>$lans$、$rans$、$ans$、$sum$ 都为这个点的值</p>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">Tree <span class="title">pushup</span><span class="params">(Tree L,Tree R)</span></span>&#123;</span><br><span class="line">    Tree z;</span><br><span class="line">    z.sum=L.sum+R.sum;<span class="comment">//和</span></span><br><span class="line">    z.l=max(L.l,L.sum+R.l);<span class="comment">//2种情况</span></span><br><span class="line">    z.r=max(R.r,R.sum+L.r);<span class="comment">//2种情况</span></span><br><span class="line">    z.ans=max(max(L.ans,R.ans),L.r+R.l);<span class="comment">//3种情况</span></span><br><span class="line">    <span class="keyword">return</span> z;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里我写了一个带返回值的函数，就是为了下面方便啦。</p>
<h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><p>上文已经讲解了最大子段和的 $3$ 中情况，已经知道最大子段和跟 $4$ 个东西有关。</p>
<p>所以我们要定义一个返回值为 $Tree$ 的函数。</p>
<p>那么现在，关键就在于合并区间，那么现在之前的<code>pushup</code>就可以被调用了。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">Tree <span class="title">query</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> num,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l&lt;=x&amp;&amp;r&lt;=y)<span class="keyword">return</span> t[num];</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(y&lt;=mid)<span class="keyword">return</span> query(x,y,ls,l,mid);<span class="comment">//右区间和查询区间没有交，答案当然在左区间</span></span><br><span class="line">    <span class="keyword">if</span>(mid&lt;x)<span class="keyword">return</span> query(x,y,rs,mid+<span class="number">1</span>,r);<span class="comment">//左区间和查询区间没有交，答案当然在右区间</span></span><br><span class="line">    <span class="keyword">return</span> pushup(query(x,mid,ls,l,mid),query(mid+<span class="number">1</span>,y,rs,mid+<span class="number">1</span>,r));<span class="comment">//是不是很简洁？</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2><p>我们已经把这道题的重点都搞清楚了，接下来就可以放代码了，至于单点修改不会的请自行去<a href="https://oi-wiki.org/ds/seg/" target="_blank" rel="noopener">学习</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls num&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs num&lt;&lt;1|1</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">writen</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    write(x);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">5e4</span>+<span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Tree</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> sum,l,r,ans;<span class="comment">//维护的4个量</span></span><br><span class="line">&#125;t[MAXN*<span class="number">4</span>];</span><br><span class="line"><span class="keyword">int</span> a[MAXN],f,x,y;</span><br><span class="line"><span class="function">Tree <span class="title">pushup</span><span class="params">(Tree L,Tree R)</span></span>&#123;</span><br><span class="line">    Tree z;</span><br><span class="line">    z.sum=L.sum+R.sum;<span class="comment">//和</span></span><br><span class="line">    z.l=max(L.l,L.sum+R.l);<span class="comment">//2种情况</span></span><br><span class="line">    z.r=max(R.r,R.sum+L.r);<span class="comment">//2种情况</span></span><br><span class="line">    z.ans=max(max(L.ans,R.ans),L.r+R.l);<span class="comment">//3种情况</span></span><br><span class="line">    <span class="keyword">return</span> z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> num)</span></span>&#123;<span class="comment">//建树</span></span><br><span class="line">    <span class="keyword">if</span>(l==r)&#123;</span><br><span class="line">        t[num].sum=a[l];</span><br><span class="line">        t[num].l=a[l];</span><br><span class="line">        t[num].r=a[l];</span><br><span class="line">        t[num].ans=a[l];<span class="comment">//边界初始化</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    build(l,mid,ls);</span><br><span class="line">    build(mid+<span class="number">1</span>,r,rs);</span><br><span class="line">    t[num]=pushup(t[ls],t[rs]);<span class="comment">//pushup</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> num)</span></span>&#123;<span class="comment">//单点修改</span></span><br><span class="line">    <span class="keyword">if</span>(l==r)&#123;</span><br><span class="line">        t[num].sum=y;</span><br><span class="line">        t[num].l=y;</span><br><span class="line">        t[num].r=y;</span><br><span class="line">        t[num].ans=y;<span class="comment">//边界初始化</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;=mid)change(l,mid,ls);</span><br><span class="line">    <span class="keyword">else</span> change(mid+<span class="number">1</span>,r,rs);</span><br><span class="line">    t[num]=pushup(t[ls],t[rs]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Tree <span class="title">query</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> num,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l&lt;=x&amp;&amp;r&lt;=y)<span class="keyword">return</span> t[num];</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(y&lt;=mid)<span class="keyword">return</span> query(x,y,ls,l,mid);<span class="comment">//右区间和查询区间没有交，答案当然在左区间</span></span><br><span class="line">    <span class="keyword">if</span>(mid&lt;x)<span class="keyword">return</span> query(x,y,rs,mid+<span class="number">1</span>,r);<span class="comment">//左区间和查询区间没有交，答案当然在右区间</span></span><br><span class="line">    <span class="keyword">return</span> pushup(query(x,mid,ls,l,mid),query(mid+<span class="number">1</span>,y,rs,mid+<span class="number">1</span>,r));<span class="comment">//是不是很简洁？</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,T;</span><br><span class="line">    read(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)read(a[i]);</span><br><span class="line">    build(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">    read(T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        read(f);read(x);read(y);</span><br><span class="line">        <span class="keyword">if</span>(f==<span class="number">0</span>)change(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">else</span> writen(query(x,y,<span class="number">1</span>,<span class="number">1</span>,n).ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>洛谷题库</category>
        <category>SP题库</category>
      </categories>
      <tags>
        <tag>分类讨论</tag>
        <tag>线段树</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 P5835 【[USACO19DEC]Meetings S】</title>
    <url>/2020/03/03/%E8%A7%A3-P5835-%E3%80%90-USACO19DEC-Meetings-S%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P5835" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p5835" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这道题目是道好题，想通了之后就可以把轻松这道题做出来。</p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>先把一个结论写出来。</p>
<p>无论所有奶牛怎么走，它们的体重从左往右组成的序列是不会发生改变的。</p>
<p>这个结论简单地说明一下。</p>
<ol>
<li><p>首先我们可以把 $2$ 头牛相遇看成 $2$ 头牛走的方向不变，只是交换了体重。</p>
</li>
<li><p>如果这些奶牛的体重从左往右组成的序列发生改变，一定是 $2$ 头牛相向而行，然后发生序列变化。但是现在我们可以把交换体重看做<strong>如果序列发生变化，就将 $2$ 数交换，不让序列发生改变。</strong></p>
</li>
</ol>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><h3 id="二分·时间"><a href="#二分·时间" class="headerlink" title="二分·时间"></a>二分·时间</h3><p>有了这个性质，就好办了。</p>
<p>我们发现时间是有单调性的，然后我们就可以二分时间。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> ll=<span class="number">0</span>,rr=INT_MIN&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(ll+<span class="number">1</span>&lt;rr)&#123;</span><br><span class="line">    <span class="keyword">int</span> mid=(ll+rr)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(check(mid))rr=mid;</span><br><span class="line">    <span class="keyword">else</span> ll=mid;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>至于 $check$ 怎么写呢？</p>
<p>我们先要把 $a$ 数组是 <strong>按位置从小到大排序。</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp);</span><br></pre></td></tr></table></figure>
<p>$cmp$：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node x,node y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.x&lt;y.x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>先放一下代码。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> llll=<span class="number">1</span>,rrrr=n,s=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">if</span>(a[i].d==<span class="number">1</span>)s+=a[i].x+x&gt;=l?a[rrrr--].w:<span class="number">0</span>;<span class="comment">//如果能到，重量就是a[rr--].w</span></span><br><span class="line">        <span class="keyword">else</span> s+=a[i].x-x&lt;=<span class="number">0</span>?a[llll++].w:<span class="number">0</span>;<span class="comment">//如果能到，重量就是a[ll++].w</span></span><br><span class="line">    <span class="keyword">return</span> s*<span class="number">2</span>&gt;=sm;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>其实就是</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ll=<span class="number">1</span>,rr=n,s=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">if</span>(a[i].d==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i].x+x&gt;=l)s+=a[rr--].w;<span class="comment">//如果能到，重量就是a[rr--].w</span></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i].x-x&lt;=<span class="number">0</span>)s+=a[ll++].w;<span class="comment">//如果能到，重量就是a[ll++].w</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> s*<span class="number">2</span>&gt;=sm;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>解释一下，有人可能会</p>
<p>问：</p>
<blockquote>
<p>程序里的体重不一定对啊？</p>
</blockquote>
<p>答：</p>
<blockquote>
<p>最后的体重显然是</p>
<p>$\sum\limits_{i=1}^{k1} w_{i}+\sum\limits_{i=k2}^{n} w_{i}$</p>
<p>因为最后到达牛棚的，一定是达到  $0$  的若干个，到达 $L$ 的若干个，再联系一下上面的性质，就显然是这个式子了。当然我们的 $a$ 数组是 <strong>按位置从小到大排序的。</strong></p>
</blockquote>
<h3 id="二分·查找"><a href="#二分·查找" class="headerlink" title="二分·查找"></a>二分·查找</h3><p>我们知道了时间，距离 $AC$ 还需要找到奶牛相遇的对数的总数。</p>
<p>现在，我们的 $a$ 数组已经按位置从小到大排序了。</p>
<p>我们从左往右扫过去，我们知道，相遇的对数 $=$ 往左走的奶牛所碰到往右走的奶牛的数量之和。</p>
<p>那么碰到的往右走的奶牛的数量之和，我们可以用<strong>二分</strong>来统计。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[i].d==<span class="number">-1</span>)&#123;<span class="comment">//向左走</span></span><br><span class="line">        <span class="keyword">int</span> xx=a[i].x-rr*<span class="number">2</span>;<span class="comment">//这里注意速度是1+1=2</span></span><br><span class="line">        <span class="keyword">int</span> lll=<span class="number">0</span>,rrr=k+<span class="number">1</span>;<span class="comment">//二分，注意边界</span></span><br><span class="line">        <span class="keyword">while</span>(lll+<span class="number">1</span>&lt;rrr)&#123;</span><br><span class="line">            <span class="keyword">int</span> mid=(lll+rrr)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(f[mid]&gt;=xx)rrr=mid;</span><br><span class="line">            <span class="keyword">else</span> lll=mid;</span><br><span class="line">        &#125;</span><br><span class="line">        ans+=k-rrr+<span class="number">1</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        f[++k]=a[i].x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里的二分是在找<strong>能与这头向左走的牛相遇的最左边的牛。</strong></p>
<p>这里的 $f$ 数组是记录向右走的牛。</p>
<h2 id="总代码"><a href="#总代码" class="headerlink" title="总代码"></a>总代码</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">5e4</span>+<span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> w,x,d;</span><br><span class="line">&#125;a[MAXN];</span><br><span class="line"><span class="keyword">int</span> n,l,sm,f[MAXN],k,ans;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node x,node y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.x&lt;y.x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ll=<span class="number">1</span>,rr=n,s=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">if</span>(a[i].d==<span class="number">1</span>)s+=a[i].x+x&gt;=l?a[rr--].w:<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span> s+=a[i].x-x&lt;=<span class="number">0</span>?a[ll++].w:<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> s*<span class="number">2</span>&gt;=sm;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    read(n);read(l);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)read(a[i].w),read(a[i].x),read(a[i].d),sm+=a[i].w;</span><br><span class="line">    sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp);</span><br><span class="line">    <span class="keyword">int</span> ll=<span class="number">0</span>,rr=INT_MAX&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(ll+<span class="number">1</span>&lt;rr)&#123;</span><br><span class="line">        <span class="keyword">int</span> mid=(ll+rr)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(check(mid))rr=mid;</span><br><span class="line">        <span class="keyword">else</span> ll=mid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i].d==<span class="number">-1</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> xx=a[i].x-rr*<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">int</span> lll=<span class="number">0</span>,rrr=k+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span>(lll+<span class="number">1</span>&lt;rrr)&#123;</span><br><span class="line">                <span class="keyword">int</span> mid=(lll+rrr)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(f[mid]&gt;=xx)rrr=mid;</span><br><span class="line">                <span class="keyword">else</span> lll=mid;</span><br><span class="line">            &#125;</span><br><span class="line">            ans+=k-rrr+<span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            f[++k]=a[i].x;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>总体来讲，这道题目细节比较多，思维难度也比较高。</p>
<p>所以，如作者有错误请在评论区指出，谢谢。</p>
]]></content>
      <categories>
        <category>洛谷题库</category>
        <category>usaco</category>
      </categories>
      <tags>
        <tag>二分</tag>
        <tag>排序</tag>
        <tag>贪心</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 P3205 【[HNOI2010]合唱队】</title>
    <url>/2020/03/03/%E8%A7%A3-P3205-%E3%80%90-HNOI2010-%E5%90%88%E5%94%B1%E9%98%9F%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3205" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p3205" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<h3 id="讲讲我的做法"><a href="#讲讲我的做法" class="headerlink" title="讲讲我的做法"></a>讲讲我的做法</h3><p>看了题目发现要用区间$dp$，为什么?</p>
<p>我们发现区间$dp$有一个性质——大区间包涵小区间，这道题就符合这样的一个性质<br><img src="https://cdn.luogu.com.cn/upload/pic/75397.png" alt=""><br>所以我们要用区间$dp$来解决这道题。</p>
<h4 id="如何设计状态"><a href="#如何设计状态" class="headerlink" title="如何设计状态"></a>如何设计状态</h4><p>那么我们要怎么设计状态，我们想，每给人进入队伍里，只有2种可能，1种是从左边加入，另外1种是从右边进入，所以我们的装态是有3个数</p>
<p>$f[i][j][0]$表示的是第$i$人从左边进来的方案数</p>
<p>$f[i][j][1]$表示的是第$j$人从右边进来的方案数</p>
<h4 id="推导状态转移方程"><a href="#推导状态转移方程" class="headerlink" title="推导状态转移方程"></a>推导状态转移方程</h4><p>从左边进来肯定前1个人比他高，前1个人有2种情况，要么在$i+1$号位置，要么在$j$号位置。</p>
<p>同理</p>
<p>从右边进来肯定前1个人比他矮，前1个人有2种情况，要么在$j-1$号位置，要么在$i$号位置。</p>
<p>那么状态转移方程就出来了<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(a[i]&lt;a[i+<span class="number">1</span>])f[i][j][<span class="number">0</span>]+=f[i+<span class="number">1</span>][j][<span class="number">0</span>];</span><br><span class="line"><span class="keyword">if</span>(a[i]&lt;a[j])f[i][j][<span class="number">0</span>]+=f[i+<span class="number">1</span>][j][<span class="number">1</span>];</span><br><span class="line"><span class="keyword">if</span>(a[j]&gt;a[i])f[i][j][<span class="number">1</span>]+=f[i][j<span class="number">-1</span>][<span class="number">0</span>];</span><br><span class="line"><span class="keyword">if</span>(a[j]&gt;a[j<span class="number">-1</span>])f[i][j][<span class="number">1</span>]+=f[i][j<span class="number">-1</span>][<span class="number">1</span>];</span><br><span class="line">f[i][j][<span class="number">0</span>]%=<span class="number">19650827</span>;</span><br><span class="line">f[i][j][<span class="number">1</span>]%=<span class="number">19650827</span>;</span><br></pre></td></tr></table></figure></p>
<h4 id="边界条件"><a href="#边界条件" class="headerlink" title="边界条件"></a>边界条件</h4><p>当$i=j$的时候显然只有一种方案，所以边界条件是<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)f[i][i][<span class="number">0</span>]=<span class="number">1</span>,f[i][i][<span class="number">1</span>]=<span class="number">1</span>;</span><br></pre></td></tr></table></figure><br>然而你会发现你WA了，为什么</p>
<p>因为，只有一个人的时候方案只有一种，可是我们这里却有2种方案，所以我们得默认1个人的时候，是从左边进来，于是我们就有了正确的边界条件<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)f[i][i][<span class="number">0</span>]=<span class="number">1</span>;</span><br></pre></td></tr></table></figure></p>
<h4 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">2010</span>][<span class="number">2010</span>][<span class="number">2</span>],a[<span class="number">2010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)f[i][i][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> len=<span class="number">1</span>;len&lt;=n;len++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,j=i+len;j&lt;=n;i++,j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]&lt;a[i+<span class="number">1</span>])f[i][j][<span class="number">0</span>]+=f[i+<span class="number">1</span>][j][<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">if</span>(a[i]&lt;a[j])f[i][j][<span class="number">0</span>]+=f[i+<span class="number">1</span>][j][<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span>(a[j]&gt;a[i])f[i][j][<span class="number">1</span>]+=f[i][j<span class="number">-1</span>][<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">if</span>(a[j]&gt;a[j<span class="number">-1</span>])f[i][j][<span class="number">1</span>]+=f[i][j<span class="number">-1</span>][<span class="number">1</span>];</span><br><span class="line">            f[i][j][<span class="number">0</span>]%=<span class="number">19650827</span>;</span><br><span class="line">            f[i][j][<span class="number">1</span>]%=<span class="number">19650827</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;(f[<span class="number">1</span>][n][<span class="number">0</span>]+f[<span class="number">1</span>][n][<span class="number">1</span>])%<span class="number">19650827</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>洛谷题库</category>
        <category>HN省选</category>
      </categories>
      <tags>
        <tag>dp</tag>
        <tag>区间dp</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 P1002 【过河卒】</title>
    <url>/2020/03/03/%E8%A7%A3-P1002-%E3%80%90%E8%BF%87%E6%B2%B3%E5%8D%92%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1002" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p1002" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/dqlo9i4w.png" alt=""></p>
<p>简单描述一下题意：</p>
<p>士兵想要过河，他每一次可以往下走一格，也可以往右走一格，但马一步走到的地方是不能走的，问走到$n$行，$m$列有多少种走法</p>
<p>我们显然应该先根据马的位置将不能走的格子做一下标记</p>
<p>于是，就会写下这段代码：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> x,<span class="keyword">long</span> <span class="keyword">long</span> y)</span></span>&#123;</span><br><span class="line">    ma[x][y]=<span class="number">1</span>;</span><br><span class="line">    ma[x<span class="number">-1</span>][y<span class="number">-2</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x<span class="number">-2</span>][y<span class="number">-1</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x<span class="number">-2</span>][y+<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x<span class="number">-1</span>][y+<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x+<span class="number">1</span>][y<span class="number">-2</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x+<span class="number">2</span>][y<span class="number">-1</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x+<span class="number">2</span>][y+<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x+<span class="number">1</span>][y+<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>之后就可以使用奥数中的一种简单而常用的方法——<strong>标数法</strong></p>
<p><strong>可以举个例子</strong>：</p>
<p><img src="https://i.loli.net/2019/10/25/OlK3HhBWmTRqguf.png" alt="123.png"></p>
<p>从这个表格的第一行第一列，走到第二行第二列的走法数量是由走到第一行第二列的方案数+第二行第一列的方案数</p>
<p>也就是走到x行，y列的方案数=走到x-1行，y列的方案数+走到x行，y-1列的方案数（出界就按0算）</p>
<p>也就是</p>
<script type="math/tex; mode=display">f[i][j]=f[i-1][j]+f[i][j-1]</script><p>因为走到$x$行$y$列的方案显然是来自于它的左边和它的上面，因为只有这两个格子才可以一步到达这个格子。</p>
<p>于是我们就可以开始递推：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">      	<span class="keyword">if</span>(i==<span class="number">1</span>&amp;&amp;j==<span class="number">1</span>)<span class="keyword">continue</span>;</span><br><span class="line">       	<span class="keyword">if</span>(ma[i][j]==<span class="number">0</span>)x[i][j]=x[i<span class="number">-1</span>][j]+x[i][j<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>下面是我AC的代码<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a,b,n,m,x[<span class="number">23</span>][<span class="number">23</span>],ma[<span class="number">23</span>][<span class="number">23</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> x,<span class="keyword">long</span> <span class="keyword">long</span> y)</span></span>&#123;</span><br><span class="line">    ma[x][y]=<span class="number">1</span>;</span><br><span class="line">    ma[x<span class="number">-1</span>][y<span class="number">-2</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x<span class="number">-2</span>][y<span class="number">-1</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x<span class="number">-2</span>][y+<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x<span class="number">-1</span>][y+<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x+<span class="number">1</span>][y<span class="number">-2</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x+<span class="number">2</span>][y<span class="number">-1</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x+<span class="number">2</span>][y+<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x+<span class="number">1</span>][y+<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld %lld"</span>,&amp;n,&amp;m,&amp;a,&amp;b);</span><br><span class="line">    a++;</span><br><span class="line">    b++;</span><br><span class="line">    n++;</span><br><span class="line">    m++;</span><br><span class="line">    work(a,b);</span><br><span class="line">    x[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">        	<span class="keyword">if</span>(i==<span class="number">1</span>&amp;&amp;j==<span class="number">1</span>)<span class="keyword">continue</span>;</span><br><span class="line">        	<span class="keyword">if</span>(ma[i][j]==<span class="number">0</span>)x[i][j]=x[i<span class="number">-1</span>][j]+x[i][j<span class="number">-1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld"</span>,x[n][m]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="后记与补充"><a href="#后记与补充" class="headerlink" title="后记与补充"></a>后记与补充</h1><p><img src="https://i.loli.net/2019/10/25/OlK3HhBWmTRqguf.png" alt="123.png"></p>
<p>观看这张图，我们还可以发现其他的东西，我们能发现下面一行比上一行大的值，就是它左边格子的值，所以，我们可以将这道题优化成一维，代码实现也是很简单的。</p>
<script type="math/tex; mode=display">f[i]+=f[i-1]</script><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a,b,n,m,f[<span class="number">23</span>],ma[<span class="number">23</span>][<span class="number">23</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> x,<span class="keyword">long</span> <span class="keyword">long</span> y)</span></span>&#123;</span><br><span class="line">    ma[x][y]=<span class="number">1</span>;</span><br><span class="line">    ma[x<span class="number">-1</span>][y<span class="number">-2</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x<span class="number">-2</span>][y<span class="number">-1</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x<span class="number">-2</span>][y+<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x<span class="number">-1</span>][y+<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x+<span class="number">1</span>][y<span class="number">-2</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x+<span class="number">2</span>][y<span class="number">-1</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x+<span class="number">2</span>][y+<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    ma[x+<span class="number">1</span>][y+<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld %lld %lld %lld"</span>,&amp;n,&amp;m,&amp;a,&amp;b);</span><br><span class="line">    a++;</span><br><span class="line">    b++;</span><br><span class="line">    n++;</span><br><span class="line">    m++;</span><br><span class="line">    work(a,b);</span><br><span class="line">    x[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">			<span class="keyword">if</span>(i==<span class="number">1</span>&amp;&amp;j==<span class="number">1</span>)<span class="keyword">continue</span>;</span><br><span class="line">        	<span class="keyword">if</span>(ma[i][j]==<span class="number">0</span>)f[j]+=f[j<span class="number">-1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld"</span>,f[m]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如果我的文章对你有帮助请点个赞！！！</p>
<p>谢谢。</p>
]]></content>
      <categories>
        <category>洛谷题库</category>
      </categories>
      <tags>
        <tag>dp</tag>
        <tag>递推</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 分割田地</title>
    <url>/2020/03/02/%E9%A2%98%E8%A7%A3-%E5%88%86%E5%89%B2%E7%94%B0%E5%9C%B0/</url>
    <content><![CDATA[<p>这篇总的题解蒟蒻写了 $3.5h s$！作为回报，你们是不是应该去<a href="https://zhaohaikun.blog.luogu.org/" target="_blank" rel="noopener">$ZHK$ 的洛谷博客</a>里给 $ZHK$ 的所有题解点赞呢！</p>
<a id="more"></a>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这道题目呢，真的很复杂。</p>
<p>考试的时候呢，看到如此小的数据，就写了个搜索，写好之后一测，发现不对了。发现了一种情况。</p>
<p><img src="https://i.loli.net/2020/03/02/rAgO8JXEvZDmNL3.png" alt=""></p>
<p>然后我就 $fst$ 了，还有 $5$ 分钟，我终于想到了 $dp$，这也就是正解。</p>
<p>然后没写完 $qwq$。</p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>我们定义：$f_{i,j,0/1}$ 代表前 $i$ 列，分割成 $j$ 份，最后一列 $2$ 块是否在同一块地。</p>
<p><del>这就好办了</del></p>
<p>我们必须考虑两列。因为此列是否跟前一列连，也是很重要的。</p>
<p>然后，我们可以开始分类讨论。</p>
<p>为了方便看，我用了四种颜色来画。分别是红、黄、橙、绿。</p>
<h3 id="这-1-列-2-个格子不在一块"><a href="#这-1-列-2-个格子不在一块" class="headerlink" title="这 $1$ 列 $2$ 个格子不在一块"></a>这 $1$ 列 $2$ 个格子不在一块</h3><p>我们先考虑最后 $2$ 块颜色不一样的情况。</p>
<h4 id="前-1-列-2-个格子不在一块"><a href="#前-1-列-2-个格子不在一块" class="headerlink" title="前 $1$ 列 $2$ 个格子不在一块"></a>前 $1$ 列 $2$ 个格子不在一块</h4><h5 id="情况-1"><a href="#情况-1" class="headerlink" title="情况 $1$"></a>情况 $1$</h5><p><img src="https://i.loli.net/2020/03/02/GrLOu8vTR7tmMhS.png" alt=""></p>
<script type="math/tex; mode=display">f_{i,j,0}+=f_{i-1,j-2,0}</script><h5 id="情况-2"><a href="#情况-2" class="headerlink" title="情况 $2$"></a>情况 $2$</h5><p><img src="https://i.loli.net/2020/03/02/54TXbMuplHBONFK.png" alt=""></p>
<script type="math/tex; mode=display">f_{i,j,0}+=f_{i-1,j-1,0}</script><h5 id="情况-3"><a href="#情况-3" class="headerlink" title="情况 $3$"></a>情况 $3$</h5><p><img src="https://i.loli.net/2020/03/02/OQPEjcir1sD9elV.png" alt=""></p>
<script type="math/tex; mode=display">f_{i,j,0}+=f_{i-1,j-1,0}</script><p>注意：情况 $3$ 和情况 $2$ 为 $2$ 种不同的情况，一定不要漏考虑。</p>
<h5 id="情况-4"><a href="#情况-4" class="headerlink" title="情况 $4$"></a>情况 $4$</h5><p><img src="https://i.loli.net/2020/03/02/YaWSKv1P2N7urGp.png" alt="360截图18720124667558.png"></p>
<p>$f_{i,j,0}+=f_{i-1,j-0,0}$</p>
<h4 id="前-1-列-2-个格子在一块"><a href="#前-1-列-2-个格子在一块" class="headerlink" title="前 $1$ 列 $2$ 个格子在一块"></a>前 $1$ 列 $2$ 个格子在一块</h4><h5 id="情况-1-1"><a href="#情况-1-1" class="headerlink" title="情况 $1$"></a>情况 $1$</h5><p><img src="https://i.loli.net/2020/03/02/cqXGJRam4AYUehQ.png" alt="360截图18720124667558.png"></p>
<script type="math/tex; mode=display">f_{i,j,0}+=f_{i-1,j-2,1}</script><h5 id="情况-2-1"><a href="#情况-2-1" class="headerlink" title="情况 $2$"></a>情况 $2$</h5><p><img src="https://i.loli.net/2020/03/02/6WS8yj7YITpCOvb.png" alt="360截图18720124667558.png"></p>
<script type="math/tex; mode=display">f_{i,j,0}+=f_{i-1,j-1,1}</script><h5 id="情况-3-1"><a href="#情况-3-1" class="headerlink" title="情况 $3$"></a>情况 $3$</h5><p><img src="https://i.loli.net/2020/03/02/uAKmWXgNciQk6E7.png" alt="360截图18720124667558.png"></p>
<script type="math/tex; mode=display">f_{i,j,0}+=f_{i-1,j-1,1}</script><p>注意：情况 $3$ 和情况 $2$ 为 $2$ 种不同的情况，一定不要漏考虑。</p>
<h3 id="这-1-列-2-个格子在一块"><a href="#这-1-列-2-个格子在一块" class="headerlink" title="这 $1$ 列 $2$ 个格子在一块"></a>这 $1$ 列 $2$ 个格子在一块</h3><h4 id="前-1-列-2-个格子不在一块-1"><a href="#前-1-列-2-个格子不在一块-1" class="headerlink" title="前 $1$ 列 $2$ 个格子不在一块"></a>前 $1$ 列 $2$ 个格子不在一块</h4><h5 id="情况-1-2"><a href="#情况-1-2" class="headerlink" title="情况 $1$"></a>情况 $1$</h5><p><img src="https://i.loli.net/2020/03/02/kJzqMYEhH8IQir1.png" alt="360截图18720124667558.png"></p>
<script type="math/tex; mode=display">f_{i,j,1}+=f_{i-1,j-1,0}</script><h5 id="情况-2-2"><a href="#情况-2-2" class="headerlink" title="情况 $2$"></a>情况 $2$</h5><p><img src="https://i.loli.net/2020/03/02/gnG3s5EBXdtLJfA.png" alt="360截图18720124667558.png"></p>
<script type="math/tex; mode=display">f_{i,j,1}+=f_{i-1,j-0,0}</script><h5 id="情况-3-2"><a href="#情况-3-2" class="headerlink" title="情况 $3$"></a>情况 $3$</h5><p><img src="https://i.loli.net/2020/03/02/4QslVBzaFrxtHJp.png" alt="360截图18720124667558.png"></p>
<script type="math/tex; mode=display">f_{i,j,1}+=f_{i-1,j-0,0}</script><p>注意：情况 $3$ 和情况 $2$ 为 $2$ 种不同的情况，一定不要漏考虑。</p>
<h4 id="这-1-列-2-个格子在一块-1"><a href="#这-1-列-2-个格子在一块-1" class="headerlink" title="这 $1$ 列 $2$ 个格子在一块"></a>这 $1$ 列 $2$ 个格子在一块</h4><h5 id="情况-1-3"><a href="#情况-1-3" class="headerlink" title="情况 $1$"></a>情况 $1$</h5><p><img src="https://i.loli.net/2020/03/02/8TEwPrN7GBRypnJ.png" alt="GrLOu8vTR7tmMhS.png"></p>
<script type="math/tex; mode=display">f_{i,j,1}+=f_{i-1,j-1,1}</script><h5 id="情况-2-3"><a href="#情况-2-3" class="headerlink" title="情况 $2$"></a>情况 $2$</h5><p><img src="https://i.loli.net/2020/03/02/amP2wcyHDd8TsRn.png" alt="GrLOu8vTR7tmMhS.png"></p>
<p>$f_{i,j,1}+=f_{i-1,j-0,1}$</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>代码就应该很好写了。</p>
<p>我是写了记忆化搜索，因为非法情况和边界条件很多。</p>
<h3 id="非法"><a href="#非法" class="headerlink" title="非法"></a>非法</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(i==<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(k==<span class="number">1</span>)<span class="keyword">return</span> j==<span class="number">1</span>;<span class="comment">//如果第1列的2个格子颜色相同，只能分割成1分。</span></span><br><span class="line">    <span class="keyword">return</span> j==<span class="number">2</span>;<span class="comment">//如果第1列的2个格子颜色不相同，只能分割成2分。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="边界"><a href="#边界" class="headerlink" title="边界"></a>边界</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(j==<span class="number">1</span>)<span class="keyword">return</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure>
<p>你会发现，</p>
<h3 id="状态转移方程"><a href="#状态转移方程" class="headerlink" title="状态转移方程"></a>状态转移方程</h3><p>经过上面的推导，状态转移方程也是水到渠成了。</p>
<p>状态转移方程：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(k==<span class="number">0</span>)&#123;</span><br><span class="line">    f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-2</span>,<span class="number">0</span>);</span><br><span class="line">    f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-1</span>,<span class="number">0</span>);</span><br><span class="line">    f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-1</span>,<span class="number">0</span>);</span><br><span class="line">    f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-0</span>,<span class="number">0</span>);</span><br><span class="line">    f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-2</span>,<span class="number">1</span>);</span><br><span class="line">    f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-1</span>,<span class="number">1</span>);</span><br><span class="line">    f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-1</span>,<span class="number">1</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    f[i][j][<span class="number">1</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-1</span>,<span class="number">0</span>);</span><br><span class="line">    f[i][j][<span class="number">1</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-0</span>,<span class="number">0</span>);</span><br><span class="line">    f[i][j][<span class="number">1</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-0</span>,<span class="number">0</span>);</span><br><span class="line">    f[i][j][<span class="number">1</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-1</span>,<span class="number">1</span>);</span><br><span class="line">    f[i][j][<span class="number">1</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-0</span>,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="总代码"><a href="#总代码" class="headerlink" title="总代码"></a>总代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,k,f[<span class="number">1010</span>][<span class="number">2010</span>][<span class="number">2</span>];</span><br><span class="line"><span class="keyword">bool</span> h[<span class="number">1010</span>][<span class="number">2010</span>][<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j,<span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(i==<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(k==<span class="number">1</span>)<span class="keyword">return</span> j==<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> j==<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(j==<span class="number">1</span>)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(h[i][j][k])<span class="keyword">return</span> f[i][j][k];</span><br><span class="line">    h[i][j][k]=<span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(k==<span class="number">0</span>)&#123;</span><br><span class="line">        f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-2</span>,<span class="number">0</span>);</span><br><span class="line">        f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-1</span>,<span class="number">0</span>);</span><br><span class="line">        f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-1</span>,<span class="number">0</span>);</span><br><span class="line">        f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-0</span>,<span class="number">0</span>);</span><br><span class="line">        f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-2</span>,<span class="number">1</span>);</span><br><span class="line">        f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-1</span>,<span class="number">1</span>);</span><br><span class="line">        f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-1</span>,<span class="number">1</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        f[i][j][<span class="number">1</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-1</span>,<span class="number">0</span>);</span><br><span class="line">        f[i][j][<span class="number">1</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-0</span>,<span class="number">0</span>);</span><br><span class="line">        f[i][j][<span class="number">1</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-0</span>,<span class="number">0</span>);</span><br><span class="line">        f[i][j][<span class="number">1</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-1</span>,<span class="number">1</span>);</span><br><span class="line">        f[i][j][<span class="number">1</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-0</span>,<span class="number">1</span>);</span><br><span class="line">    &#125;<span class="keyword">return</span> f[i][j][k];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    read(n);read(k);</span><br><span class="line">    write(dfs(n,k,<span class="number">0</span>)+dfs(n,k,<span class="number">1</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="调错"><a href="#调错" class="headerlink" title="调错"></a>调错</h3><p>然后你会发现你连样例都过不了，原来是有一种错误的情况在这里骗吃骗喝。</p>
<p>​   ——$j=1,k=0$</p>
<p>这一列 $2$ 两个格子颜色不同，还分成 $1$ 份？显然是错的（我在这里死了 $1 h$）</p>
<h3 id="总代码-1"><a href="#总代码-1" class="headerlink" title="总代码"></a>总代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,k,f[<span class="number">1010</span>][<span class="number">2010</span>][<span class="number">2</span>];</span><br><span class="line"><span class="keyword">bool</span> h[<span class="number">1010</span>][<span class="number">2010</span>][<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j,<span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(i==<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(k==<span class="number">1</span>)<span class="keyword">return</span> j==<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> j==<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(k==<span class="number">0</span>&amp;&amp;j==<span class="number">1</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(j==<span class="number">1</span>)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(h[i][j][k])<span class="keyword">return</span> f[i][j][k];</span><br><span class="line">    h[i][j][k]=<span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(k==<span class="number">0</span>)&#123;</span><br><span class="line">        f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-2</span>,<span class="number">0</span>);</span><br><span class="line">        f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-1</span>,<span class="number">0</span>);</span><br><span class="line">        f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-1</span>,<span class="number">0</span>);</span><br><span class="line">        f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-0</span>,<span class="number">0</span>);</span><br><span class="line">        f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-2</span>,<span class="number">1</span>);</span><br><span class="line">        f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-1</span>,<span class="number">1</span>);</span><br><span class="line">        f[i][j][<span class="number">0</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-1</span>,<span class="number">1</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        f[i][j][<span class="number">1</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-1</span>,<span class="number">0</span>);</span><br><span class="line">        f[i][j][<span class="number">1</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-0</span>,<span class="number">0</span>);</span><br><span class="line">        f[i][j][<span class="number">1</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-0</span>,<span class="number">0</span>);</span><br><span class="line">        f[i][j][<span class="number">1</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-1</span>,<span class="number">1</span>);</span><br><span class="line">        f[i][j][<span class="number">1</span>]+=dfs(i<span class="number">-1</span>,j<span class="number">-0</span>,<span class="number">1</span>);</span><br><span class="line">    &#125;<span class="keyword">return</span> f[i][j][k];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    read(n);read(k);</span><br><span class="line">    write(dfs(n,k,<span class="number">0</span>)+dfs(n,k,<span class="number">1</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>这里作者大概花了 $3.5hs$ 的时间，整理，画图，写了这道题的代码</p>
<p>已经把我认为的所有都考虑了，如果有遗漏，欢迎找我补充。</p>
]]></content>
      <categories>
        <category>模拟赛</category>
      </categories>
      <tags>
        <tag>搜索</tag>
        <tag>分类讨论</tag>
        <tag>dp</tag>
        <tag>记忆化</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 P1457 【城堡 The Castle】</title>
    <url>/2020/03/02/%E9%A2%98%E8%A7%A3-P1457-%E3%80%90%E5%9F%8E%E5%A0%A1-The-Castle%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1457" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p1457" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<p>来讨论区大摇大摆地逛了一圈后，我发现竟然大家的代码</p>
<h1 id="都很长"><a href="#都很长" class="headerlink" title="都很长"></a>都很长</h1><p>然而代码真的要写那么长吗</p>
<hr>
<p>首先，来分析问题，1，2，4，8，这些数显然是有特点的，也许你已经想到了没错，它们都是2的次方数。</p>
<p>1是2的0次方</p>
<p>2是2的1次方</p>
<p>4是2的2次方</p>
<p>8是2的3次方</p>
<p>知道这个就好办了，用什么呢？没错是位运算，哈哈！</p>
<p>1的二进制是1</p>
<p>2的二进制是10</p>
<p>4的二进制是100</p>
<p>8的二进制是1000</p>
<p>于是，就得出了以下代码：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(x&amp;<span class="number">1</span>)a[i][j][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(x&amp;<span class="number">2</span>)a[i][j][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(x&amp;<span class="number">4</span>)a[i][j][<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(x&amp;<span class="number">8</span>)a[i][j][<span class="number">3</span>]=<span class="number">1</span>;</span><br></pre></td></tr></table></figure>
<p>大家也看到了，我用了一个3维数组，a[55][55][4]。</p>
<p>看到这道题，我首先想到的是宽搜（宽度优先搜索），用数组模拟，这道题的数据范围不大，用数组完全可能。</p>
<p>上代码：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;//用万能头文件开始了代码</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;<span class="comment">//命名空间</span></span><br><span class="line"><span class="keyword">int</span> n,m,h[<span class="number">55</span>][<span class="number">55</span>],a[<span class="number">55</span>][<span class="number">55</span>][<span class="number">4</span>],s,ans,z1,z2;</span><br><span class="line"><span class="keyword">int</span> q1[<span class="number">10010</span>],q2[<span class="number">10010</span>],f[<span class="number">10010</span>];</span><br><span class="line"><span class="keyword">int</span> dx[<span class="number">4</span>]=&#123;<span class="number">0</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>&#125;,dy[<span class="number">4</span>]=&#123;<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> z3;</span><br><span class="line"><span class="built_in">string</span> z=<span class="string">"WNEA"</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;m&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">            <span class="keyword">int</span> x;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;x;</span><br><span class="line">            <span class="keyword">if</span>(x&amp;<span class="number">1</span>)a[i][j][<span class="number">0</span>]=<span class="number">1</span>;<span class="comment">//位运算</span></span><br><span class="line">            <span class="keyword">if</span>(x&amp;<span class="number">2</span>)a[i][j][<span class="number">1</span>]=<span class="number">1</span>;<span class="comment">//位运算</span></span><br><span class="line">            <span class="keyword">if</span>(x&amp;<span class="number">4</span>)a[i][j][<span class="number">2</span>]=<span class="number">1</span>;<span class="comment">//位运算</span></span><br><span class="line">            <span class="keyword">if</span>(x&amp;<span class="number">8</span>)a[i][j][<span class="number">3</span>]=<span class="number">1</span>;<span class="comment">//位运算</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            <span class="keyword">if</span>(!h[i][j])&#123;</span><br><span class="line">                <span class="keyword">int</span> front=<span class="number">0</span>,rear=<span class="number">1</span>,sum=<span class="number">1</span>;</span><br><span class="line">                q1[<span class="number">1</span>]=i;</span><br><span class="line">                q2[<span class="number">1</span>]=j;</span><br><span class="line">                h[i][j]=++s;</span><br><span class="line">                <span class="keyword">while</span>(front&lt;rear)&#123;<span class="comment">//开始宽搜</span></span><br><span class="line">                    front++;</span><br><span class="line">                    <span class="keyword">int</span> x=q1[front],y=q2[front];</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;=<span class="number">3</span>;k++)&#123;</span><br><span class="line">                        <span class="keyword">int</span> tx=x+dx[k],ty=y+dy[k];</span><br><span class="line">                        <span class="keyword">if</span>(tx&gt;<span class="number">0</span>&amp;&amp;tx&lt;=n&amp;&amp;ty&gt;<span class="number">0</span>&amp;&amp;ty&lt;=m&amp;&amp;!h[tx][ty]&amp;&amp;!a[x][y][k])&#123;</span><br><span class="line">                            h[tx][ty]=s;</span><br><span class="line">                            sum++;</span><br><span class="line">                            q1[++rear]=tx;</span><br><span class="line">                            q2[rear]=ty;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;ans=max(ans,sum);</span><br><span class="line">                f[s]=sum;<span class="comment">//记录编号s的房间的间数</span></span><br><span class="line">            &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;s&lt;&lt;<span class="built_in">endl</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)<span class="comment">//这里有坑</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--)<span class="comment">//这里有坑</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=<span class="number">2</span>;k++)</span><br><span class="line">                <span class="keyword">if</span>(a[i][j][k])&#123;</span><br><span class="line">                    <span class="keyword">int</span> tx=i+dx[k],ty=j+dy[k];</span><br><span class="line">                    <span class="keyword">int</span> x=f[h[tx][ty]]+f[h[i][j]];<span class="comment">//活用数组下标</span></span><br><span class="line">                    <span class="keyword">if</span>(x&gt;ans&amp;&amp;h[tx][ty]!=h[i][j])&#123;<span class="comment">//一定要注意h[tx][ty]!=h[i][j]，有时候尽管有墙，但能通过别的房间，达到这个房间。（考虑要周全）</span></span><br><span class="line">                        ans=x;</span><br><span class="line">                        z1=i;</span><br><span class="line">                        z2=j;</span><br><span class="line">                        z3=z[k];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>&lt;&lt;z1&lt;&lt;<span class="string">" "</span>&lt;&lt;z2&lt;&lt;<span class="string">" "</span>&lt;&lt;z3;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//华丽结束</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>洛谷题库</category>
        <category>usaco</category>
      </categories>
      <tags>
        <tag>bfs</tag>
        <tag>搜索</tag>
        <tag>位运算</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 P2642 【双子序列最大和】</title>
    <url>/2020/03/02/%E9%A2%98%E8%A7%A3-P2642-%E3%80%90%E5%8F%8C%E5%AD%90%E5%BA%8F%E5%88%97%E6%9C%80%E5%A4%A7%E5%92%8C%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2642" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p2642" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>其实这道题的关键就是在于预处理，其方法类似于 <a href="https://www.luogu.com.cn/problem/P1091" target="_blank" rel="noopener">合唱队形</a></p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="求最大子段和"><a href="#求最大子段和" class="headerlink" title="求最大子段和"></a>求最大子段和</h2><p>要想求出双子序列最大和，首先我们要会求出最大子段和</p>
<p>最大子段和的求值方法很简单</p>
<p>定义 $f_i$ 为以第 $i$ 个数结尾的最大子段和<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">1000010</span>],a[<span class="number">1000010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    f[<span class="number">1</span>]=a[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)f[i]=max(f[i<span class="number">-1</span>]+a[i],a[i]);</span><br><span class="line">    <span class="keyword">int</span> ans=f[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)ans=max(ans,f[i]);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="求双子序列最大和"><a href="#求双子序列最大和" class="headerlink" title="求双子序列最大和"></a>求双子序列最大和</h2><p>那么我们现在可以去求双子序列最大和</p>
<p>怎么求，思路是<br><img src="https://cdn.luogu.com.cn/upload/pic/75427.png" alt=""><br>如果你去枚举中间的数，然后去算左边的最大子段，再算出右边的最大子段，加起来，用打擂法，求出最大值，你会 $TLE$，毕竟$n&lt;=10^{6}$</p>
<p>那怎么办？我们可以预处理</p>
<p>我们可以用 $O(n)$ 的时间计算到前 $i$ 个数的最大子段，</p>
<p>我们可以用 $O(n)$ 的时间计算到后 $i$ 个数的最大子段</p>
<p>像这样</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">cin</span>&gt;&gt;x[i];</span><br><span class="line">f[<span class="number">1</span>]=x[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)f[i]=max(f[i<span class="number">-1</span>]+x[i],x[i]);<span class="comment">//算最大子段</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)f[i]=max(f[i<span class="number">-1</span>],f[i]);<span class="comment">//更新成最大值</span></span><br><span class="line">l[n]=x[n];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">1</span>;i--)l[i]=max(l[i+<span class="number">1</span>]+x[i],x[i]);<span class="comment">//算最大子段</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">1</span>;i--)l[i]=max(l[i+<span class="number">1</span>],l[i]);<span class="comment">//更新成最大值</span></span><br></pre></td></tr></table></figure>
<p>这里 $f_i$ 表示前 $i$ 个数中的最大字段和</p>
<p>这里 $l_i$ 表示后 $i$ 个数中的最大字段和</p>
<p>然后，用 $O(n)$ 的时间去枚举中间的数，打擂法求出双子序列最大和</p>
<p>上代码：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> x[<span class="number">1000010</span>],f[<span class="number">1000010</span>],l[<span class="number">1000010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">cin</span>&gt;&gt;x[i];</span><br><span class="line">    f[<span class="number">1</span>]=x[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)f[i]=max(f[i<span class="number">-1</span>]+x[i],x[i]);<span class="comment">//算最大子段</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)f[i]=max(f[i<span class="number">-1</span>],f[i]);<span class="comment">//算最大子段</span></span><br><span class="line">    l[n]=x[n];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">1</span>;i--)l[i]=max(l[i+<span class="number">1</span>]+x[i],x[i]);<span class="comment">//算最大子段</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">1</span>;i--)l[i]=max(l[i+<span class="number">1</span>],l[i]);<span class="comment">//算最大子段</span></span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans=f[<span class="number">1</span>]+l[<span class="number">3</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>;i&lt;n;i++)ans=max(ans,f[i<span class="number">-1</span>]+l[i+<span class="number">1</span>]);<span class="comment">//枚举中间数</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>这种预处理的方法可以优化我们的时间复杂度，避免重复计算，使我们的程序跑得更快！</p>
<p>感谢 @kuoluo03 帮我指出错误，已改正。</p>
]]></content>
      <categories>
        <category>洛谷题库</category>
      </categories>
      <tags>
        <tag>dp</tag>
        <tag>预处理</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 P1985 【[USACO07OPEN]翻转棋】</title>
    <url>/2020/03/02/%E9%A2%98%E8%A7%A3-P1985-%E3%80%90-USACO07OPEN-%E7%BF%BB%E8%BD%AC%E6%A3%8B%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1985" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p1985" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<h2 id="讲讲我的做法"><a href="#讲讲我的做法" class="headerlink" title="讲讲我的做法"></a>讲讲我的做法</h2><p>刚开始做这道题的时候，看到$n&lt;=15$，我这个$6$年级的蒟蒻的第1反应是状压$dp$。貌似不好做。然而，等到我在省中集训的时候，老师的一席话，让我豁然开朗。今天我准备来分享一下。</p>
<p><strong>老师的话是：除了第1行，其他格子要不要翻是由上一行决定的。</strong></p>
<p>听到这里，我想应该跟那时的我一样——豁然开朗了。</p>
<p>用$dfs$或用2进制来枚举第1行要不要翻（推荐用$dfs$，不容易$WA$，并且时间充裕的很），然后去模拟后面的格子，最后再看最后一行是否全好了。（$dfs$注意要字典序）</p>
<p>我们先来看看dfs该怎么写</p>
<p>$code$：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x==m+<span class="number">1</span>)&#123;</span><br><span class="line">        check();<span class="comment">//判断是否成立</span></span><br><span class="line">        <span class="keyword">return</span>;<span class="comment">//不要再做下去了，已经是终点了</span></span><br><span class="line">    &#125;</span><br><span class="line">    f[x]=<span class="number">0</span>;<span class="comment">//先试0的情况</span></span><br><span class="line">    dfs(x+<span class="number">1</span>);<span class="comment">//递归下去</span></span><br><span class="line">    f[x]=<span class="number">1</span>;<span class="comment">//再试1的情况</span></span><br><span class="line">    dfs(x+<span class="number">1</span>);<span class="comment">//递归下去</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>我也放一下二进制的代码吧<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(<span class="number">1</span>&lt;&lt;m);i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m;j++)f[j+<span class="number">1</span>]=(i&gt;&gt;j)&amp;<span class="number">1</span>;</span><br><span class="line">    check();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>大家发现我这个$check$竟然没有用$bool$，显然是因为$check$如果判断成功，就直接$exit(0);$</p>
<p>再给大家看一看$check$函数的实现过程</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    c[x][y]=<span class="number">1</span>-c[x][y];</span><br><span class="line">    c[x<span class="number">-1</span>][y]=<span class="number">1</span>-c[x<span class="number">-1</span>][y];</span><br><span class="line">    c[x+<span class="number">1</span>][y]=<span class="number">1</span>-c[x+<span class="number">1</span>][y];</span><br><span class="line">    c[x][y<span class="number">-1</span>]=<span class="number">1</span>-c[x][y<span class="number">-1</span>];</span><br><span class="line">    c[x][y+<span class="number">1</span>]=<span class="number">1</span>-c[x][y+<span class="number">1</span>];</span><br><span class="line">&#125;<span class="comment">//这里为了方便写了个函数来模拟翻格子</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">check</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(b,<span class="number">0</span>,<span class="keyword">sizeof</span>(b));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            c[i][j]=a[i][j];<span class="comment">//初始化</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">        <span class="keyword">if</span>(f[i])&#123;</span><br><span class="line">            work(<span class="number">1</span>,i);<span class="comment">//模拟出第一行的反转情况</span></span><br><span class="line">            b[<span class="number">1</span>][i]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            <span class="keyword">if</span>(c[i<span class="number">-1</span>][j])b[i][j]=<span class="number">1</span>,work(i,j);<span class="comment">//跟据老师的那句话，去模拟</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">        <span class="keyword">if</span>(c[n][i])<span class="keyword">return</span>;<span class="comment">//如果是1直接结束</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)<span class="built_in">cout</span>&lt;&lt;b[i][j]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;<span class="comment">//输出</span></span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);<span class="comment">//结束全部</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>应该没有什么问题</p>
<p>我们来看一看完整的代码吧</p>
<p>$dfs:$<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> s=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f*=<span class="number">-1</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))s=(s&lt;&lt;<span class="number">1</span>)+(s&lt;&lt;<span class="number">3</span>)+(ch^<span class="number">48</span>),ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> s*f;</span><br><span class="line">&#125;<span class="comment">//快读</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">25</span>][<span class="number">25</span>],f[<span class="number">25</span>],n,m,b[<span class="number">25</span>][<span class="number">25</span>],c[<span class="number">25</span>][<span class="number">25</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    c[x][y]=<span class="number">1</span>-c[x][y];</span><br><span class="line">    c[x<span class="number">-1</span>][y]=<span class="number">1</span>-c[x<span class="number">-1</span>][y];</span><br><span class="line">    c[x+<span class="number">1</span>][y]=<span class="number">1</span>-c[x+<span class="number">1</span>][y];</span><br><span class="line">    c[x][y<span class="number">-1</span>]=<span class="number">1</span>-c[x][y<span class="number">-1</span>];</span><br><span class="line">    c[x][y+<span class="number">1</span>]=<span class="number">1</span>-c[x][y+<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">check</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(b,<span class="number">0</span>,<span class="keyword">sizeof</span>(b));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            c[i][j]=a[i][j];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">        <span class="keyword">if</span>(f[i])&#123;</span><br><span class="line">            work(<span class="number">1</span>,i);</span><br><span class="line">            b[<span class="number">1</span>][i]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            <span class="keyword">if</span>(c[i<span class="number">-1</span>][j])b[i][j]=<span class="number">1</span>,work(i,j);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">        <span class="keyword">if</span>(c[n][i])<span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)<span class="built_in">cout</span>&lt;&lt;b[i][j]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x==m+<span class="number">1</span>)&#123;</span><br><span class="line">        check();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    f[x]=<span class="number">0</span>;</span><br><span class="line">    dfs(x+<span class="number">1</span>);</span><br><span class="line">    f[x]=<span class="number">1</span>;</span><br><span class="line">    dfs(x+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    n=read(),m=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            a[i][j]=read();<span class="comment">//读入</span></span><br><span class="line">    dfs(<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"IMPOSSIBLE"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>二进制：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> s=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f*=<span class="number">-1</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))s=(s&lt;&lt;<span class="number">1</span>)+(s&lt;&lt;<span class="number">3</span>)+(ch^<span class="number">48</span>),ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> s*f;</span><br><span class="line">&#125;<span class="comment">//快读</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">25</span>][<span class="number">25</span>],f[<span class="number">25</span>],n,m,b[<span class="number">25</span>][<span class="number">25</span>],c[<span class="number">25</span>][<span class="number">25</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    c[x][y]=<span class="number">1</span>-c[x][y];</span><br><span class="line">    c[x<span class="number">-1</span>][y]=<span class="number">1</span>-c[x<span class="number">-1</span>][y];</span><br><span class="line">    c[x+<span class="number">1</span>][y]=<span class="number">1</span>-c[x+<span class="number">1</span>][y];</span><br><span class="line">    c[x][y<span class="number">-1</span>]=<span class="number">1</span>-c[x][y<span class="number">-1</span>];</span><br><span class="line">    c[x][y+<span class="number">1</span>]=<span class="number">1</span>-c[x][y+<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">check</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(b,<span class="number">0</span>,<span class="keyword">sizeof</span>(b));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            c[i][j]=a[i][j];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">        <span class="keyword">if</span>(f[i])&#123;</span><br><span class="line">            work(<span class="number">1</span>,i);</span><br><span class="line">            b[<span class="number">1</span>][i]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            <span class="keyword">if</span>(c[i<span class="number">-1</span>][j])b[i][j]=<span class="number">1</span>,work(i,j);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">        <span class="keyword">if</span>(c[n][i])<span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)<span class="built_in">cout</span>&lt;&lt;b[i][j]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    n=read(),m=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            a[i][j]=read();<span class="comment">//读入</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(<span class="number">1</span>&lt;&lt;m);i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m;j++)f[j+<span class="number">1</span>]=(i&gt;&gt;j)&amp;<span class="number">1</span>;</span><br><span class="line">        check();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(ans==INT_MAX)<span class="built_in">puts</span>(<span class="string">"IMPOSSIBLE"</span>);</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)<span class="built_in">cout</span>&lt;&lt;d[i][j]&lt;&lt;<span class="string">' '</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>衷心感谢 @龙·海流 大佬帮我指出了一个致命的错误</p>
<p>这是我<a href="https://www.luogu.org/paste/05qcgwu7" target="_blank" rel="noopener">原来的代码</a></p>
<p><strong>注意题目中说的是翻转次数少的优先，如果一样，再按照字典序排列。</strong>我自己不认真读题，还去怪数据错误，还特判了数据。</p>
<p>衷心感谢省中集训的那位老师<del>让我AC了一道蓝题</del>。。</p>
<p>如果我的这篇题解对你有所帮助请点个赞，谢谢。。</p>
<p>有任何问题，请评论或私信我这个$6$年级的蒟蒻，谢谢。</p>
]]></content>
      <categories>
        <category>洛谷题库</category>
        <category>usaco</category>
        <category>省中集训</category>
      </categories>
      <tags>
        <tag>搜索</tag>
        <tag>状压</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 P1278 【单词游戏】</title>
    <url>/2020/03/02/%E9%A2%98%E8%A7%A3-P1278-%E3%80%90%E5%8D%95%E8%AF%8D%E6%B8%B8%E6%88%8F%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1278" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p1278" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>首先，看到这道题目，我首先想到的是暴搜，通过$vector$来搞，代码也是很短的。</p>
<p>这里用了一个类似于分治的思想</p>
<p>把一个大问题转化为小问题</p>
<p>先枚举第一个单词，之后把能拼接在它后面的单词都一个一个的去试，哪个最优选哪个</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T&amp;x)</span></span>&#123;</span><br><span class="line">    T f=<span class="number">1</span>;x=<span class="number">0</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(ch);ch=getchar())<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(ch);ch=getchar())x=(x&lt;&lt;<span class="number">1</span>)+(x&lt;&lt;<span class="number">3</span>)+(ch^<span class="number">48</span>);</span><br><span class="line">    x*=f;</span><br><span class="line">&#125;<span class="comment">//快读，常数优化</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">'-'</span>);</span><br><span class="line">        write(x*<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;<span class="comment">//快写，常数优化</span></span><br><span class="line"><span class="built_in">string</span> st[<span class="number">18</span>];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;v[<span class="number">210</span>];<span class="comment">//动态数组</span></span><br><span class="line"><span class="keyword">int</span> f[<span class="number">18</span>];<span class="comment">//标记数组</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> i:v[st[x][st[x].size()<span class="number">-1</span>]])<span class="comment">//v数组是存第1个字母的一个容器</span></span><br><span class="line">        <span class="keyword">if</span>(!f[i])&#123;</span><br><span class="line">            f[i]=<span class="number">1</span>;<span class="comment">//标记这个字符串已经用过了</span></span><br><span class="line">            ans=max(ans,dfs(i));<span class="comment">//打擂</span></span><br><span class="line">            f[i]=<span class="number">0</span>;<span class="comment">//回溯</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> ans+st[x].size();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>,n;</span><br><span class="line">    read(n);<span class="comment">//读入</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">cin</span>&gt;&gt;st[i],v[st[i][<span class="number">0</span>]].push_back(i);<span class="comment">//读入，放入vector容器</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        f[i]=<span class="number">1</span>;<span class="comment">//表记</span></span><br><span class="line">        ans=max(ans,dfs(i));<span class="comment">//打擂法找到最优解</span></span><br><span class="line">        f[i]=<span class="number">0</span>;<span class="comment">//回溯</span></span><br><span class="line">    &#125;</span><br><span class="line">    write(ans);<span class="comment">//输出</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><a href="https://www.luogu.org/record/27279213" target="_blank" rel="noopener">然后</a>，你会发现你只得了70分，开$O(2)$试试？<a href="https://www.luogu.org/record/27279276" target="_blank" rel="noopener">TLE</a>again!</p>
<p>想一想更优秀的算法，加记忆化？是的！</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="储存状态"><a href="#储存状态" class="headerlink" title="储存状态"></a>储存状态</h3><p>如何存状态</p>
<p>我们发现每一个字符串的状态都要么是0，要么是1，所以我们可以用二进制的思想去压缩状态。</p>
<script type="math/tex; mode=display">1≤N≤16</script><script type="math/tex; mode=display">2^{n(16)}=65536</script><p>开数组很充裕，浪费也不要紧。</p>
<h3 id="判断状态"><a href="#判断状态" class="headerlink" title="判断状态"></a>判断状态</h3><p>如何去判断第$i$个单词有没有用过</p>
<p>从右往左这个数二进制的第$i$位是$1$，就代表这个单词用过，反之$0$就代表这个单词没用过。</p>
<p>但给你这么一个数，你该这么去判断呢？</p>
<p>用位运算！</p>
<p>如果第$i$为是$1$，那么$x&gt;&gt;(i-1)$后$\mod2$就是$1$</p>
<p>如果第$i$为是$0$，那么$x&gt;&gt;(i-1)$后$\mod2$就是$0$</p>
<p>那么判断这个单词是否用过，我们就可以这么写<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(!((y&gt;&gt;(i<span class="number">-1</span>)&amp;<span class="number">1</span>))<span class="comment">//按位与，只有两个数这一位都是1才为1，所以只有当最后一位是1，这个数才会是1，否则是0</span></span><br></pre></td></tr></table></figure></p>
<h3 id="标记状态"><a href="#标记状态" class="headerlink" title="标记状态"></a>标记状态</h3><p>如何将这一位变成$1$</p>
<p>将这一位变成$1$，我们可以用位运算中的按位或——两位都是$0$，这一位的得数才为$0$</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">y|(<span class="number">1</span>&lt;&lt;(i<span class="number">-1</span>))</span><br></pre></td></tr></table></figure>
<p>这应该是很显然的</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>现在就可以看总的代码了</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T&amp;x)</span></span>&#123;</span><br><span class="line">    T f=<span class="number">1</span>;x=<span class="number">0</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(ch);ch=getchar())<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(ch);ch=getchar())x=(x&lt;&lt;<span class="number">1</span>)+(x&lt;&lt;<span class="number">3</span>)+(ch^<span class="number">48</span>);</span><br><span class="line">    x*=f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">'-'</span>);</span><br><span class="line">        write(x*<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">string</span> st[<span class="number">18</span>];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;v[<span class="number">210</span>];</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">17</span>][<span class="number">1</span>&lt;&lt;<span class="number">17</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(f[x][y])<span class="keyword">return</span> f[x][y];</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> i:v[st[x][st[x].size()<span class="number">-1</span>]])</span><br><span class="line">        <span class="keyword">if</span>(!((y&gt;&gt;(i<span class="number">-1</span>))&amp;<span class="number">1</span>))ans=max(ans,dfs(i,y|(<span class="number">1</span>&lt;&lt;(i<span class="number">-1</span>))));</span><br><span class="line">    <span class="keyword">return</span> f[x][y]=ans+st[x].size();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>,n;</span><br><span class="line">    read(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">cin</span>&gt;&gt;st[i],v[st[i][<span class="number">0</span>]].push_back(i);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)ans=max(ans,dfs(i,(<span class="number">1</span>&lt;&lt;(i<span class="number">-1</span>))));</span><br><span class="line">    write(ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>刚开始我认为这应该没有多少重复运算，所以我写了个暴搜，但是，我写了记忆化之后惊奇地发现，暴搜总用时$4.00s$,也就是$4000ms$，而记忆化搜索总用时$73ms$，快了不只一点。但是空间确实消耗很大。</p>
<p>编程中有很多算法，用空间换时间，记忆化搜索就是这么一个代表，我们要学习这种思想，想出更巧妙的办法！</p>
]]></content>
      <categories>
        <category>洛谷题库</category>
      </categories>
      <tags>
        <tag>搜索</tag>
        <tag>记忆化</tag>
        <tag>状压</tag>
        <tag>STL-vector</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 P6155 【修改】</title>
    <url>/2020/03/02/%E9%A2%98%E8%A7%A3-P6155-%E3%80%90%E4%BF%AE%E6%94%B9%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P6155" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p6155" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>其实我感觉这道题比第 $2$ 道题还略微的简单了一些。</p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><h3 id="性质"><a href="#性质" class="headerlink" title="性质"></a>性质</h3><p>这道题，我们显而易见地可以得出一个结论，<strong>最小化花费的情况下，改变的数，一定要尽量少。</strong></p>
<p>所以我们要先把数组排一遍序。</p>
<h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><p>这道题，我用了一个类似并查集的方法。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(f[x]==<span class="number">0</span>)<span class="keyword">return</span> f[x]=x+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> f[x]=find(f[x]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里的 $f$ 数组就是表示以 $x$ 数组往后的最近的<strong>可能</strong>空位</p>
<h2 id="总代码"><a href="#总代码" class="headerlink" title="总代码"></a>总代码</h2><p>会了以上 $2$ 个东西，我们就可以做这道题了。<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">1e6</span>;</span><br><span class="line"><span class="keyword">int</span> a[MAXN];</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> b[MAXN],ans,n;</span><br><span class="line"><span class="built_in">unordered_map</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;f;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(f[x]==<span class="number">0</span>)<span class="keyword">return</span> f[x]=x+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> f[x]=find(f[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;v;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a&gt;b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    read(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)read(a[i]);<span class="comment">//读入a数组</span></span><br><span class="line">    sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp);<span class="comment">//排序</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x=find(a[i])-a[i]<span class="number">-1</span>;<span class="comment">//当然是要减1的</span></span><br><span class="line">        <span class="keyword">if</span>(x)v.push_back(x);<span class="comment">//插入</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)read(b[i]);</span><br><span class="line">    sort(b+<span class="number">1</span>,b+n+<span class="number">1</span>);<span class="comment">//排序b数组，显然</span></span><br><span class="line">    sort(v.begin(),v.end());</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=v.size()<span class="number">-1</span>,j=<span class="number">1</span>;i&gt;=<span class="number">0</span>;i--,j++)ans+=v[i]*b[j];<span class="comment">//算和</span></span><br><span class="line">    write(ans);<span class="comment">//输出</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>这道题，我程序运行的时间想对还是比较慢的，但是这种是可以过的。</p>
<p>欢迎在评论区指出错误，也欢迎优化此算法。</p>
<p>感谢 @北辰yama 和 @天下我有 的提醒，本算法已经从原来的 $9.42s$ 变成了 $5.70s$，这个优化的效果还是很显著的。</p>
]]></content>
      <categories>
        <category>洛谷题库</category>
      </categories>
      <tags>
        <tag>排序</tag>
        <tag>贪心</tag>
        <tag>STL-vector</tag>
        <tag>并查集</tag>
        <tag>STL-unordered_map</tag>
      </tags>
  </entry>
  <entry>
    <title>2020-2-15模拟赛题解</title>
    <url>/2020/02/23/2020-2-15%E6%A8%A1%E6%8B%9F%E8%B5%9B%E9%A2%98%E8%A7%A3/</url>
    <content><![CDATA[<p>这篇总的题解蒟蒻写了 $3h s$！作为回报，你们是不是应该去<a href="https://zhaohaikun.blog.luogu.org/" target="_blank" rel="noopener">$ZHK$ 的洛谷博客</a>里给 $ZHK$ 的所有题解点赞呢！</p>
<a id="more"></a>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这场比赛我发挥欠佳，各种小失误不断，也需要我自己去反思吧，以后打模拟赛也要有选择性地去打，毕竟<strong>一天 $3$ 场比赛</strong>肯定会有影响。</p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="1-子数整数"><a href="#1-子数整数" class="headerlink" title="1. 子数整数"></a>1. 子数整数</h2><h3 id="错点"><a href="#错点" class="headerlink" title="错点"></a>错点</h3><p>考试的时候蒟蒻把 <code>No</code> 打成了 <code>NO</code>。</p>
<h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>这道题实际上就是个小模拟，您只要会 $for$ 循环就可以轻松过掉此题。</p>
<p>答案是直接统计一下就好了。</p>
<p>我们可以直接从 <code>10000</code> 到 <code>30000</code> 循环，算出 <code>s1</code> 、 <code>s2</code> 、 <code>s3</code>。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">10000</span>;i&lt;=<span class="number">30000</span>;i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> g=i%<span class="number">10</span>,s=i/<span class="number">10</span>%<span class="number">10</span>,b=i/<span class="number">100</span>%<span class="number">10</span>,q=i/<span class="number">1000</span>%<span class="number">10</span>,w=i/<span class="number">10000</span>%<span class="number">10</span>,s1=<span class="number">100</span>*w+<span class="number">10</span>*q+b,s2=<span class="number">100</span>*q+<span class="number">10</span>*b+s,s3=<span class="number">100</span>*b+s*<span class="number">10</span>+g;<span class="comment">//s1,s2,s3的计算</span></span><br><span class="line">    <span class="keyword">if</span>(s1%k==<span class="number">0</span>&amp;&amp;s2%k==<span class="number">0</span>&amp;&amp;s3%k==<span class="number">0</span>)writen(i),f=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="总代码"><a href="#总代码" class="headerlink" title="总代码"></a>总代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">writen</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    write(x);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> k,s1,s2,s3,g,s,b,q,w;</span><br><span class="line"><span class="keyword">bool</span> f;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    read(k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">10000</span>;i&lt;=<span class="number">30000</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> g=i%<span class="number">10</span>,s=i/<span class="number">10</span>%<span class="number">10</span>,b=i/<span class="number">100</span>%<span class="number">10</span>,q=i/<span class="number">1000</span>%<span class="number">10</span>,w=i/<span class="number">10000</span>%<span class="number">10</span>,s1=<span class="number">100</span>*w+<span class="number">10</span>*q+b,s2=<span class="number">100</span>*q+<span class="number">10</span>*b+s,s3=<span class="number">100</span>*b+s*<span class="number">10</span>+g;<span class="comment">//s1,s2,s3的计算</span></span><br><span class="line">        <span class="keyword">if</span>(s1%k==<span class="number">0</span>&amp;&amp;s2%k==<span class="number">0</span>&amp;&amp;s3%k==<span class="number">0</span>)writen(i),f=<span class="number">1</span>;</span><br><span class="line">    &#125;<span class="keyword">if</span>(f==<span class="number">0</span>)<span class="built_in">puts</span>(<span class="string">"No"</span>);<span class="comment">//考试时这里直接挂掉，打成了NO</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="2-安全逃离"><a href="#2-安全逃离" class="headerlink" title="2. 安全逃离"></a>2. 安全逃离</h2><h3 id="错点-1"><a href="#错点-1" class="headerlink" title="错点"></a>错点</h3><p>蒟蒻向老师报告题目有问题后没有认真看题，结果就死了。</p>
<h3 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h3><p>做到这道题的时候，我们考到数据范围很小，考虑高复杂度的做法。</p>
<p>我的做法是最暴力的做法，复杂度大概是 $O(cr^2 \times + rc^2 \times n)$，面对这么小的这么小的数据，这个做法显然能过。</p>
<p>我们先写一个 $check$ 函数，判断此时的矩阵是否安全。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=r;++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=c;j++)</span><br><span class="line">            <span class="keyword">if</span>(a[i][j])&#123;<span class="comment">//此点有牛</span></span><br><span class="line">                <span class="keyword">int</span> s=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">1</span>;l&lt;=i;l++)</span><br><span class="line">                    <span class="keyword">if</span>(a[l][j])&#123;</span><br><span class="line">                        s++;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> l=j;l&lt;=n;l++)</span><br><span class="line">                    <span class="keyword">if</span>(a[i][l])&#123;</span><br><span class="line">                        s++;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                <span class="keyword">if</span>(s==<span class="number">2</span>)<span class="keyword">return</span> <span class="literal">false</span>;<span class="comment">//如果有牛上面和右面都被堵死了，这个矩阵显然是不安全的</span></span><br><span class="line">            &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>当然还有更快速地写法啦</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">save</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> l=x[i]<span class="number">-1</span>;l&gt;=<span class="number">1</span>;l--)</span><br><span class="line">            <span class="keyword">if</span>(a[l][y[i]])&#123;</span><br><span class="line">                flag++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> l=y[i]+<span class="number">1</span>;l&lt;=n;l++)</span><br><span class="line">            <span class="keyword">if</span>(a[x[i]][l])&#123;</span><br><span class="line">                flag++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag==<span class="number">2</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>我们再写一个函数去枚举移掉哪头牛</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> f=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line">        a[x[i]][y[i]]--;</span><br><span class="line">        <span class="keyword">if</span>(save())&#123;<span class="comment">//如果安全</span></span><br><span class="line">            f=<span class="number">0</span>;</span><br><span class="line">            write(i);<span class="comment">//输出</span></span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        a[x[i]][y[i]]++;</span><br><span class="line">    &#125;<span class="keyword">if</span>(f)<span class="built_in">puts</span>(<span class="string">"-1"</span>);<span class="comment">//无解</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="总代码-1"><a href="#总代码-1" class="headerlink" title="总代码"></a>总代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">50</span>+<span class="number">10</span>,MAXK=<span class="number">100</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[MAXN][MAXN],n,m,k,x[MAXK],y[MAXK];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">save</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> l=x[i]<span class="number">-1</span>;l&gt;=<span class="number">1</span>;l--)</span><br><span class="line">            <span class="keyword">if</span>(a[l][y[i]])&#123;</span><br><span class="line">                flag++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> l=y[i]+<span class="number">1</span>;l&lt;=n;l++)</span><br><span class="line">            <span class="keyword">if</span>(a[x[i]][l])&#123;</span><br><span class="line">                flag++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag==<span class="number">2</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> f=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line">        a[x[i]][y[i]]--;<span class="comment">//移除</span></span><br><span class="line">        <span class="keyword">if</span>(save())&#123;</span><br><span class="line">            f=<span class="number">0</span>;</span><br><span class="line">            write(i);</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        a[x[i]][y[i]]++;<span class="comment">//注意回溯</span></span><br><span class="line">    &#125;<span class="keyword">if</span>(f)<span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    read(n);read(m);read(k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line">        read(x[i]);read(y[i]);</span><br><span class="line">        a[x[i]][y[i]]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(save())<span class="built_in">puts</span>(<span class="string">"0"</span>);</span><br><span class="line">    <span class="keyword">else</span> work();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="3-阶乘问题"><a href="#3-阶乘问题" class="headerlink" title="3. 阶乘问题"></a>3. 阶乘问题</h2><h3 id="错点-2"><a href="#错点-2" class="headerlink" title="错点"></a>错点</h3><p>蒟蒻竟然把 $/ 10$ 打成了 $\% 10$。</p>
<h3 id="分析-2"><a href="#分析-2" class="headerlink" title="分析"></a>分析</h3><p><del>做法显然</del></p>
<p>由于数字极大，我们应该先对 $1$~$n$ 的这些数字把末尾的 $0$ 全部删掉</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span>(x%<span class="number">10</span>==<span class="number">0</span>)x/=<span class="number">10</span>;</span><br></pre></td></tr></table></figure>
<p>再把乘好后的 $s$ 末尾的 $0$ 也都去掉。</p>
<p>关于为什么末尾会有 $0$，我来举个例子 $2 \times 5=10$ ，所以我们还要再筛一遍 $0$。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span>(s%<span class="number">10</span>==<span class="number">0</span>)s/=<span class="number">10</span>;</span><br></pre></td></tr></table></figure>
<h3 id="总代码-2"><a href="#总代码-2" class="headerlink" title="总代码"></a>总代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,s=<span class="number">1</span>;</span><br><span class="line">    read(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x=i;</span><br><span class="line">        <span class="keyword">while</span>(x%<span class="number">10</span>==<span class="number">0</span>)x/=<span class="number">10</span>;</span><br><span class="line">        s*=x;</span><br><span class="line">        <span class="keyword">while</span>(s%<span class="number">10</span>==<span class="number">0</span>)s/=<span class="number">10</span>;</span><br><span class="line">    &#125;write(s);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="4-拱猪计分"><a href="#4-拱猪计分" class="headerlink" title="4. 拱猪计分"></a>4. 拱猪计分</h2><h3 id="分析-3"><a href="#分析-3" class="headerlink" title="分析"></a>分析</h3><p>典型的大模拟。</p>
<p>明白了什么叫 $1h$ 读题，$0.2h$ 写代码</p>
<p>我们从读入开始</p>
<h4 id="读入"><a href="#读入" class="headerlink" title="读入"></a>读入</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;i++)&#123;</span><br><span class="line">    read(size[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=size[i];j++)&#123;</span><br><span class="line">        <span class="keyword">char</span> k;<span class="keyword">int</span> p;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;k&gt;&gt;p;</span><br><span class="line">        <span class="keyword">if</span>(k==<span class="string">'H'</span>)card[i][p]=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(k==<span class="string">'S'</span>)card[i][<span class="number">14</span>]=<span class="literal">true</span>;</span><br><span class="line">               <span class="keyword">else</span> <span class="keyword">if</span>(k==<span class="string">'D'</span>)card[i][<span class="number">15</span>]=<span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(k==<span class="string">'C'</span>)card[i][<span class="number">16</span>]=<span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>我们用 $card_{i,j}$ 记录第 $i$ 个人，有没第 $j$ 张得分牌。</p>
<h4 id="计分"><a href="#计分" class="headerlink" title="计分"></a>计分</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;i++)&#123;</span><br><span class="line">    <span class="keyword">bool</span> flag=<span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">13</span>;j++)</span><br><span class="line">        <span class="keyword">if</span>(card[i][j]==<span class="literal">false</span>)&#123;</span><br><span class="line">            flag=<span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">if</span>(flag)&#123;<span class="comment">//有没有红心牌</span></span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">200</span>;<span class="comment">//所有红心牌以+200分计算。</span></span><br><span class="line">        <span class="keyword">if</span>(card[i][<span class="number">14</span>]&amp;&amp;card[i][<span class="number">15</span>])ans=<span class="number">500</span>;<span class="comment">//若S12、D11皆在吃下所有红心牌之一家，则此玩家得+500分。</span></span><br><span class="line">        <span class="keyword">else</span> ans=ans+card[i][<span class="number">14</span>]*fraction[<span class="number">14</span>]+card[i][<span class="number">15</span>]*fraction[<span class="number">15</span>];</span><br><span class="line">        <span class="keyword">if</span>(card[i][<span class="number">16</span>])ans*=<span class="number">2</span>;<span class="comment">//若除了C10还有其它计分牌，则将其它计分牌所得分数加倍计算。</span></span><br><span class="line">        work(ans);<span class="comment">//输出</span></span><br><span class="line">        <span class="built_in">putchar</span>(<span class="number">32</span>);<span class="comment">//输出</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">bool</span> flg=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">15</span>;j++)</span><br><span class="line">            <span class="keyword">if</span>(card[i][j]==<span class="literal">true</span>)&#123;</span><br><span class="line">                flg=<span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">if</span>(flg)&#123;</span><br><span class="line">            <span class="keyword">if</span>(card[i][<span class="number">16</span>])work(<span class="number">50</span>);<span class="comment">//若持有C10的玩家只有该张牌而没有任何其它牌则得+50分</span></span><br><span class="line">            <span class="keyword">else</span> work(<span class="number">0</span>);<span class="comment">//若未持有这16张牌之任一张则以得零分计算。</span></span><br><span class="line">            <span class="built_in">putchar</span>(<span class="number">32</span>);<span class="comment">//输出</span></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">15</span>;j++)</span><br><span class="line">                <span class="keyword">if</span>(card[i][j])ans+=fraction[j];</span><br><span class="line">            <span class="keyword">if</span>(card[i][<span class="number">16</span>])ans*=<span class="number">2</span>;</span><br><span class="line">            work(ans);<span class="comment">//输出</span></span><br><span class="line">            <span class="built_in">putchar</span>(<span class="number">32</span>);<span class="comment">//输出</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="built_in">puts</span>(<span class="string">""</span>);</span><br></pre></td></tr></table></figure>
<h3 id="总代码-3"><a href="#总代码-3" class="headerlink" title="总代码"></a>总代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">cout</span>&lt;&lt;x;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(x&gt;<span class="number">0</span>)<span class="built_in">cout</span>&lt;&lt;<span class="string">'+'</span>&lt;&lt;x;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> fraction[<span class="number">17</span>]=&#123;<span class="number">0</span>,<span class="number">-50</span>,<span class="number">-2</span>,<span class="number">-3</span>,<span class="number">-4</span>,<span class="number">-5</span>,<span class="number">-6</span>,<span class="number">-7</span>,<span class="number">-8</span>,<span class="number">-9</span>,<span class="number">-10</span>,<span class="number">-20</span>,<span class="number">-30</span>,<span class="number">-40</span>,<span class="number">-100</span>,+<span class="number">100</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> size[<span class="number">5</span>];</span><br><span class="line"><span class="keyword">bool</span> card[<span class="number">5</span>][<span class="number">17</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="built_in">memset</span>(card,<span class="literal">false</span>,<span class="keyword">sizeof</span>(card));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;i++)&#123;</span><br><span class="line">            read(size[i]);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=size[i];j++)&#123;</span><br><span class="line">                <span class="keyword">char</span> k;<span class="keyword">int</span> p;</span><br><span class="line">                <span class="built_in">cin</span>&gt;&gt;k&gt;&gt;p;</span><br><span class="line">                <span class="keyword">if</span>(k==<span class="string">'H'</span>)card[i][p]=<span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(k==<span class="string">'S'</span>)card[i][<span class="number">14</span>]=<span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(k==<span class="string">'D'</span>)card[i][<span class="number">15</span>]=<span class="literal">true</span>;</span><br><span class="line">                        <span class="keyword">else</span> <span class="keyword">if</span>(k==<span class="string">'C'</span>)card[i][<span class="number">16</span>]=<span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(size[<span class="number">1</span>]+size[<span class="number">2</span>]+size[<span class="number">3</span>]+size[<span class="number">4</span>]==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">bool</span> flag=<span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">13</span>;j++)</span><br><span class="line">                <span class="keyword">if</span>(card[i][j]==<span class="literal">false</span>)&#123;</span><br><span class="line">                    flag=<span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">                <span class="keyword">int</span> ans=<span class="number">200</span>;</span><br><span class="line">                <span class="keyword">if</span>(card[i][<span class="number">14</span>]&amp;&amp;card[i][<span class="number">15</span>])ans=<span class="number">500</span>;</span><br><span class="line">                <span class="keyword">else</span> ans=ans+card[i][<span class="number">14</span>]*fraction[<span class="number">14</span>]+card[i][<span class="number">15</span>]*fraction[<span class="number">15</span>];</span><br><span class="line">                <span class="keyword">if</span>(card[i][<span class="number">16</span>])ans*=<span class="number">2</span>;</span><br><span class="line">                work(ans);</span><br><span class="line">                <span class="built_in">putchar</span>(<span class="number">32</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">bool</span> flg=<span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">15</span>;j++)</span><br><span class="line">                    <span class="keyword">if</span>(card[i][j]==<span class="literal">true</span>)&#123;</span><br><span class="line">                        flg=<span class="literal">false</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                <span class="keyword">if</span>(flg)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(card[i][<span class="number">16</span>])work(<span class="number">50</span>);</span><br><span class="line">                    <span class="keyword">else</span> work(<span class="number">0</span>);</span><br><span class="line">                    <span class="built_in">putchar</span>(<span class="number">32</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">15</span>;j++)</span><br><span class="line">                        <span class="keyword">if</span>(card[i][j])ans+=fraction[j];</span><br><span class="line">                    <span class="keyword">if</span>(card[i][<span class="number">16</span>])ans*=<span class="number">2</span>;</span><br><span class="line">                    work(ans);</span><br><span class="line">                    <span class="built_in">putchar</span>(<span class="number">32</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="5-变色龙"><a href="#5-变色龙" class="headerlink" title="5. 变色龙"></a>5. 变色龙</h2><h3 id="错点-3"><a href="#错点-3" class="headerlink" title="错点"></a>错点</h3><p>$bfs$ 的 $priority$_$queue$ 优化写假了。</p>
<h3 id="分析-4"><a href="#分析-4" class="headerlink" title="分析"></a>分析</h3><p>最短路问题。</p>
<p>为什么能使用 $dij$ 跑最短路？明显会 $T$ 啊！</p>
<p>点数：$2000 \times 2000=400,0000$</p>
<p>边数：小学奥数之等差数列</p>
<p>$\begin{matrix}\underbrace{0+4+\cdots+7996}\\2000项\end{matrix}=(7996+0)  \times 2000 \div 2=7996 \times 1000=799,6000$</p>
<p>我们知道 $dij$ 的复杂度是 $O(n \log m)$</p>
<p>简单计算一下</p>
<p>$\log m=\log 7996000 \approx 26$，$26 \times 4000000=1,0400,0000 &gt; 1,0000,0000‬$</p>
<p>所以显然是会 $T$ 掉的<del>（除非玄学卡常，比如：等式展开之类的）</del></p>
<p>而 $bfs$ 的期望复杂度是 $O(n+m)$ 的。</p>
<p>$bfs$ 大概就是这种写法</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">q.push((node)&#123;xx,yy,<span class="number">0</span>&#125;);</span><br><span class="line">    <span class="keyword">while</span>(q.size())&#123;</span><br><span class="line">    node f=q.top();</span><br><span class="line">    q.pop();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x=f.x+dx[i],y=f.y+dy[i];</span><br><span class="line">        <span class="keyword">if</span>(x&gt;=<span class="number">1</span>&amp;&amp;x&lt;=n&amp;&amp;y&gt;=<span class="number">1</span>&amp;&amp;y&lt;=m)&#123;</span><br><span class="line">            <span class="keyword">int</span> as=ans[f.x][f.y];</span><br><span class="line">            <span class="keyword">if</span>(a[x][y]!=a[f.x][f.y])as++;</span><br><span class="line">            <span class="keyword">if</span>(as&lt;ans[x][y])ans[x][y]=as,q.push((node)&#123;x,y&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="总代码-4"><a href="#总代码-4" class="headerlink" title="总代码"></a>总代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">2000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,xx,yy,a[MAXN][MAXN],ans[MAXN][MAXN];</span><br><span class="line"><span class="keyword">int</span> dx[<span class="number">4</span>]=&#123;<span class="number">-1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dy[<span class="number">4</span>]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">1</span>&#125;;</span><br><span class="line"><span class="built_in">queue</span>&lt;node&gt;q;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    read(n);read(m);read(xx);read(yy);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">            read(a[i][j]);</span><br><span class="line">    q.push((node)&#123;xx,yy,<span class="number">0</span>&#125;);</span><br><span class="line">    <span class="keyword">while</span>(q.size())&#123;</span><br><span class="line">        node f=q.top();</span><br><span class="line">        q.pop();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> x=f.x+dx[i],y=f.y+dy[i];</span><br><span class="line">            <span class="keyword">if</span>(x&gt;=<span class="number">1</span>&amp;&amp;x&lt;=n&amp;&amp;y&gt;=<span class="number">1</span>&amp;&amp;y&lt;=m)&#123;</span><br><span class="line">                <span class="keyword">int</span> as=ans[f.x][f.y];</span><br><span class="line">                <span class="keyword">if</span>(a[x][y]!=a[f.x][f.y])as++;</span><br><span class="line">                <span class="keyword">if</span>(as&lt;ans[x][y])ans[x][y]=as,q.push((node)&#123;x,y&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;ans[i][j]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="6-和谐分组"><a href="#6-和谐分组" class="headerlink" title="6. 和谐分组"></a>6. 和谐分组</h2><h3 id="讲解二分"><a href="#讲解二分" class="headerlink" title="讲解二分"></a>讲解二分</h3><p>终于是正常一点的题目了，并且是我最喜欢的算法（蒟蒻最喜欢的算法是并查集、二分、dp、LCA）</p>
<p>二分是确定一个答案然后对其分析，而答案常常有这样一种情况：</p>
<p><img src="https://i.loli.net/2020/02/23/1ogLUr7OITxSV8R.png" alt="左闭右开"></p>
<p>​                                 左闭右开</p>
<p><img src="https://i.loli.net/2020/02/23/y1FNhUaTKIAQBCo.png" alt="右闭左开"></p>
<p>​                                    右闭左开</p>
<p>题目通常会让我们找符合条件的最大值或最小值。</p>
<p>以这道题为例，就是去在可能的谐度度中找一个最小的。</p>
<p>比答案大的都可以，不答案小的都不可以。</p>
<p>这个我们叫右闭左开。</p>
<p>而比答案小的都可以，不答案大的都不可以。</p>
<p>这个我们叫左闭右开。</p>
<p>二分顾名思义，就是二分。</p>
<p>左闭右开：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> l=<span class="number">0</span>,r=INT_MAX/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">while</span>(l+<span class="number">1</span>&lt;r)&#123;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(check(mid))l=mid;<span class="comment">//这里不同</span></span><br><span class="line">    <span class="keyword">else</span> r=mid;<span class="comment">//这里不同</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>右闭左开：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> l=<span class="number">0</span>,r=INT_MAX/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">while</span>(l+<span class="number">1</span>&lt;r)&#123;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(check(mid))r=mid;<span class="comment">//这里不同</span></span><br><span class="line">    <span class="keyword">else</span> l=mid;<span class="comment">//这里不同</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="分析-5"><a href="#分析-5" class="headerlink" title="分析"></a>分析</h3><p>现在我们已经会了二分，我们可以愉快地做这道题了。</p>
<p>我们可以开始写 $check$ 函数：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="comment">//check函数顾名思义，就是用来反对我们的答案x是否可行</span></span><br><span class="line">    <span class="keyword">int</span> maxn=a[<span class="number">1</span>],minn=a[<span class="number">1</span>],s=<span class="number">1</span>;<span class="comment">//初始化</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        maxn=max(maxn,a[i]);<span class="comment">//最大</span></span><br><span class="line">        minn=min(minn,a[i]);<span class="comment">//最小</span></span><br><span class="line">        <span class="keyword">if</span>(maxn-minn&gt;x)&#123;</span><br><span class="line">            s++;<span class="comment">//新分一个组</span></span><br><span class="line">            maxn=a[i];<span class="comment">//初始化</span></span><br><span class="line">            minn=a[i];<span class="comment">//初始化</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s&lt;=k;<span class="comment">//如果组数小于等于k，就说明不可行</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="总代码-5"><a href="#总代码-5" class="headerlink" title="总代码"></a>总代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n,k,a[MAXN];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> maxn=a[<span class="number">1</span>],minn=a[<span class="number">1</span>],s=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        maxn=max(maxn,a[i]);</span><br><span class="line">        minn=min(minn,a[i]);</span><br><span class="line">        <span class="keyword">if</span>(maxn-minn&gt;x)&#123;</span><br><span class="line">            s++;</span><br><span class="line">            maxn=a[i];</span><br><span class="line">            minn=a[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s&lt;=k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    read(n);read(k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)read(a[i]);</span><br><span class="line">    <span class="keyword">int</span> l=<span class="number">0</span>,r=INT_MAX/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">while</span>(l+<span class="number">1</span>&lt;r)&#123;</span><br><span class="line">        <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(check(mid))r=mid;</span><br><span class="line">        <span class="keyword">else</span> l=mid;</span><br><span class="line">    &#125;write(r);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>模拟赛</category>
      </categories>
      <tags>
        <tag>二分</tag>
        <tag>模拟</tag>
        <tag>bfs</tag>
        <tag>dij</tag>
        <tag>搜索</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 P1052 【过河】</title>
    <url>/2020/02/21/%E9%A2%98%E8%A7%A3%20P1052%20%E3%80%90%E8%BF%87%E6%B2%B3%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1052" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p1052" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<p>显然是$dp$，是用$STL$当中的<a href="https://zhaohaikun.blog.luogu.org/solution-p1305" target="_blank" rel="noopener">$map$</a>可以做到<a href="https://www.luogu.org/record/27685820" target="_blank" rel="noopener">30分</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;//万能头文件</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> l,n,s,t;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="keyword">bool</span>&gt;m;<span class="comment">//记有没有石头</span></span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;dp;<span class="comment">//最少踩到石头的个数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;l&gt;&gt;s&gt;&gt;t&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;x;</span><br><span class="line">        m[x]=<span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=l+t<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        dp[i]=INT_MAX/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=s;j&lt;=t&amp;&amp;j&lt;=i;j++)dp[i]=min(dp[i],dp[i-j]);<span class="comment">//倒退</span></span><br><span class="line">        <span class="keyword">if</span>(m[i])dp[i]++;</span><br><span class="line">    &#125;<span class="keyword">int</span> s=dp[l];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=l+<span class="number">1</span>;i&lt;=l+t<span class="number">-1</span>;i++)s=min(s,dp[i]);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;s;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>之后，我们该想一想如何$AC$这道题</p>
<p>我们发现石头数量很少，而独木桥却很长</p>
<p><img src="https://i.loli.net/2019/11/23/MndaCKcbu7ZoUyi.png" alt="360截图18141224304435.png"></p>
<p>遇到这张图，我们可能还会选择暴力的方法</p>
<p><img src="https://i.loli.net/2019/11/23/6mNA9akXPqD7pQv.png" alt="360截图170405117195111.png"></p>
<p>但是遇到这张图，你还会用暴力吗？</p>
<p>空的地方就是随便走就行了，完全可以不用老老实实的去看，我们可以把路径压缩，更简单地说就是如果后面的一个石头与前面的一个石头距离太远，我们可以把后面一个石头推到前一个石头附近，至于这个量是多少呢，需要自己把握。</p>
<p>我自己还是觉得稍微保险一点，不要$TLE$就行了，所以我选择把这个数定在$1000$，当然听同学说，他定的比较小也过了，这并没有关系。</p>
<p>所以，我们可以看代码了</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> l,s,t,m,a[<span class="number">110</span>],dp[<span class="number">100010</span>],b[<span class="number">110</span>];</span><br><span class="line"><span class="keyword">bool</span> x[<span class="number">100010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;l;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;s&gt;&gt;t&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)<span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    sort(a+<span class="number">1</span>,a+<span class="number">1</span>+m);</span><br><span class="line">    <span class="keyword">if</span>(s==t)&#123;<span class="comment">//这个应该很简单，我上面没有说</span></span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">            <span class="keyword">if</span>(a[i]%s==<span class="number">0</span>)ans++;<span class="comment">//如果会经过它，答案+1</span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;ans;<span class="comment">//输出</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">        <span class="keyword">if</span>(a[i]-a[i<span class="number">-1</span>]&gt;<span class="number">1000</span>)b[i]=b[i<span class="number">-1</span>]+<span class="number">1000</span>;<span class="comment">//注意啦，如果原来的距离小于1000，你要保持不变</span></span><br><span class="line">        <span class="keyword">else</span> b[i]=a[i]-a[i<span class="number">-1</span>]+b[i<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)x[b[i]]=<span class="literal">true</span>;<span class="comment">//石头</span></span><br><span class="line">    l=b[m];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=l+t<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        dp[i]=INT_MAX/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=s;j&lt;=t&amp;&amp;j&lt;=i;j++)dp[i]=min(dp[i],dp[i-j]);<span class="comment">//转移状态</span></span><br><span class="line">        <span class="keyword">if</span>(x[i])dp[i]++;</span><br><span class="line">    &#125;<span class="keyword">int</span> ans=dp[l];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=l+t<span class="number">-1</span>;i++)ans=min(ans,dp[i]);<span class="comment">//打擂法求最小值</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans;<span class="comment">//输出</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>洛谷题库</category>
        <category>noip提高组</category>
      </categories>
      <tags>
        <tag>dp</tag>
        <tag>离散化</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 P2070 【刷墙】</title>
    <url>/2020/02/21/%E9%A2%98%E8%A7%A3%20P2070%20%E3%80%90%E5%88%B7%E5%A2%99%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2070" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p2070" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><a href="http://www.zhaohaikun.cn/2020/02/10/ti-jie-p2070-shua-qiang/" target="_blank" rel="noopener">$ZHK$私人博客体验更佳</a></p>
<p>这道题目，$n&lt;=10^5$，显然在暗示我们使用$n \log n$的做法，我就是用了一个简单的贪心，通过了此题。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>在这道题中，我们发现，可以把 $Bessie$ 每次走的路看成是对序列的一段区间染色。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> x;<span class="keyword">char</span> y;</span><br><span class="line">    read(x);<span class="built_in">cin</span>&gt;&gt;y;</span><br><span class="line">    a[i].l=position;</span><br><span class="line">    <span class="keyword">if</span>(y==<span class="string">'L'</span>)position-=x;<span class="comment">//Bessie往左走</span></span><br><span class="line">    <span class="keyword">else</span> position+=x;<span class="comment">//Bessie往右走</span></span><br><span class="line">    a[i].r=position;</span><br><span class="line">    <span class="keyword">if</span>(a[i].l&gt;a[i].r)swap(a[i].l,a[i].r);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里的 $a$数组是一个结构体——$node$<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l,r;<span class="comment">//每次染色的左端点和右端点</span></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(<span class="keyword">const</span> node&amp;b)<span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> l&lt;b.l;<span class="comment">//按左端点从小到大排序</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;a[MAXN];</span><br></pre></td></tr></table></figure><br>之后，我们就要说真正的思路了，我们对于 $a$ 序列排序后，会有这样一个画面。</p>
<p><img src="https://i.loli.net/2020/02/10/yELKiHaF1QPTD3m.png" alt=""></p>
<p>我们定义两个变量——$lft$和$rgt$，记录可能区间的左端点和右端点。</p>
<p>这里面我们记录的是<strong>有可能和下面相交的区间</strong>，什么意思？比如那张图，我们标一下号</p>
<p><img src="https://i.loli.net/2020/02/10/ZBfRq9P2JwOVjIy.png" alt=""></p>
<p>当我么扫描第 $1$ 个区间时，我们发现，之后有可能被覆盖到的区间是 $lft=0,rgt=15$。</p>
<p>当我们继续扫描，到第 $2$ 个区间时，我们发现，之后可能被覆盖到的区间是 $lft=15,rgt=18$。</p>
<p>可能有人会问，$5$~$15$ 这段消失，我们还能理解，但是为什么 $0$~$5$ 这段也没了呢，因为第 $2$ 个区间的$l$都大约 $0$ 了，之后的区间肯定就更大于 $0$ 了，我们是按 $l$ 从小到大排序的啊。</p>
<p>所以，我可以放一下代码了：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">    <span class="keyword">if</span>(a[i].r&gt;lft)&#123;<span class="comment">//如果跟可能被覆盖到的区间有交</span></span><br><span class="line">        a[i].l=max(a[i].l,lft);<span class="comment">//这里是使得之后的代码可以少写一点，因为显然，a[i].l&lt;lft，a[i].l~lft这1段也没有用了</span></span><br><span class="line">        <span class="keyword">if</span>(a[i].r&gt;rgt)&#123;<span class="comment">//比之前的右端点大</span></span><br><span class="line">            ans+=rgt-a[i].l;<span class="comment">//从rgt到a[i].l</span></span><br><span class="line">            lft=rgt;<span class="comment">//之前的右端点显然就是左端点，显然，新的可能被覆盖到的区间就是之前的rgt~a[i].r</span></span><br><span class="line">            rgt=a[i].r;<span class="comment">//更新右端点</span></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;<span class="comment">//比之前的右端点小</span></span><br><span class="line">            ans+=a[i].r-a[i].l;<span class="comment">//从a[i].r到a[i].l</span></span><br><span class="line">            lft=a[i].r;<span class="comment">//更新左端点</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>我们先来看一下完整的代码：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;<span class="comment">//快读</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;<span class="comment">//快写</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l,r;<span class="comment">//每次染色的左端点和右端点</span></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(<span class="keyword">const</span> node&amp;b)<span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> l&lt;b.l;<span class="comment">//按左端点从小到大排序</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;a[MAXN];</span><br><span class="line"><span class="keyword">int</span> position,ans,lft,rgt,n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    read(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x;<span class="keyword">char</span> y;</span><br><span class="line">        read(x);<span class="built_in">cin</span>&gt;&gt;y;</span><br><span class="line">        a[i].l=position;</span><br><span class="line">        <span class="keyword">if</span>(y==<span class="string">'L'</span>)position-=x;<span class="comment">//Bessie往左走</span></span><br><span class="line">        <span class="keyword">else</span> position+=x;<span class="comment">//Bessie往右走</span></span><br><span class="line">        a[i].r=position;</span><br><span class="line">        <span class="keyword">if</span>(a[i].l&gt;a[i].r)swap(a[i].l,a[i].r);</span><br><span class="line">    &#125;sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>);<span class="comment">//排序</span></span><br><span class="line">    lft=a[<span class="number">1</span>].l;rgt=a[<span class="number">1</span>].r;<span class="comment">//给lft和rgt赋上初值</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">if</span>(a[i].r&gt;lft)&#123;<span class="comment">//如果跟可能被覆盖到的区间有交</span></span><br><span class="line">            a[i].l=max(a[i].l,lft);<span class="comment">//这里是使得之后的代码可以少写一点，因为显然，a[i].l&lt;lft，a[i].l~lft这1段也没有用了</span></span><br><span class="line">            <span class="keyword">if</span>(a[i].r&gt;rgt)&#123;<span class="comment">//比之前的右端点大</span></span><br><span class="line">                ans+=rgt-a[i].l;<span class="comment">//从rgt到a[i].l</span></span><br><span class="line">                lft=rgt;<span class="comment">//之前的右端点显然就是左端点，显然，新的可能被覆盖到的区间就是之前的rgt~a[i].r</span></span><br><span class="line">                rgt=a[i].r;<span class="comment">//更新右端点</span></span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;<span class="comment">//比之前的右端点小</span></span><br><span class="line">                ans+=a[i].r-a[i].l;<span class="comment">//从a[i].r到a[i].l</span></span><br><span class="line">                lft=a[i].r;<span class="comment">//更新左端点</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    write(ans);<span class="comment">//输出</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>补充一下正确性证明：</p>
<p>实际上作者想到这个方法的时候觉得显然是对的</p>
<p>其实主要就是为什么要 $lft=a[i].r$ 可能有人对此有点问题，我来解释一下</p>
<blockquote>
<p>$\therefore$ 我们是按从小到大对 $a$ 数组进行排序，也就是 $a[i+1].l \geq a[i].l$，而 $a[i].l&gt;lft$</p>
<p>$\because$ $a[i+1].l&gt;lft$。</p>
</blockquote>
]]></content>
      <categories>
        <category>洛谷题库</category>
      </categories>
      <tags>
        <tag>排序</tag>
        <tag>贪心</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 P1748 【H数】</title>
    <url>/2020/02/21/%E9%A2%98%E8%A7%A3%20P1748%20%E3%80%90H%E6%95%B0%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1748" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p1748" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<h1 id="我来讲讲-dp-的做法"><a href="#我来讲讲-dp-的做法" class="headerlink" title="我来讲讲 $dp$ 的做法"></a>我来讲讲 $dp$ 的做法</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>昨天 $PHY$ 大佬问我，这题怎么做？考虑到他没学过 $set$ 、 $priority_queue$ 和 $queue$ 。之后，我就想到了可以用 $dp$ 来解决这道题。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="设置状态"><a href="#设置状态" class="headerlink" title="设置状态"></a>设置状态</h3><p>很显然，我们可以用 $f[i]$ 表示第$i$个数是多少。</p>
<h3 id="转移"><a href="#转移" class="headerlink" title="转移"></a>转移</h3><p>第$i$个$H$数是多少，我们显然应该从前面的$i-1$个数去分别$\times2$、$\times3$、$\times5$、$\times7$中取比第$i-1$个$H$数大的最小数。</p>
<h3 id="边界条件"><a href="#边界条件" class="headerlink" title="边界条件"></a>边界条件</h3><p>$f_1=1$是很显然的</p>
<p>此外还要注意$f_0=0$</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>我们现在就可以开始写代码了</p>
<p><strong>注意开$long$ $long$</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> f[<span class="number">10010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(f,<span class="number">127</span>,<span class="keyword">sizeof</span>(f));<span class="comment">//为了找最小，我们最开始就得赋成最大</span></span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    read(n);</span><br><span class="line">    f[<span class="number">0</span>]=<span class="number">0</span>;<span class="comment">//初始化</span></span><br><span class="line">    f[<span class="number">1</span>]=<span class="number">1</span>;<span class="comment">//初始化</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i<span class="number">-1</span>;j&gt;=<span class="number">1</span>;j--)</span><br><span class="line">            <span class="keyword">if</span>(f[j]*<span class="number">2</span>&gt;f[i<span class="number">-1</span>])f[i]=min(f[i],f[j]*<span class="number">2</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(f[j]*<span class="number">3</span>&gt;f[i<span class="number">-1</span>])f[i]=min(f[i],f[j]*<span class="number">3</span>);</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(f[j]*<span class="number">5</span>&gt;f[i<span class="number">-1</span>])f[i]=min(f[i],f[j]*<span class="number">5</span>);</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(f[j]*<span class="number">7</span>&gt;f[i<span class="number">-1</span>])f[i]=min(f[i],f[j]*<span class="number">7</span>);</span><br><span class="line">                        <span class="keyword">else</span> <span class="keyword">break</span>;<span class="comment">//优化</span></span><br><span class="line">    write(f[n]);<span class="comment">//输出</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>这个代码还是很简短的，十分好写，希望大家以后学习也能好好想想一题多解</p>
<p>最后来求一下赞和评论！</p>
]]></content>
      <categories>
        <category>洛谷题库</category>
      </categories>
      <tags>
        <tag>dp</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 P4302 【[SCOI2003]字符串折叠】</title>
    <url>/2020/02/21/%E9%A2%98%E8%A7%A3%20P4302%20%E3%80%90%5BSCOI2003%5D%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8A%98%E5%8F%A0%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4302" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p4302" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<h2 id="讲讲我的做法"><a href="#讲讲我的做法" class="headerlink" title="讲讲我的做法"></a>讲讲我的做法</h2><p>题目大意：对一个字符串进行折叠是它长度最小</p>
<p>看一眼数据范围：哇！字符串长度不超过<strong>100</strong>！这是一道省选题，不可能给你太宽裕的时限，所以，题目基本暗示你要用$n^{3}$多一些的算法复杂度。</p>
<p>这是一道最优化的题目，常见求最优化问题的算法比如贪心，模拟，枚举我都想不出什么好办法，唯独觉得像一道区间$dp$</p>
<h3 id="区间-dp-的分析"><a href="#区间-dp-的分析" class="headerlink" title="区间$dp$的分析"></a>区间$dp$的分析</h3><h4 id="解释状态"><a href="#解释状态" class="headerlink" title="解释状态"></a>解释状态</h4><p>我们用$f[i][j]$表示$i$到$j$这个区间内最小的长度</p>
<p>首先，我们可以把$i$~$j$这个区间的字符串拆成2部分处理</p>
<p>就有了这段代码：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">2</span>;l&lt;=n;l++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,j=i+l<span class="number">-1</span>;j&lt;=n;i++,j++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;j;k++)</span><br><span class="line">            f[i][j]=min(f[i][j],f[i][k]+f[k+<span class="number">1</span>][j]);</span><br></pre></td></tr></table></figure><br>当然我用了字符串，然后加空格，这样更加符合人脑思维</p>
<p>也有同学喜欢用字符数组，我也写了这样的一段代码<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">2</span>;l&lt;=n;l++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>,j=i+len<span class="number">-1</span>;j&lt;n;i++,j++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;j;k++)</span><br><span class="line">            f[i][j]=min(f[i][j],f[i][k]+f[k+<span class="number">1</span>][j]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h4 id="折叠"><a href="#折叠" class="headerlink" title="折叠"></a>折叠</h4><p>至于如何判断能否折叠，我呢用了一个函数——$check$，来检查一下是否可以折叠</p>
<p>字符串代码：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=r;i++)</span><br><span class="line">        <span class="keyword">if</span>(st[i]!=st[(i-l)%len+l])<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>字符数组代码<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">char</span> s[],<span class="keyword">int</span> n,<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=len;i&lt;n;i++)</span><br><span class="line">        <span class="keyword">if</span>(s[i]!=s[i%len])<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>判断好了是否可以折叠，我们就可以去写状态了，从$i$~$j$,判断区间折叠的循环节</p>
<p>字符串代码<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">2</span>;l&lt;=n;l++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,j=i+l<span class="number">-1</span>;j&lt;=n;i++,j++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;j;k++)</span><br><span class="line">            f[i][j]=min(f[i][j],f[i][k]+f[k+<span class="number">1</span>][j]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;j;k++)&#123;</span><br><span class="line">            <span class="keyword">int</span> len=k-i+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(l%len!=<span class="number">0</span>)<span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(check(i,j,len))f[i][j]=min(f[i][j],f[i][k]+<span class="number">2</span>+m[l/len]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>字符数组代码<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">2</span>;l&lt;=n;l++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,j=i+l<span class="number">-1</span>;j&lt;n;i++,j++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;j;k++)</span><br><span class="line">            f[i][j]=min(f[i][j],f[i][k]+f[k+<span class="number">1</span>][j]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;j;k++)&#123;</span><br><span class="line">            <span class="keyword">int</span> len=k-i+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(l%len!=<span class="number">0</span>)<span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(check(s+i,l,len))f[i][j]=min(f[i][j],f[i][k]+<span class="number">2</span>+m[l/len]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h4 id="边界条件以及初始化"><a href="#边界条件以及初始化" class="headerlink" title="边界条件以及初始化"></a>边界条件以及初始化</h4><p>刚刚的代码里出现里$m$，现在我就来解释一下$m$数组是干什么的</p>
<p><strong>$m[i]$的值表示的是i的位数</strong>，因为字符串的长度跟数字的位数有关</p>
<p>提到了$m$数组的左右自然由于提及如何用代码实现</p>
<p>我用的是最简单的方法，$for$循环扫，<strong>注意</strong>：<strong>100也要赋值，万一数据给你100个同样的字符</strong><br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">9</span>;i++)m[i]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">10</span>;i&lt;=<span class="number">99</span>;i++)m[i]=<span class="number">2</span>;</span><br><span class="line">m[<span class="number">100</span>]=<span class="number">3</span>;</span><br></pre></td></tr></table></figure></p>
<p>现在我们想一想初始化怎么做？</p>
<p>显然，$f[i][i]=1$，如何数组的初值要设为$INF$<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">memset</span>(f,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)f[i][i]=<span class="number">1</span>;</span><br></pre></td></tr></table></figure></p>
<h4 id="现在我们已经做完了所有的步骤，让我们看一看完整代码吧"><a href="#现在我们已经做完了所有的步骤，让我们看一看完整代码吧" class="headerlink" title="现在我们已经做完了所有的步骤，让我们看一看完整代码吧"></a>现在我们已经做完了所有的步骤，让我们看一看完整代码吧</h4><p>字符串代码<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">string</span> st;</span><br><span class="line"><span class="keyword">int</span> n,m[<span class="number">110</span>],f[<span class="number">110</span>][<span class="number">110</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=r;i++)</span><br><span class="line">        <span class="keyword">if</span>(st[i]!=st[(i-l)%len+l])<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;st;</span><br><span class="line">    n=st.size();</span><br><span class="line">    st=<span class="string">' '</span>+st;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">9</span>;i++)m[i]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">10</span>;i&lt;=<span class="number">99</span>;i++)m[i]=<span class="number">2</span>;</span><br><span class="line">    m[<span class="number">100</span>]=<span class="number">3</span>;</span><br><span class="line">    <span class="built_in">memset</span>(f,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)f[i][i]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">2</span>;l&lt;=n;l++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,j=i+l<span class="number">-1</span>;j&lt;=n;i++,j++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;j;k++)</span><br><span class="line">                f[i][j]=min(f[i][j],f[i][k]+f[k+<span class="number">1</span>][j]);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;j;k++)&#123;</span><br><span class="line">                <span class="keyword">int</span> len=k-i+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(l%len!=<span class="number">0</span>)<span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">if</span>(check(i,j,len))f[i][j]=min(f[i][j],f[i][k]+<span class="number">2</span>+m[l/len]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,f[<span class="number">1</span>][n]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>字符数组代码<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">110</span>];</span><br><span class="line"><span class="keyword">int</span> n,m[<span class="number">110</span>],f[<span class="number">110</span>][<span class="number">110</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">char</span> s[],<span class="keyword">int</span> n,<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=len;i&lt;n;i++)</span><br><span class="line">        <span class="keyword">if</span>(s[i]!=s[i%len])<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">    n=<span class="built_in">strlen</span>(s);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">9</span>;i++)m[i]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">10</span>;i&lt;=<span class="number">99</span>;i++)m[i]=<span class="number">2</span>;</span><br><span class="line">    m[<span class="number">100</span>]=<span class="number">3</span>;</span><br><span class="line">    <span class="built_in">memset</span>(f,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)f[i][i]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">2</span>;l&lt;=n;l++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,j=i+l<span class="number">-1</span>;j&lt;n;i++,j++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;j;k++)</span><br><span class="line">                f[i][j]=min(f[i][j],f[i][k]+f[k+<span class="number">1</span>][j]);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;j;k++)&#123;</span><br><span class="line">                <span class="keyword">int</span> len=k-i+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(l%len!=<span class="number">0</span>)<span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">if</span>(check(s+i,l,len))f[i][j]=min(f[i][j],f[i][k]+<span class="number">2</span>+m[l/len]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,f[<span class="number">0</span>][n<span class="number">-1</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度"></a>时间复杂度</h3><p>看上去我们连续套了4个循环，然而真的时间复杂度就达到了$n^{4}$吗？其实不是的</p>
<p>首先$n^{3}$是肯定要的，那么为什么时间复杂度没有达到$n^{4}$呢！</p>
<p>原因在于我们的continue剪枝，它能够给这个$n^{4}$的复杂度加上一个$log$</p>
<p>为什么？</p>
<p>我们要check的显然是$l$的因数，然而$l$的因数个数$\approx$ $\log{l}$</p>
<p>现实当中的复杂度还会更小，因为$check$的复杂度没有到$O(n)$，它不是从头开始，没有到头结束，并且一旦发现错误后会直接$return$</p>
<p>其实可以把里面的2个循环并成一个循环，但为了让大家看的更清楚，就不演示了</p>
]]></content>
      <categories>
        <category>洛谷题库</category>
        <category>SC省选</category>
      </categories>
      <tags>
        <tag>dp</tag>
        <tag>区间dp</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 P5663 【加工零件【民间数据】】</title>
    <url>/2020/02/21/%E9%A2%98%E8%A7%A3-P5663-%E3%80%90%E5%8A%A0%E5%B7%A5%E9%9B%B6%E4%BB%B6%E3%80%90%E6%B0%91%E9%97%B4%E6%95%B0%E6%8D%AE%E3%80%91%E3%80%91/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P5663" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-p5663" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>蒟蒻没有资格去参加 $CSPJ$，只能看着众多巨佬 $AK$。</p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><h3 id="确定做法"><a href="#确定做法" class="headerlink" title="确定做法"></a>确定做法</h3><p>首先，看到这道题，我直接想到的是递归，于是复杂度就上天了，考虑<strong>最短路</strong>。</p>
<h3 id="如何用最短路"><a href="#如何用最短路" class="headerlink" title="如何用最短路"></a>如何用最短路</h3><p>首先，看一张图</p>
<p><img src="https://i.loli.net/2019/11/23/CQ1F4lRjrX2qVpf.png" alt="360截图16251114373524.png"></p>
<p>我们该如何解决问题？</p>
<blockquote>
<p>问题:$3$做$5$阶段的零件$1$要不要做呢？</p>
</blockquote>
<p>其实，实质就是看$3$到$1$有没有长度为$5$的路径。</p>
<blockquote>
<p>问题:$3$做$7$阶段的零件$1$要不要做呢？</p>
</blockquote>
<p>其实，实质就是看$3$到$1$有没有长度为$7$的路径。</p>
<blockquote>
<p>问题:$3$做$6$阶段的零件$1$要不要做呢？</p>
</blockquote>
<p>其实，实质就是看$3$到$1$有没有长度为$6$的路径。</p>
<p>仔细思考这$3$个问题，我们会发现，<strong>如果$3$到$1$有长度为$5$的路径，那么$3$到$1$一定有长度为$7$的路径，但并不一定有长度为$6$的路径。</strong></p>
<p>所以，我们要对每个点求一遍奇数路径，和偶数路径。</p>
<h3 id="实现最短路"><a href="#实现最短路" class="headerlink" title="实现最短路"></a>实现最短路</h3><p>最短路的算法有很多，这道题最好用$dijkstra$，或$bfs$。</p>
<p>这道题的时限并不紧，并且$dijkstra$<strong>细节太多</strong>，我就来演示$bfs$实现的最短路</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfw</span><span class="params">()</span></span>&#123;<span class="comment">//我有一个好朋友叫bfw，所以我写bfs时，喜欢把函数名起为bfw</span></span><br><span class="line">    <span class="built_in">memset</span>(ji,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(ji));<span class="comment">//奇数最短路径</span></span><br><span class="line">    <span class="built_in">memset</span>(ou,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(ou));<span class="comment">//偶数最短路径</span></span><br><span class="line">    <span class="built_in">queue</span>&lt;pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt;q;</span><br><span class="line">    q.push(make_pair(<span class="number">1</span>,<span class="number">0</span>));</span><br><span class="line">    ou[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(q.size())&#123;</span><br><span class="line">        <span class="keyword">int</span> x=q.front().first,y=q.front().second;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v[x].size();i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(y%<span class="number">2</span>==<span class="number">1</span>)&#123;<span class="comment">//奇数+1=偶数</span></span><br><span class="line">                <span class="keyword">if</span>(y+<span class="number">1</span>&lt;ou[v[x][i]])&#123;</span><br><span class="line">                    ou[v[x][i]]=y+<span class="number">1</span>;<span class="comment">//更新答案</span></span><br><span class="line">                    q.push(make_pair(v[x][i],y+<span class="number">1</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;<span class="comment">//偶数+1=奇数</span></span><br><span class="line">                <span class="keyword">if</span>(y+<span class="number">1</span>&lt;ji[v[x][i]])&#123;</span><br><span class="line">                    ji[v[x][i]]=y+<span class="number">1</span>;<span class="comment">//更新答案</span></span><br><span class="line">                    q.push(make_pair(v[x][i],y+<span class="number">1</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        q.pop();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>$v$数组是一个动态数组，也就是$vector$，曹老师教我们<strong>多用$STL$写程序</strong></p>
<p>如果你写这样的$bfs$民间数据会$WA$ $1$个点 ，这个点是这样的</p>
<p><img src="https://i.loli.net/2019/11/23/JiCDb6jpuB9gzfZ.png" alt="360截图172905077510285.png"></p>
<p>$1$号点是一个孤点，没有偶数路径，所以，我们的$bfs$要这么写</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfw</span><span class="params">()</span></span>&#123;<span class="comment">//我有一个好朋友叫bfw，所以我写bfs时，喜欢把函数名起为bfw</span></span><br><span class="line">    <span class="built_in">memset</span>(ji,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(ji));<span class="comment">//奇数最短路径</span></span><br><span class="line">    <span class="built_in">memset</span>(ou,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(ou));<span class="comment">//偶数最短路径</span></span><br><span class="line">    <span class="built_in">queue</span>&lt;pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt;q;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v[<span class="number">1</span>].size();i++)&#123;</span><br><span class="line">        ji[v[<span class="number">1</span>][i]]=<span class="number">1</span>;</span><br><span class="line">        q.push(make_pair(v[<span class="number">1</span>][i],<span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(q.size())&#123;</span><br><span class="line">        <span class="keyword">int</span> x=q.front().first,y=q.front().second;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v[x].size();i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(y%<span class="number">2</span>==<span class="number">1</span>)&#123;<span class="comment">//奇数+1=偶数</span></span><br><span class="line">                <span class="keyword">if</span>(y+<span class="number">1</span>&lt;ou[v[x][i]])&#123;</span><br><span class="line">                    ou[v[x][i]]=y+<span class="number">1</span>;<span class="comment">//更新答案</span></span><br><span class="line">                    q.push(make_pair(v[x][i],y+<span class="number">1</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;<span class="comment">//偶数+1=奇数</span></span><br><span class="line">                <span class="keyword">if</span>(y+<span class="number">1</span>&lt;ji[v[x][i]])&#123;</span><br><span class="line">                    ji[v[x][i]]=y+<span class="number">1</span>;<span class="comment">//更新答案</span></span><br><span class="line">                    q.push(make_pair(v[x][i],y+<span class="number">1</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        q.pop();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="简要讲解主程序"><a href="#简要讲解主程序" class="headerlink" title="简要讲解主程序"></a>简要讲解主程序</h3><p>有了这些主程序应该是很简单的了</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m,q;</span><br><span class="line">    read(n);read(m);read(q);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        read(x);read(y);<span class="comment">//无向边</span></span><br><span class="line">        v[x].push_back(y);<span class="comment">//连边</span></span><br><span class="line">        v[y].push_back(x);<span class="comment">//连边</span></span><br><span class="line">    &#125;</span><br><span class="line">    bfw();<span class="comment">//跑最短路</span></span><br><span class="line">    <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        read(x);read(y);</span><br><span class="line">        <span class="keyword">if</span>(y%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(ou[x]&gt;y)<span class="built_in">puts</span>(<span class="string">"No"</span>);<span class="comment">//如果大于就不可能了</span></span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(ji[x]&gt;y)<span class="built_in">puts</span>(<span class="string">"No"</span>);<span class="comment">//如果大于就不可能了</span></span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>先来看一看这题完整的代码了<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;v[<span class="number">100010</span>];</span><br><span class="line"><span class="keyword">int</span> ji[<span class="number">100010</span>],ou[<span class="number">100010</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfw</span><span class="params">()</span></span>&#123;<span class="comment">//我有一个好朋友叫bfw，所以我写bfs时，喜欢把函数名起为bfw</span></span><br><span class="line">    <span class="built_in">memset</span>(ji,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(ji));<span class="comment">//奇数最短路径</span></span><br><span class="line">    <span class="built_in">memset</span>(ou,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(ou));<span class="comment">//偶数最短路径</span></span><br><span class="line">    <span class="built_in">queue</span>&lt;pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt;q;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v[<span class="number">1</span>].size();i++)&#123;</span><br><span class="line">        ji[v[<span class="number">1</span>][i]]=<span class="number">1</span>;</span><br><span class="line">        q.push(make_pair(v[<span class="number">1</span>][i],<span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(q.size())&#123;</span><br><span class="line">        <span class="keyword">int</span> x=q.front().first,y=q.front().second;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v[x].size();i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(y%<span class="number">2</span>==<span class="number">1</span>)&#123;<span class="comment">//奇数+1=偶数</span></span><br><span class="line">                <span class="keyword">if</span>(y+<span class="number">1</span>&lt;ou[v[x][i]])&#123;</span><br><span class="line">                    ou[v[x][i]]=y+<span class="number">1</span>;<span class="comment">//更新答案</span></span><br><span class="line">                    q.push(make_pair(v[x][i],y+<span class="number">1</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;<span class="comment">//偶数+1=奇数</span></span><br><span class="line">                <span class="keyword">if</span>(y+<span class="number">1</span>&lt;ji[v[x][i]])&#123;</span><br><span class="line">                    ji[v[x][i]]=y+<span class="number">1</span>;<span class="comment">//更新答案</span></span><br><span class="line">                    q.push(make_pair(v[x][i],y+<span class="number">1</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        q.pop();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m,q;</span><br><span class="line">    read(n);read(m);read(q);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        read(x);read(y);<span class="comment">//无向边</span></span><br><span class="line">        v[x].push_back(y);<span class="comment">//连边</span></span><br><span class="line">        v[y].push_back(x);<span class="comment">//连边</span></span><br><span class="line">    &#125;</span><br><span class="line">    bfw();<span class="comment">//跑最短路</span></span><br><span class="line">    <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        read(x);read(y);</span><br><span class="line">        <span class="keyword">if</span>(y%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(ou[x]&gt;y)<span class="built_in">puts</span>(<span class="string">"No"</span>);<span class="comment">//如果大于就不可能了</span></span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(ji[x]&gt;y)<span class="built_in">puts</span>(<span class="string">"No"</span>);<span class="comment">//如果大于就不可能了</span></span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>这道题还是比较有<strong>思维含量</strong>的，民间数据也出的很好，让我们思考全面。</p>
<p>最后，还是希望大家不懂就在评论区问，觉得好就点赞！</p>
]]></content>
      <categories>
        <category>洛谷题库</category>
        <category>noip普及组</category>
      </categories>
      <tags>
        <tag>bfs</tag>
        <tag>搜索</tag>
      </tags>
  </entry>
  <entry>
    <title>题解 CF1304E 【1-Trees and Queries】</title>
    <url>/2020/02/21/%E9%A2%98%E8%A7%A3-CF1304E-%E3%80%901-Trees-and-Queries%E3%80%91-1/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/CF1304E" target="_blank" rel="noopener">题目地址</a> <a href="https://zhaohaikun.blog.luogu.org/solution-cf1304e" target="_blank" rel="noopener">我在洛谷的题解，大家去点赞啊</a></p>
<a id="more"></a>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这场比赛，在最后 $5$ 分钟，我想到了这道题的 $Idea$，但是，没有打完，比赛就结束了。</p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="题目意思"><a href="#题目意思" class="headerlink" title="题目意思"></a>题目意思</h2><p>这道题目的意思就是说，一棵树上每次给 $x$ 和 $y$ 节点连 $1$ 条边，问 $a$ 到 $b$ 之间有没有长度为 $k$ 的边。</p>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>一开始，我看到这道题就往基环树这里去想，可实际上，这道题的方法却是和<a href="https://www.luogu.com.cn/problem/P5663" target="_blank" rel="noopener">加工零件</a>这道题是有异曲同工之处，作者那道题里面也写了篇<a href="https://zhaohaikun.blog.luogu.org/solution-p5663" target="_blank" rel="noopener">题解</a>，不会的同学可以去看一看。</p>
<p>这道题难处理的地方就是加 $1$ 条边这个地方很难处理，但是我们可以想一想，实际上可能的路径一共就<strong>3条</strong>。</p>
<ol>
<li><p>$a \implies b$ 这是最原始的路径。</p>
</li>
<li><p>$a \implies x \implies y \implies b$ 这是借助 $x,y$ 的路径</p>
</li>
<li><p>$a \implies y \implies x \implies b$ 这是借助 $y,x$ 的路径。</p>
</li>
</ol>
<p>也就是<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;=y&amp;&amp;x%<span class="number">2</span>==y%<span class="number">2</span>)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(T--)&#123;</span><br><span class="line">    <span class="keyword">int</span> x,y,a,b,k;</span><br><span class="line">    read(x);read(y);read(a);read(b);read(k);</span><br><span class="line">    <span class="keyword">int</span> ab=dist(a,b),ax=dist(a,x),yb=dist(b,y),ay=dist(a,y),bx=dist(b,x);</span><br><span class="line">    <span class="keyword">if</span>(check(ab,k)||check(ax+yb+<span class="number">1</span>,k)||check(ay+bx+<span class="number">1</span>,k))<span class="built_in">puts</span>(<span class="string">"YES"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"NO"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>​    </p>
<p>​    </p>
<h3 id="处理往回走"><a href="#处理往回走" class="headerlink" title="处理往回走"></a>处理往回走</h3><p>可能有读者会问，走到 $1$ 个点，再走回来，这个怎么办呢？我们发现走到 $1$ 个点再回来，这样 $1$ 次路径长度是 $2$。所以我们这 $3$ 条路径当中，只要有 $1$ 条路径满足一下 $2$ 个条件，就说明存在这样一条长度为 $k$ 的路径。</p>
<ol>
<li><p><strong>路径长度 $\leq k$ 这一个很显然。</strong>长度 $&gt; k$，显然就是不合法的。</p>
</li>
<li><p><strong>路径长度和 $k$ 奇偶性相同。</strong>这就是基于往回走的做法，奇偶性相同，就代表两个数的差是偶数，所以就是可以组成长度为 $k$ 路径。</p>
</li>
</ol>
<h3 id="预处理-2-点之间的距离"><a href="#预处理-2-点之间的距离" class="headerlink" title="预处理 $2$ 点之间的距离"></a>预处理 $2$ 点之间的距离</h3><p>我们刚才说了，两个点之间的距离显然是要求出来的，我们需要预处理 $LCA$，不会的同学可以左转<a href="https://www.luogu.com.cn/problemnew/solution/P3379" target="_blank" rel="noopener">题解区</a>，我用的是最朴素的倍增 $LCA$。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> f)</span></span>&#123;</span><br><span class="line">    dep[x]=dep[f]+<span class="number">1</span>;</span><br><span class="line">    fa[x][<span class="number">0</span>]=f;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;(<span class="number">1</span>&lt;&lt;i)&lt;=dep[x];i++)</span><br><span class="line">        fa[x][i]=fa[fa[x][i<span class="number">-1</span>]][i<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];i;i=nxt[i])</span><br><span class="line">        <span class="keyword">if</span>(t[i]!=f)dfs(t[i],x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lca</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(dep[x]&lt;dep[y])swap(x,y);</span><br><span class="line">    <span class="keyword">while</span>(dep[x]&gt;dep[y])x=fa[x][lg[dep[x]-dep[y]]<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">if</span>(x==y)<span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=lg[dep[x]]<span class="number">-1</span>;k&gt;=<span class="number">0</span>;k--)</span><br><span class="line">        <span class="keyword">if</span>(fa[x][k]!=fa[y][k])x=fa[x][k],y=fa[y][k];</span><br><span class="line">    <span class="keyword">return</span> fa[x][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dist</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;<span class="comment">//x号节点和y号节点的距离</span></span><br><span class="line">    <span class="keyword">int</span> z=lca(x,y);</span><br><span class="line">    <span class="keyword">return</span> dep[x]+dep[y]-dep[z]*<span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;FF)</span></span>&#123;</span><br><span class="line">    T RR=<span class="number">1</span>;FF=<span class="number">0</span>;<span class="keyword">char</span> CH=getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(CH);CH=getchar())<span class="keyword">if</span>(CH==<span class="string">'-'</span>)RR=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(CH);CH=getchar())FF=(FF&lt;&lt;<span class="number">1</span>)+(FF&lt;&lt;<span class="number">3</span>)+(CH^<span class="number">48</span>);</span><br><span class="line">    FF*=RR;</span><br><span class="line">&#125;<span class="comment">//快读</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">'-'</span>),x*=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;<span class="comment">//快写</span></span><br><span class="line"><span class="keyword">int</span> dep[<span class="number">500010</span>],fa[<span class="number">500010</span>][<span class="number">22</span>],lg[<span class="number">500010</span>],head[<span class="number">500010</span>],nxt[<span class="number">500010</span>],t[<span class="number">500010</span>],tot;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    t[++tot]=y;</span><br><span class="line">    nxt[tot]=head[x];</span><br><span class="line">    head[x]=tot;</span><br><span class="line">&#125;<span class="comment">//连边</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> f)</span></span>&#123;</span><br><span class="line">    dep[x]=dep[f]+<span class="number">1</span>;</span><br><span class="line">    fa[x][<span class="number">0</span>]=f;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;(<span class="number">1</span>&lt;&lt;i)&lt;=dep[x];i++)</span><br><span class="line">        fa[x][i]=fa[fa[x][i<span class="number">-1</span>]][i<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[x];i;i=nxt[i])</span><br><span class="line">        <span class="keyword">if</span>(t[i]!=f)dfs(t[i],x);</span><br><span class="line">&#125;<span class="comment">//预处理father</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lca</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(dep[x]&lt;dep[y])swap(x,y);</span><br><span class="line">    <span class="keyword">while</span>(dep[x]&gt;dep[y])x=fa[x][lg[dep[x]-dep[y]]<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">if</span>(x==y)<span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=lg[dep[x]]<span class="number">-1</span>;k&gt;=<span class="number">0</span>;k--)</span><br><span class="line">        <span class="keyword">if</span>(fa[x][k]!=fa[y][k])x=fa[x][k],y=fa[y][k];</span><br><span class="line">    <span class="keyword">return</span> fa[x][<span class="number">0</span>];</span><br><span class="line">&#125;<span class="comment">//LCA</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dist</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> z=lca(x,y);</span><br><span class="line">    <span class="keyword">return</span> dep[x]+dep[y]-dep[z]*<span class="number">2</span>;</span><br><span class="line">&#125;<span class="comment">//x、y两点之间的距离</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;=k&amp;&amp;x%<span class="number">2</span>==k%<span class="number">2</span>)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;<span class="comment">//检查长度为x的边是否满足前文讲得2个条件</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    read(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        read(x);read(y);</span><br><span class="line">        add(x,y);add(y,x);</span><br><span class="line">    &#125;</span><br><span class="line">    dfs(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)lg[i]=lg[i<span class="number">-1</span>]+(<span class="number">1</span>&lt;&lt;lg[i<span class="number">-1</span>]==i);<span class="comment">//预处理除log</span></span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    read(T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="keyword">int</span> x,y,a,b,k;</span><br><span class="line">        read(x);read(y);read(a);read(b);read(k);</span><br><span class="line">        <span class="keyword">int</span> ab=dist(a,b),ax=dist(a,x),yb=dist(b,y),ay=dist(a,y),bx=dist(b,x);<span class="comment">//3条边</span></span><br><span class="line">        <span class="keyword">if</span>(check(ab,k)||check(ax+yb+<span class="number">1</span>,k)||check(ay+bx+<span class="number">1</span>,k))<span class="built_in">puts</span>(<span class="string">"YES"</span>);<span class="comment">//有1条符合条件，就代表有</span></span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"NO"</span>);<span class="comment">//3条都不符合就代表没有</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>这道题还是很有思考的价值，也算是积累了经验<strong>看到一棵树加 $1$ 条边，未必一定要往基环树想</strong>。希望觉得好的同学可以点赞，有问题请在评论区表述一下，是我的题解都够再完善一下。</p>
]]></content>
      <categories>
        <category>洛谷题库</category>
        <category>CF</category>
      </categories>
      <tags>
        <tag>LCA</tag>
      </tags>
  </entry>
</search>
